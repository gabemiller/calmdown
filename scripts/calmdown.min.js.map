{"version":3,"sources":["webpack:///Calmdown.min.js","webpack:///webpack/bootstrap a4d122515ba615311cf7","webpack:///./src/js/Calmdown.js","webpack:///./src/js/Config.js","webpack:///./src/js/ShowdownConverter.js","webpack:///./~/showdown/dist/showdown.js","webpack:///./src/js/SyntaxHighlighter.js","webpack:///./~/prismjs/prism.js","webpack:///./src/js/SyntaxHighligherLanguages.js","webpack:///./~/prismjs/components/prism-apacheconf.js","webpack:///./~/prismjs/components/prism-bash.js","webpack:///./~/prismjs/components/prism-c.js","webpack:///./~/prismjs/components/prism-coffeescript.js","webpack:///./~/prismjs/components/prism-cpp.js","webpack:///./~/prismjs/components/prism-csharp.js","webpack:///./~/prismjs/components/prism-css.js","webpack:///./~/prismjs/components/prism-git.js","webpack:///./~/prismjs/components/prism-groovy.js","webpack:///./~/prismjs/components/prism-http.js","webpack:///./~/prismjs/components/prism-jade.js","webpack:///./~/prismjs/components/prism-java.js","webpack:///./~/prismjs/components/prism-javascript.js","webpack:///./~/prismjs/components/prism-json.js","webpack:///./~/prismjs/components/prism-latex.js","webpack:///./~/prismjs/components/prism-less.js","webpack:///./~/prismjs/components/prism-markdown.js","webpack:///./~/prismjs/components/prism-markup.js","webpack:///./~/prismjs/components/prism-nginx.js","webpack:///./~/prismjs/components/prism-php.js","webpack:///./~/prismjs/components/prism-properties.js","webpack:///./~/prismjs/components/prism-python.js","webpack:///./~/prismjs/components/prism-scss.js","webpack:///./~/prismjs/components/prism-stylus.js","webpack:///./~/prismjs/components/prism-typescript.js","webpack:///./~/prismjs/components/prism-wiki.js","webpack:///./~/prismjs/components/prism-yaml.js","webpack:///./src/js/TextareaEditor.js","webpack:///./src/js/HTMLElement.js","webpack:///./src/js/Preview.js","webpack:///./src/js/UserInteraction.js","webpack:///./~/mousetrap/mousetrap.js","webpack:///./~/mousetrap/plugins/global-bind/mousetrap-global-bind.js","webpack:///./src/js/EditorUserInteraction.js"],"names":["Calmdown","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_Config","_ShowdownConverter","_TextareaEditor","_Preview","_HTMLElement","_UserInteraction","_EditorUserInteraction","settings","arguments","undefined","this","setDefaults","init","assign","CONFIG","calmdown","document","querySelector","selector","style","width","height","initCodeHightlight","initConverter","initBody","initResize","initEditor","initPreview","initHiddenHtmlInput","initHiddenMarkdownInput","initUserInteraction","initEventListeners","triggerEvents","className","codeHighlightStyle","toolbar","HTMLElement","bodySelector","getElement","calmdownBody","_this","resize","isResizing","addEventListener","e","preventDefault","clientY","offsetTop","offsetHeight","htmlInputSelector","htmlInputElement","name","markdownInputSelector","markdownInputElement","converter","ShowdownConverter","editor","TextareaEditor","editorSelector","getEditor","defaultContent","globalUserInteraction","UserInteraction","editorUserInteraction","EditorUserInteraction","preview","Preview","previewSelector","convertMarkdownToHtmlEventListener","getPreview","copyMarkdownContentToHiddenInputEventListener","insertKeyboardEvent","viewChangeEvents","_this2","keyboardEventGlobal","removeAttribute","focus","maxWidth","border","display","fullsize","processContent","getContent","content","setContent","default","editorType","_interopRequireWildcard","obj","__esModule","newObj","hasOwnProperty","_showdown","showdown","_SyntaxHighlighter","flavor","_converter","Converter","setFlavor","_codeHighlighter","SyntaxHighlighter","getHighlighter","markdown","html","makeHtml","addCodeHighlighting","div","createElement","innerHTML","codeList","getElementsByTagName","highlightElement","get","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","constructor","getDefaultOpts","simple","defaultOptions","omitExtraWLInCodeBlocks","defaultValue","describe","type","noHeaderId","prefixHeaderId","ghCompatibleHeaderId","headerLevelStart","parseImgDimensions","simplifiedAutoLink","excludeTrailingPunctuationFromURLs","literalMidWordUnderscores","strikethrough","tables","tablesHeaderId","ghCodeBlocks","tasklists","smoothLivePreview","smartIndentationFix","description","disableForced4SpacesIndentedSublists","simpleLineBreaks","requireSpaceBeforeHeadingText","ghMentions","JSON","parse","stringify","ret","opt","allOptionsOn","options","validate","extension","errMsg","valid","error","helper","isArray","baseMsg","ext","isString","toLowerCase","isUndefined","listeners","filter","regex","ln","RegExp","replace","escapeCharactersCallback","wholeMatch","m1","charCodeToEscape","charCodeAt","parsers","extensions","globalOptions","github","vanilla","allOn","setOption","getOption","getOptions","resetOptions","Error","preset","option","getFlavor","getFlavorOptions","getDefaultOptions","subParser","func","stdExtName","validExtension","getAllExtensions","removeExtension","resetExtensions","validateExtension","console","warn","a","String","isFunction","getType","toString","forEach","callback","Array","s","escapeCharacters","text","charsToEscape","afterBackslash","regexString","rgxFindMatchPos","str","left","right","flags","t","start","end","f","g","indexOf","x","l","pos","exec","test","lastIndex","index","match","push","matchRecursiveRegExp","matchPos","results","slice","replaceRecursiveRegExp","replacement","repStr","finalStr","lng","bits","join","msg","alert","log","converterOptions","_constructor","gOpt","_parseExtension","legacyExtensionLoading","validExt","langExtensions","outputModifiers","listen","rTrimInputText","rsp","rgx","setConvFlavor","_dispatch","evtName","globals","ei","nText","gHtmlBlocks","gHtmlMdBlocks","gHtmlSpans","gUrls","gTitles","gDimensions","gListLevel","hashLinkCounts","addExtension","useExtension","extensionName","splice","ii","language","output","writeAnchorTag","m2","m3","m4","m5","m6","m7","linkText","linkId","url","title","search","result","wm","st","escape","mentions","username","replaceLink","link","trailingPunctuation","lnkTxt","append","replaceMail","mail","unescapedStr","simpleURLRegex","simpleURLRegex2","delimUrlRegex","simpleMailRegex","delimMailRegex","bq","pre","pattern","codeblock","nextChar","leadingText","numSpaces","addr","encode","ch","Math","floor","random","r","tag","blockText","blockTags","repFunc","txt","config","matches","headerId","escapedId","ghHeaderId","prefixHeader","isNaN","parseInt","setextRegexH1","setextRegexH2","spanGamut","hID","hLevel","hashBlock","matchFound","atxStyle","span","header","writeImageTag","altText","gDims","inlineRegExp","referenceRegExp","processListItems","listStr","trimTrailing","isParagraphed","taskbtn","checked","trim","item","bulletStyle","otp","wm2","parseConsecutiveLists","list","listType","olRgx","ulRgx","counterRxg","parseCL","grafs","split","grafsOut","grafsOutIt","codeFlag","delim","$1","num","$2","re","blankLines","parseStyles","sLine","parseHeaders","tableHeaderId","parseCells","cell","subText","buildTable","headers","cells","tb","tblLgn","tableRgx","rawTable","tableLines","rawHeaders","map","rawStyles","rawCells","styles","shift","row","charCodeToReplace","fromCharCode","_prismjs","Prism","_highlighter","global","_self","window","WorkerGlobalScope","self","lang","uniqueId","_","util","tokens","Token","alias","o","objId","clone","v","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","newToken","token","DFS","visited","plugins","highlightAll","async","env","hooks","run","element","elements","querySelectorAll","parent","parentNode","nodeName","code","textContent","Worker","worker","filename","onmessage","evt","highlightedCode","data","postMessage","immediateClose","highlight","tokenize","strarr","rest","tokenloop","patterns","j","lookbehind","greedy","lookbehindLength","source","delNum","from","to","k","len","after","args","wrapped","apply","all","add","callbacks","matchedStr","classes","attributes","aliases","keys","message","close","script","currentScript","pop","src","hasAttribute","readyState","requestAnimationFrame","setTimeout","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","xml","mathml","svg","css","atrule","rule","string","property","important","function","style-attr","clike","class-name","keyword","boolean","number","operator","javascript","template-string","interpolation","interpolation-punctuation","js","fileHighlight","Extensions","py","rb","ps1","psm1","sh","bat","h","tex","getAttribute","appendChild","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","apacheconf","directive-inline","directive-block","directive-block-parameter","variable","directive-flags","insideString","bash","shebang","macro","directive","constant","coffeescript","class-member","multiline-comment","block-regex","inline-javascript","delimiter","multiline-string","cpp","csharp","generic-method","preprocessor","git","deleted","inserted","command","parameter","coord","commit_sha1","groovy","spock-block","annotation","expression","http","request-line","response-status","header-name","httpLanguages","application/json","application/xml","text/xml","text/html","contentType","jade","multiline-script","filter-name","multiline-plain-text","flow-control","each","branch","mixin","plain-text","filter_pattern","filters","all_filters","java","json","null","jsonp","funcPattern","insideEqu","equation-command","latex","equation","headline","less","mixin-usage","blockquote","hr","url-reference","bold","italic","nginx","php","shell-comment","package","tokenStack","backupCode","properties","python","triple-quoted-string","scss","placeholder","statement","hexcode","stylus","atrule-declaration","variable-declaration","property-declaration","typescript","ts","wiki","block-comment","heading","emphasis","bold italic","symbol","table-tag","table-bar","nowiki","yaml","scalar","datetime","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_HTMLElement2","getPrototypeOf","_element","_editor","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","err","return","_this3","selectionStart","selectionEnd","substring","position","Event","dispatchEvent","params","appendElementToParent","setElementByClassName","event","set","_mousetrap","Mousetrap","bind","bindGlobal","_addEvent","object","attachEvent","_characterFromEvent","character","which","shiftKey","_MAP","_KEYCODE_MAP","_modifiersMatch","modifiers1","modifiers2","sort","_eventModifiers","modifiers","altKey","ctrlKey","metaKey","_preventDefault","returnValue","_stopPropagation","stopPropagation","cancelBubble","_isModifier","_getReverseMap","_REVERSE_MAP","_pickBestAction","action","_keysFromString","combination","_getKeyInfo","_SPECIAL_ALIASES","_SHIFT_MAP","_belongsTo","ancestor","targetElement","_resetSequences","doNotReset","activeSequences","_sequenceLevels","_nextExpectedAction","_getMatches","sequenceName","level","_callbacks","seq","deleteCombo","combo","deleteSequence","_fireCallback","sequence","stopCallback","srcElement","_handleKeyEvent","keyCode","_ignoreNextKeyup","handleKey","_resetSequenceTimer","clearTimeout","_resetTimer","_bindSequence","_increaseSequence","nextAction","_callbackAndReset","isFinal","wrappedCallback","_bindSingle","_directMap","info","_ignoreNextKeypress","_handleKey","maxLevel","processedSequenceCallback","max","ignoreThisKeypress","_bindMultiple","combinations","8","9","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","45","46","91","93","224","106","107","109","110","111","186","187","188","189","190","191","192","219","220","221","222","~","!","@","#","$","%","^","&","*","(",")","+",":","\"","<",">","?","|","plus","mod","navigator","platform","unbind","trigger","reset","tagName","isContentEditable","addKeycodes","documentMousetrap","method","charAt","_globalCallbacks","_originalStopCallback","paused","_UserInteraction2","prefix","suffix","keyboardEvent","actualPosition","getCursorPosition","getSelectedContent","setSelectedContent","setCursorPosition"],"mappings":"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","file":"Calmdown.min.js","sourcesContent":["var Calmdown =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Config = __webpack_require__(2);\n\t\n\tvar _ShowdownConverter = __webpack_require__(3);\n\t\n\tvar _TextareaEditor = __webpack_require__(35);\n\t\n\tvar _Preview = __webpack_require__(37);\n\t\n\tvar _HTMLElement = __webpack_require__(36);\n\t\n\tvar _UserInteraction = __webpack_require__(38);\n\t\n\tvar _EditorUserInteraction = __webpack_require__(41);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Calmdown = function () {\n\t\n\t\t/**\r\n\t  * Represents Calmdown\r\n\t  *\r\n\t  * @constructor\r\n\t  * @param {Object} settings\r\n\t  */\n\t\tfunction Calmdown() {\n\t\t\tvar settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t\t\t_classCallCheck(this, Calmdown);\n\t\n\t\t\tthis.setDefaults(settings);\n\t\t\tthis.init();\n\t\t}\n\t\n\t\t/**\r\n\t  * Set the default values for the Calmdown properties\r\n\t  *\r\n\t  * @param {Object} settings\r\n\t  */\n\t\n\t\n\t\t_createClass(Calmdown, [{\n\t\t\tkey: 'setDefaults',\n\t\t\tvalue: function setDefaults(settings) {\n\t\t\t\tthis.settings = Object.assign(_Config.CONFIG, settings);\n\t\t\t\tthis.calmdown = document.querySelector('.' + this.settings.selector);\n\t\t\t\tthis.calmdown.style = 'width: ' + this.settings.width + '; height: ' + this.settings.height + ';';\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize Calmdown\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'init',\n\t\t\tvalue: function init() {\n\t\t\t\tthis.initCodeHightlight();\n\t\t\t\tthis.initConverter();\n\t\t\t\tthis.initBody();\n\t\t\t\tthis.initResize();\n\t\t\t\tthis.initEditor();\n\t\t\t\tthis.initPreview();\n\t\t\t\tthis.initHiddenHtmlInput();\n\t\t\t\tthis.initHiddenMarkdownInput();\n\t\t\t\tthis.initUserInteraction();\n\t\t\t\tthis.initEventListeners();\n\t\t\t\tthis.triggerEvents();\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize code higlighting\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initCodeHightlight',\n\t\t\tvalue: function initCodeHightlight() {\n\t\t\t\tthis.calmdown.className += ' ' + this.settings.codeHighlightStyle;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize toolbar\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initToolbar',\n\t\t\tvalue: function initToolbar() {\n\t\t\t\tthis.toolbar = new _HTMLElement.HTMLElement('div', this.settings.bodySelector, this.calmdown).getElement;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize body\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initBody',\n\t\t\tvalue: function initBody() {\n\t\t\t\tthis.calmdownBody = new _HTMLElement.HTMLElement('div', this.settings.bodySelector, this.calmdown).getElement;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize resizer div\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initResize',\n\t\t\tvalue: function initResize() {\n\t\t\t\tvar _this = this;\n\t\n\t\t\t\tthis.resize = new _HTMLElement.HTMLElement('div', 'cd-resize', this.calmdown).getElement;\n\t\t\t\tnew _HTMLElement.HTMLElement('span', 'cd-bars', this.resize);\n\t\n\t\t\t\tvar isResizing = false;\n\t\t\t\tthis.resize.addEventListener('mousedown', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tisResizing = true;\n\t\t\t\t});\n\t\t\t\tdocument.addEventListener('mousemove', function (e) {\n\t\t\t\t\tif (isResizing) {\n\t\t\t\t\t\t_this.calmdown.style.height = e.clientY - _this.calmdown.offsetTop + _this.resize.offsetHeight / 2 + 'px';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.resize.addEventListener('mouseup', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tisResizing = false;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize hidden html input\r\n\t   *\r\n\t   * This textarea value can be sent through some http methods\r\n\t   * to the server for further processing.\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initHiddenHtmlInput',\n\t\t\tvalue: function initHiddenHtmlInput() {\n\t\t\t\tif (this.settings.htmlInputSelector != null) {\n\t\t\t\t\tthis.htmlInputElement = new _HTMLElement.HTMLElement('textarea', this.settings.htmlInputSelector, this.calmdown, {\n\t\t\t\t\t\tname: this.settings.htmlInputSelector,\n\t\t\t\t\t\tstyle: 'display: none;'\n\t\t\t\t\t}).getElement;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize hidden markdown input\r\n\t   *\r\n\t   * This textarea value can be sent through some http methods\r\n\t   * to the server for further processing.\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initHiddenMarkdownInput',\n\t\t\tvalue: function initHiddenMarkdownInput() {\n\t\t\t\tif (this.settings.markdownInputSelector != null) {\n\t\t\t\t\tthis.markdownInputElement = new _HTMLElement.HTMLElement('textarea', this.settings.markdownInputSelector, this.calmdown, {\n\t\t\t\t\t\tname: this.settings.markdownInputSelector,\n\t\t\t\t\t\tstyle: 'display: none;'\n\t\t\t\t\t}).getElement;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize markdown converter\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initConverter',\n\t\t\tvalue: function initConverter() {\n\t\t\t\tthis.converter = new _ShowdownConverter.ShowdownConverter();\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize editor area\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initEditor',\n\t\t\tvalue: function initEditor() {\n\t\t\t\tthis.editor = new _TextareaEditor.TextareaEditor(this.settings.editorSelector, this.calmdownBody);\n\t\t\t\tthis.editor.getEditor.value = this.settings.defaultContent;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   *\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initUserInteraction',\n\t\t\tvalue: function initUserInteraction() {\n\t\t\t\tthis.globalUserInteraction = new _UserInteraction.UserInteraction();\n\t\t\t\tthis.editorUserInteraction = new _EditorUserInteraction.EditorUserInteraction(this.editor);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize preview area\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initPreview',\n\t\t\tvalue: function initPreview() {\n\t\t\t\tthis.preview = new _Preview.Preview(this.settings.previewSelector, this.calmdownBody);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize event listeners\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initEventListeners',\n\t\t\tvalue: function initEventListeners() {\n\t\t\t\t// Convert markdown to html\n\t\t\t\tthis.editor.convertMarkdownToHtmlEventListener([this.preview.getPreview, this.htmlInputElement], this.converter);\n\t\n\t\t\t\t// Copy markdown to hidden input\n\t\t\t\t// This is useful when you do not want to send data through AJAX\n\t\t\t\tthis.editor.copyMarkdownContentToHiddenInputEventListener(this.markdownInputElement);\n\t\n\t\t\t\t// Initialize insert keyboard events\n\t\t\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+b', '**', '**');\n\t\t\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+i', '_', '_');\n\t\t\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+u', '~~', '~~');\n\t\t\t\tthis.editorUserInteraction.insertKeyboardEvent('tab', '\\t');\n\t\t\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+shift+i', '![', ']()');\n\t\t\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+l', '[', ']()');\n\t\t\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+k', '\\`\\`\\`', '\\n\\`\\`\\`');\n\t\t\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+shift+k', '\\`', '\\`');\n\t\n\t\t\t\t// Initialize view change events\n\t\t\t\tthis.viewChangeEvents();\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Set the view to show editor or preview or both\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'viewChangeEvents',\n\t\t\tvalue: function viewChangeEvents() {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\t// Show editor and preview\n\t\t\t\tthis.globalUserInteraction.keyboardEventGlobal('alt+1', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t_this2.editor.getEditor.removeAttribute('style');\n\t\t\t\t\t_this2.preview.getPreview.removeAttribute('style');\n\t\t\t\t\t_this2.editor.getEditor.focus();\n\t\t\t\t});\n\t\n\t\t\t\t// Show only editor\n\t\t\t\tthis.globalUserInteraction.keyboardEventGlobal('alt+2', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t_this2.editor.getEditor.removeAttribute('style');\n\t\t\t\t\t_this2.preview.getPreview.removeAttribute('style');\n\t\t\t\t\t_this2.editor.getEditor.style.maxWidth = '100%';\n\t\t\t\t\t_this2.editor.getEditor.style.border = '0';\n\t\t\t\t\t_this2.editor.getEditor.focus();\n\t\t\t\t\t_this2.preview.getPreview.style.display = 'none';\n\t\t\t\t});\n\t\n\t\t\t\t// Show only preview\n\t\t\t\tthis.globalUserInteraction.keyboardEventGlobal('alt+3', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t_this2.editor.getEditor.removeAttribute('style');\n\t\t\t\t\t_this2.preview.getPreview.removeAttribute('style');\n\t\t\t\t\t_this2.editor.getEditor.style.display = 'none';\n\t\t\t\t\t_this2.preview.getPreview.style.maxWidth = '100%';\n\t\t\t\t});\n\t\n\t\t\t\tvar fullsize = false;\n\t\t\t\t// Set calmdown full screen\n\t\t\t\tthis.globalUserInteraction.keyboardEventGlobal('alt+enter', function (e) {\n\t\t\t\t\tif (!fullsize) {\n\t\t\t\t\t\t_this2.calmdown.style = 'position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: 9999';\n\t\t\t\t\t\t_this2.resize.style.display = 'none';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this2.calmdown.style = 'width: ' + _this2.settings.width + '; height: ' + _this2.settings.height + ';';\n\t\t\t\t\t\t_this2.resize.removeAttribute('style');\n\t\t\t\t\t}\n\t\t\t\t\tfullsize = !fullsize;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Trigger the processing event\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'triggerEvents',\n\t\t\tvalue: function triggerEvents() {\n\t\t\t\tthis.editor.processContent();\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Get the editor content\r\n\t   *\r\n\t   * @returns {String} -  the string value of the editor content\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'getContent',\n\t\t\tvalue: function getContent() {\n\t\t\t\treturn this.editor.getContent();\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   *  Set the editor content\r\n\t   *\r\n\t   * @param {String} content - the new value of the editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'setContent',\n\t\t\tvalue: function setContent(content) {\n\t\t\t\tthis.editor.setContent(content);\n\t\t\t\tthis.editor.processContent();\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Calmdown;\n\t}();\n\t\n\texports.default = Calmdown;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tvar CONFIG = exports.CONFIG = {\n\t\n\t\t/**\r\n\t  * @type {String}\r\n\t  */\n\t\t'width': '100%',\n\t\n\t\t/**\r\n\t  * @type {String}\r\n\t  */\n\t\t'height': '500px',\n\t\n\t\t/**\r\n\t  * @type {String}\r\n\t  */\n\t\t'selector': 'calmdown',\n\t\n\t\t/**\r\n\t  * @type {String}\r\n\t  */\n\t\t'bodySelector': 'cd-body',\n\t\n\t\t/**\r\n\t  * @type {String}\r\n\t  */\n\t\t'editorSelector': 'cd-editor',\n\t\n\t\t/**\r\n\t  * @type {String|null}\r\n\t  */\n\t\t'previewSelector': 'cd-preview',\n\t\n\t\t/**\r\n\t  * @type {String|null}\r\n\t  */\n\t\t'markdownInputSelector': 'cd-markdown-input',\n\t\n\t\t/**\r\n\t  * @type {String|null}\r\n\t  */\n\t\t'htmlInputSelector': 'cd-html-input',\n\t\n\t\t/**\r\n\t  * @type {String}\r\n\t  */\n\t\t'codeHighlightStyle': 'cd-highlight-default',\n\t\n\t\t/**\r\n\t  * @type {String}\r\n\t  */\n\t\t'editorType': 'textarea',\n\t\n\t\t/**\r\n\t  * @type {String}\r\n\t  */\n\t\t'defaultContent': ''\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.ShowdownConverter = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _showdown = __webpack_require__(4);\n\t\n\tvar showdown = _interopRequireWildcard(_showdown);\n\t\n\tvar _SyntaxHighlighter = __webpack_require__(5);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ShowdownConverter = exports.ShowdownConverter = function () {\n\t\n\t\t/**\r\n\t  * Represents ShowdownConverter\r\n\t  *\r\n\t  * @param {String} flavor - flavor of the converter\r\n\t \t */\n\t\tfunction ShowdownConverter() {\n\t\t\tvar flavor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'github';\n\t\n\t\t\t_classCallCheck(this, ShowdownConverter);\n\t\n\t\t\tthis._converter = new showdown.Converter();\n\t\t\tthis.setFlavor(flavor);\n\t\t\tthis._codeHighlighter = new _SyntaxHighlighter.SyntaxHighlighter().getHighlighter;\n\t\t}\n\t\n\t\t/**\r\n\t  * Get the showdown converter\r\n\t  *\r\n\t  * @returns {showdown.Converter} - showdown markdown converter\r\n\t  */\n\t\n\t\n\t\t_createClass(ShowdownConverter, [{\n\t\t\tkey: 'setFlavor',\n\t\n\t\n\t\t\t/**\r\n\t   * Set the flavor of the showdown converter\r\n\t   *\r\n\t   * @param {String} flavor - flavor of the converter\r\n\t   */\n\t\t\tvalue: function setFlavor(flavor) {\n\t\t\t\tthis._converter.setFlavor(flavor);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Generate html from the markdown\r\n\t   *\r\n\t   * @param {String} markdown - markdown from the editor\r\n\t   * @returns {String} - the generated html\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'makeHtml',\n\t\t\tvalue: function makeHtml(markdown) {\n\t\t\t\tvar html = this._converter.makeHtml(markdown);\n\t\t\t\treturn this._codeHighlighter == null ? html : this.addCodeHighlighting(html);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Get a syntax highlighted version of the given html code tags\r\n\t   *\r\n\t   * @param {String} html - the generated html\r\n\t   * @returns {String} - the generated html with syntax highlight\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'addCodeHighlighting',\n\t\t\tvalue: function addCodeHighlighting(html) {\n\t\t\t\tvar div = document.createElement('div');\n\t\t\t\tdiv.innerHTML = html;\n\t\t\t\tvar codeList = div.getElementsByTagName('code');\n\t\t\t\tfor (var i = 0; i < codeList.length; i++) {\n\t\t\t\t\tthis._codeHighlighter.highlightElement(codeList[i]);\n\t\t\t\t}\n\t\t\t\treturn div.innerHTML;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getConverter',\n\t\t\tget: function get() {\n\t\t\t\treturn this._converter;\n\t\t\t}\n\t\t}]);\n\n\t\treturn ShowdownConverter;\n\t}();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t; /*! showdown 09-01-2017 */\n\t(function () {\n\t  /**\n\t   * Created by Tivie on 13-07-2015.\n\t   */\n\t\n\t  function getDefaultOpts(simple) {\n\t    'use strict';\n\t\n\t    var defaultOptions = {\n\t      omitExtraWLInCodeBlocks: {\n\t        defaultValue: false,\n\t        describe: 'Omit the default extra whiteline added to code blocks',\n\t        type: 'boolean'\n\t      },\n\t      noHeaderId: {\n\t        defaultValue: false,\n\t        describe: 'Turn on/off generated header id',\n\t        type: 'boolean'\n\t      },\n\t      prefixHeaderId: {\n\t        defaultValue: false,\n\t        describe: 'Specify a prefix to generated header ids',\n\t        type: 'string'\n\t      },\n\t      ghCompatibleHeaderId: {\n\t        defaultValue: false,\n\t        describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\n\t        type: 'boolean'\n\t      },\n\t      headerLevelStart: {\n\t        defaultValue: false,\n\t        describe: 'The header blocks level start',\n\t        type: 'integer'\n\t      },\n\t      parseImgDimensions: {\n\t        defaultValue: false,\n\t        describe: 'Turn on/off image dimension parsing',\n\t        type: 'boolean'\n\t      },\n\t      simplifiedAutoLink: {\n\t        defaultValue: false,\n\t        describe: 'Turn on/off GFM autolink style',\n\t        type: 'boolean'\n\t      },\n\t      excludeTrailingPunctuationFromURLs: {\n\t        defaultValue: false,\n\t        describe: 'Excludes trailing punctuation from links generated with autoLinking',\n\t        type: 'boolean'\n\t      },\n\t      literalMidWordUnderscores: {\n\t        defaultValue: false,\n\t        describe: 'Parse midword underscores as literal underscores',\n\t        type: 'boolean'\n\t      },\n\t      strikethrough: {\n\t        defaultValue: false,\n\t        describe: 'Turn on/off strikethrough support',\n\t        type: 'boolean'\n\t      },\n\t      tables: {\n\t        defaultValue: false,\n\t        describe: 'Turn on/off tables support',\n\t        type: 'boolean'\n\t      },\n\t      tablesHeaderId: {\n\t        defaultValue: false,\n\t        describe: 'Add an id to table headers',\n\t        type: 'boolean'\n\t      },\n\t      ghCodeBlocks: {\n\t        defaultValue: true,\n\t        describe: 'Turn on/off GFM fenced code blocks support',\n\t        type: 'boolean'\n\t      },\n\t      tasklists: {\n\t        defaultValue: false,\n\t        describe: 'Turn on/off GFM tasklist support',\n\t        type: 'boolean'\n\t      },\n\t      smoothLivePreview: {\n\t        defaultValue: false,\n\t        describe: 'Prevents weird effects in live previews due to incomplete input',\n\t        type: 'boolean'\n\t      },\n\t      smartIndentationFix: {\n\t        defaultValue: false,\n\t        description: 'Tries to smartly fix indentation in es6 strings',\n\t        type: 'boolean'\n\t      },\n\t      disableForced4SpacesIndentedSublists: {\n\t        defaultValue: false,\n\t        description: 'Disables the requirement of indenting nested sublists by 4 spaces',\n\t        type: 'boolean'\n\t      },\n\t      simpleLineBreaks: {\n\t        defaultValue: false,\n\t        description: 'Parses simple line breaks as <br> (GFM Style)',\n\t        type: 'boolean'\n\t      },\n\t      requireSpaceBeforeHeadingText: {\n\t        defaultValue: false,\n\t        description: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\n\t        type: 'boolean'\n\t      },\n\t      ghMentions: {\n\t        defaultValue: false,\n\t        description: 'Enables github @mentions',\n\t        type: 'boolean'\n\t      }\n\t    };\n\t    if (simple === false) {\n\t      return JSON.parse(JSON.stringify(defaultOptions));\n\t    }\n\t    var ret = {};\n\t    for (var opt in defaultOptions) {\n\t      if (defaultOptions.hasOwnProperty(opt)) {\n\t        ret[opt] = defaultOptions[opt].defaultValue;\n\t      }\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  function allOptionsOn() {\n\t    'use strict';\n\t\n\t    var options = getDefaultOpts(true),\n\t        ret = {};\n\t    for (var opt in options) {\n\t      if (options.hasOwnProperty(opt)) {\n\t        ret[opt] = true;\n\t      }\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  /**\n\t   * Created by Tivie on 06-01-2015.\n\t   */\n\t\n\t  // Private properties\n\t  var showdown = {},\n\t      parsers = {},\n\t      extensions = {},\n\t      globalOptions = getDefaultOpts(true),\n\t      setFlavor = 'vanilla',\n\t      flavor = {\n\t    github: {\n\t      omitExtraWLInCodeBlocks: true,\n\t      prefixHeaderId: 'user-content-',\n\t      simplifiedAutoLink: true,\n\t      excludeTrailingPunctuationFromURLs: true,\n\t      literalMidWordUnderscores: true,\n\t      strikethrough: true,\n\t      tables: true,\n\t      tablesHeaderId: true,\n\t      ghCodeBlocks: true,\n\t      tasklists: true,\n\t      disableForced4SpacesIndentedSublists: true,\n\t      simpleLineBreaks: true,\n\t      requireSpaceBeforeHeadingText: true,\n\t      ghCompatibleHeaderId: true,\n\t      ghMentions: true\n\t    },\n\t    vanilla: getDefaultOpts(true),\n\t    allOn: allOptionsOn()\n\t  };\n\t\n\t  /**\n\t   * helper namespace\n\t   * @type {{}}\n\t   */\n\t  showdown.helper = {};\n\t\n\t  /**\n\t   * TODO LEGACY SUPPORT CODE\n\t   * @type {{}}\n\t   */\n\t  showdown.extensions = {};\n\t\n\t  /**\n\t   * Set a global option\n\t   * @static\n\t   * @param {string} key\n\t   * @param {*} value\n\t   * @returns {showdown}\n\t   */\n\t  showdown.setOption = function (key, value) {\n\t    'use strict';\n\t\n\t    globalOptions[key] = value;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Get a global option\n\t   * @static\n\t   * @param {string} key\n\t   * @returns {*}\n\t   */\n\t  showdown.getOption = function (key) {\n\t    'use strict';\n\t\n\t    return globalOptions[key];\n\t  };\n\t\n\t  /**\n\t   * Get the global options\n\t   * @static\n\t   * @returns {{}}\n\t   */\n\t  showdown.getOptions = function () {\n\t    'use strict';\n\t\n\t    return globalOptions;\n\t  };\n\t\n\t  /**\n\t   * Reset global options to the default values\n\t   * @static\n\t   */\n\t  showdown.resetOptions = function () {\n\t    'use strict';\n\t\n\t    globalOptions = getDefaultOpts(true);\n\t  };\n\t\n\t  /**\n\t   * Set the flavor showdown should use as default\n\t   * @param {string} name\n\t   */\n\t  showdown.setFlavor = function (name) {\n\t    'use strict';\n\t\n\t    if (!flavor.hasOwnProperty(name)) {\n\t      throw Error(name + ' flavor was not found');\n\t    }\n\t    var preset = flavor[name];\n\t    setFlavor = name;\n\t    for (var option in preset) {\n\t      if (preset.hasOwnProperty(option)) {\n\t        globalOptions[option] = preset[option];\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the currently set flavor\n\t   * @returns {string}\n\t   */\n\t  showdown.getFlavor = function () {\n\t    'use strict';\n\t\n\t    return setFlavor;\n\t  };\n\t\n\t  /**\n\t   * Get the options of a specified flavor. Returns undefined if the flavor was not found\n\t   * @param {string} name Name of the flavor\n\t   * @returns {{}|undefined}\n\t   */\n\t  showdown.getFlavorOptions = function (name) {\n\t    'use strict';\n\t\n\t    if (flavor.hasOwnProperty(name)) {\n\t      return flavor[name];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the default options\n\t   * @static\n\t   * @param {boolean} [simple=true]\n\t   * @returns {{}}\n\t   */\n\t  showdown.getDefaultOptions = function (simple) {\n\t    'use strict';\n\t\n\t    return getDefaultOpts(simple);\n\t  };\n\t\n\t  /**\n\t   * Get or set a subParser\n\t   *\n\t   * subParser(name)       - Get a registered subParser\n\t   * subParser(name, func) - Register a subParser\n\t   * @static\n\t   * @param {string} name\n\t   * @param {function} [func]\n\t   * @returns {*}\n\t   */\n\t  showdown.subParser = function (name, func) {\n\t    'use strict';\n\t\n\t    if (showdown.helper.isString(name)) {\n\t      if (typeof func !== 'undefined') {\n\t        parsers[name] = func;\n\t      } else {\n\t        if (parsers.hasOwnProperty(name)) {\n\t          return parsers[name];\n\t        } else {\n\t          throw Error('SubParser named ' + name + ' not registered!');\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Gets or registers an extension\n\t   * @static\n\t   * @param {string} name\n\t   * @param {object|function=} ext\n\t   * @returns {*}\n\t   */\n\t  showdown.extension = function (name, ext) {\n\t    'use strict';\n\t\n\t    if (!showdown.helper.isString(name)) {\n\t      throw Error('Extension \\'name\\' must be a string');\n\t    }\n\t\n\t    name = showdown.helper.stdExtName(name);\n\t\n\t    // Getter\n\t    if (showdown.helper.isUndefined(ext)) {\n\t      if (!extensions.hasOwnProperty(name)) {\n\t        throw Error('Extension named ' + name + ' is not registered!');\n\t      }\n\t      return extensions[name];\n\t\n\t      // Setter\n\t    } else {\n\t      // Expand extension if it's wrapped in a function\n\t      if (typeof ext === 'function') {\n\t        ext = ext();\n\t      }\n\t\n\t      // Ensure extension is an array\n\t      if (!showdown.helper.isArray(ext)) {\n\t        ext = [ext];\n\t      }\n\t\n\t      var validExtension = validate(ext, name);\n\t\n\t      if (validExtension.valid) {\n\t        extensions[name] = ext;\n\t      } else {\n\t        throw Error(validExtension.error);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Gets all extensions registered\n\t   * @returns {{}}\n\t   */\n\t  showdown.getAllExtensions = function () {\n\t    'use strict';\n\t\n\t    return extensions;\n\t  };\n\t\n\t  /**\n\t   * Remove an extension\n\t   * @param {string} name\n\t   */\n\t  showdown.removeExtension = function (name) {\n\t    'use strict';\n\t\n\t    delete extensions[name];\n\t  };\n\t\n\t  /**\n\t   * Removes all extensions\n\t   */\n\t  showdown.resetExtensions = function () {\n\t    'use strict';\n\t\n\t    extensions = {};\n\t  };\n\t\n\t  /**\n\t   * Validate extension\n\t   * @param {array} extension\n\t   * @param {string} name\n\t   * @returns {{valid: boolean, error: string}}\n\t   */\n\t  function validate(extension, name) {\n\t    'use strict';\n\t\n\t    var errMsg = name ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n\t        ret = {\n\t      valid: true,\n\t      error: ''\n\t    };\n\t\n\t    if (!showdown.helper.isArray(extension)) {\n\t      extension = [extension];\n\t    }\n\t\n\t    for (var i = 0; i < extension.length; ++i) {\n\t      var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n\t          ext = extension[i];\n\t      if ((typeof ext === 'undefined' ? 'undefined' : _typeof(ext)) !== 'object') {\n\t        ret.valid = false;\n\t        ret.error = baseMsg + 'must be an object, but ' + (typeof ext === 'undefined' ? 'undefined' : _typeof(ext)) + ' given';\n\t        return ret;\n\t      }\n\t\n\t      if (!showdown.helper.isString(ext.type)) {\n\t        ret.valid = false;\n\t        ret.error = baseMsg + 'property \"type\" must be a string, but ' + _typeof(ext.type) + ' given';\n\t        return ret;\n\t      }\n\t\n\t      var type = ext.type = ext.type.toLowerCase();\n\t\n\t      // normalize extension type\n\t      if (type === 'language') {\n\t        type = ext.type = 'lang';\n\t      }\n\t\n\t      if (type === 'html') {\n\t        type = ext.type = 'output';\n\t      }\n\t\n\t      if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n\t        ret.valid = false;\n\t        ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n\t        return ret;\n\t      }\n\t\n\t      if (type === 'listener') {\n\t        if (showdown.helper.isUndefined(ext.listeners)) {\n\t          ret.valid = false;\n\t          ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n\t          return ret;\n\t        }\n\t      } else {\n\t        if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n\t          ret.valid = false;\n\t          ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n\t          return ret;\n\t        }\n\t      }\n\t\n\t      if (ext.listeners) {\n\t        if (_typeof(ext.listeners) !== 'object') {\n\t          ret.valid = false;\n\t          ret.error = baseMsg + '\"listeners\" property must be an object but ' + _typeof(ext.listeners) + ' given';\n\t          return ret;\n\t        }\n\t        for (var ln in ext.listeners) {\n\t          if (ext.listeners.hasOwnProperty(ln)) {\n\t            if (typeof ext.listeners[ln] !== 'function') {\n\t              ret.valid = false;\n\t              ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln + ' must be a function but ' + _typeof(ext.listeners[ln]) + ' given';\n\t              return ret;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      if (ext.filter) {\n\t        if (typeof ext.filter !== 'function') {\n\t          ret.valid = false;\n\t          ret.error = baseMsg + '\"filter\" must be a function, but ' + _typeof(ext.filter) + ' given';\n\t          return ret;\n\t        }\n\t      } else if (ext.regex) {\n\t        if (showdown.helper.isString(ext.regex)) {\n\t          ext.regex = new RegExp(ext.regex, 'g');\n\t        }\n\t        if (!ext.regex instanceof RegExp) {\n\t          ret.valid = false;\n\t          ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + _typeof(ext.regex) + ' given';\n\t          return ret;\n\t        }\n\t        if (showdown.helper.isUndefined(ext.replace)) {\n\t          ret.valid = false;\n\t          ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n\t          return ret;\n\t        }\n\t      }\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  /**\n\t   * Validate extension\n\t   * @param {object} ext\n\t   * @returns {boolean}\n\t   */\n\t  showdown.validateExtension = function (ext) {\n\t    'use strict';\n\t\n\t    var validateExtension = validate(ext, null);\n\t    if (!validateExtension.valid) {\n\t      console.warn(validateExtension.error);\n\t      return false;\n\t    }\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * showdownjs helper functions\n\t   */\n\t\n\t  if (!showdown.hasOwnProperty('helper')) {\n\t    showdown.helper = {};\n\t  }\n\t\n\t  /**\n\t   * Check if var is string\n\t   * @static\n\t   * @param {string} a\n\t   * @returns {boolean}\n\t   */\n\t  showdown.helper.isString = function isString(a) {\n\t    'use strict';\n\t\n\t    return typeof a === 'string' || a instanceof String;\n\t  };\n\t\n\t  /**\n\t   * Check if var is a function\n\t   * @static\n\t   * @param {string} a\n\t   * @returns {boolean}\n\t   */\n\t  showdown.helper.isFunction = function isFunction(a) {\n\t    'use strict';\n\t\n\t    var getType = {};\n\t    return a && getType.toString.call(a) === '[object Function]';\n\t  };\n\t\n\t  /**\n\t   * ForEach helper function\n\t   * @static\n\t   * @param {*} obj\n\t   * @param {function} callback\n\t   */\n\t  showdown.helper.forEach = function forEach(obj, callback) {\n\t    'use strict';\n\t\n\t    if (typeof obj.forEach === 'function') {\n\t      obj.forEach(callback);\n\t    } else {\n\t      for (var i = 0; i < obj.length; i++) {\n\t        callback(obj[i], i, obj);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * isArray helper function\n\t   * @static\n\t   * @param {*} a\n\t   * @returns {boolean}\n\t   */\n\t  showdown.helper.isArray = function isArray(a) {\n\t    'use strict';\n\t\n\t    return a.constructor === Array;\n\t  };\n\t\n\t  /**\n\t   * Check if value is undefined\n\t   * @static\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t   */\n\t  showdown.helper.isUndefined = function isUndefined(value) {\n\t    'use strict';\n\t\n\t    return typeof value === 'undefined';\n\t  };\n\t\n\t  /**\n\t   * Standardidize extension name\n\t   * @static\n\t   * @param {string} s extension name\n\t   * @returns {string}\n\t   */\n\t  showdown.helper.stdExtName = function (s) {\n\t    'use strict';\n\t\n\t    return s.replace(/[_-]||\\s/g, '').toLowerCase();\n\t  };\n\t\n\t  function escapeCharactersCallback(wholeMatch, m1) {\n\t    'use strict';\n\t\n\t    var charCodeToEscape = m1.charCodeAt(0);\n\t    return '~E' + charCodeToEscape + 'E';\n\t  }\n\t\n\t  /**\n\t   * Callback used to escape characters when passing through String.replace\n\t   * @static\n\t   * @param {string} wholeMatch\n\t   * @param {string} m1\n\t   * @returns {string}\n\t   */\n\t  showdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\t\n\t  /**\n\t   * Escape characters in a string\n\t   * @static\n\t   * @param {string} text\n\t   * @param {string} charsToEscape\n\t   * @param {boolean} afterBackslash\n\t   * @returns {XML|string|void|*}\n\t   */\n\t  showdown.helper.escapeCharacters = function escapeCharacters(text, charsToEscape, afterBackslash) {\n\t    'use strict';\n\t    // First we have to escape the escape characters so that\n\t    // we can build a character class out of them\n\t\n\t    var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\t\n\t    if (afterBackslash) {\n\t      regexString = '\\\\\\\\' + regexString;\n\t    }\n\t\n\t    var regex = new RegExp(regexString, 'g');\n\t    text = text.replace(regex, escapeCharactersCallback);\n\t\n\t    return text;\n\t  };\n\t\n\t  var rgxFindMatchPos = function rgxFindMatchPos(str, left, right, flags) {\n\t    'use strict';\n\t\n\t    var f = flags || '',\n\t        g = f.indexOf('g') > -1,\n\t        x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n\t        l = new RegExp(left, f.replace(/g/g, '')),\n\t        pos = [],\n\t        t,\n\t        s,\n\t        m,\n\t        start,\n\t        end;\n\t\n\t    do {\n\t      t = 0;\n\t      while (m = x.exec(str)) {\n\t        if (l.test(m[0])) {\n\t          if (!t++) {\n\t            s = x.lastIndex;\n\t            start = s - m[0].length;\n\t          }\n\t        } else if (t) {\n\t          if (! --t) {\n\t            end = m.index + m[0].length;\n\t            var obj = {\n\t              left: { start: start, end: s },\n\t              match: { start: s, end: m.index },\n\t              right: { start: m.index, end: end },\n\t              wholeMatch: { start: start, end: end }\n\t            };\n\t            pos.push(obj);\n\t            if (!g) {\n\t              return pos;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    } while (t && (x.lastIndex = s));\n\t\n\t    return pos;\n\t  };\n\t\n\t  /**\n\t   * matchRecursiveRegExp\n\t   *\n\t   * (c) 2007 Steven Levithan <stevenlevithan.com>\n\t   * MIT License\n\t   *\n\t   * Accepts a string to search, a left and right format delimiter\n\t   * as regex patterns, and optional regex flags. Returns an array\n\t   * of matches, allowing nested instances of left/right delimiters.\n\t   * Use the \"g\" flag to return all matches, otherwise only the\n\t   * first is returned. Be careful to ensure that the left and\n\t   * right format delimiters produce mutually exclusive matches.\n\t   * Backreferences are not supported within the right delimiter\n\t   * due to how it is internally combined with the left delimiter.\n\t   * When matching strings whose format delimiters are unbalanced\n\t   * to the left or right, the output is intentionally as a\n\t   * conventional regex library with recursion support would\n\t   * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n\t   * \"<\" and \">\" as the delimiters (both strings contain a single,\n\t   * balanced instance of \"<x>\").\n\t   *\n\t   * examples:\n\t   * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n\t   * returns: []\n\t   * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n\t   * returns: [\"t<<e>><s>\", \"\"]\n\t   * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n\t   * returns: [\"test\"]\n\t   */\n\t  showdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n\t    'use strict';\n\t\n\t    var matchPos = rgxFindMatchPos(str, left, right, flags),\n\t        results = [];\n\t\n\t    for (var i = 0; i < matchPos.length; ++i) {\n\t      results.push([str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end), str.slice(matchPos[i].match.start, matchPos[i].match.end), str.slice(matchPos[i].left.start, matchPos[i].left.end), str.slice(matchPos[i].right.start, matchPos[i].right.end)]);\n\t    }\n\t    return results;\n\t  };\n\t\n\t  /**\n\t   *\n\t   * @param {string} str\n\t   * @param {string|function} replacement\n\t   * @param {string} left\n\t   * @param {string} right\n\t   * @param {string} flags\n\t   * @returns {string}\n\t   */\n\t  showdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n\t    'use strict';\n\t\n\t    if (!showdown.helper.isFunction(replacement)) {\n\t      var repStr = replacement;\n\t      replacement = function replacement() {\n\t        return repStr;\n\t      };\n\t    }\n\t\n\t    var matchPos = rgxFindMatchPos(str, left, right, flags),\n\t        finalStr = str,\n\t        lng = matchPos.length;\n\t\n\t    if (lng > 0) {\n\t      var bits = [];\n\t      if (matchPos[0].wholeMatch.start !== 0) {\n\t        bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n\t      }\n\t      for (var i = 0; i < lng; ++i) {\n\t        bits.push(replacement(str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end), str.slice(matchPos[i].match.start, matchPos[i].match.end), str.slice(matchPos[i].left.start, matchPos[i].left.end), str.slice(matchPos[i].right.start, matchPos[i].right.end)));\n\t        if (i < lng - 1) {\n\t          bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n\t        }\n\t      }\n\t      if (matchPos[lng - 1].wholeMatch.end < str.length) {\n\t        bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n\t      }\n\t      finalStr = bits.join('');\n\t    }\n\t    return finalStr;\n\t  };\n\t\n\t  /**\n\t   * POLYFILLS\n\t   */\n\t  // use this instead of builtin is undefined for IE8 compatibility\n\t  if (typeof console === 'undefined') {\n\t    console = {\n\t      warn: function warn(msg) {\n\t        'use strict';\n\t\n\t        alert(msg);\n\t      },\n\t      log: function log(msg) {\n\t        'use strict';\n\t\n\t        alert(msg);\n\t      },\n\t      error: function error(msg) {\n\t        'use strict';\n\t\n\t        throw msg;\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Created by Estevao on 31-05-2015.\n\t   */\n\t\n\t  /**\n\t   * Showdown Converter class\n\t   * @class\n\t   * @param {object} [converterOptions]\n\t   * @returns {Converter}\n\t   */\n\t  showdown.Converter = function (converterOptions) {\n\t    'use strict';\n\t\n\t    var\n\t    /**\n\t     * Options used by this converter\n\t     * @private\n\t     * @type {{}}\n\t     */\n\t    options = {},\n\t\n\t\n\t    /**\n\t     * Language extensions used by this converter\n\t     * @private\n\t     * @type {Array}\n\t     */\n\t    langExtensions = [],\n\t\n\t\n\t    /**\n\t     * Output modifiers extensions used by this converter\n\t     * @private\n\t     * @type {Array}\n\t     */\n\t    outputModifiers = [],\n\t\n\t\n\t    /**\n\t     * Event listeners\n\t     * @private\n\t     * @type {{}}\n\t     */\n\t    listeners = {},\n\t\n\t\n\t    /**\n\t     * The flavor set in this converter\n\t     */\n\t    setConvFlavor = setFlavor;\n\t\n\t    _constructor();\n\t\n\t    /**\n\t     * Converter constructor\n\t     * @private\n\t     */\n\t    function _constructor() {\n\t      converterOptions = converterOptions || {};\n\t\n\t      for (var gOpt in globalOptions) {\n\t        if (globalOptions.hasOwnProperty(gOpt)) {\n\t          options[gOpt] = globalOptions[gOpt];\n\t        }\n\t      }\n\t\n\t      // Merge options\n\t      if ((typeof converterOptions === 'undefined' ? 'undefined' : _typeof(converterOptions)) === 'object') {\n\t        for (var opt in converterOptions) {\n\t          if (converterOptions.hasOwnProperty(opt)) {\n\t            options[opt] = converterOptions[opt];\n\t          }\n\t        }\n\t      } else {\n\t        throw Error('Converter expects the passed parameter to be an object, but ' + (typeof converterOptions === 'undefined' ? 'undefined' : _typeof(converterOptions)) + ' was passed instead.');\n\t      }\n\t\n\t      if (options.extensions) {\n\t        showdown.helper.forEach(options.extensions, _parseExtension);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Parse extension\n\t     * @param {*} ext\n\t     * @param {string} [name='']\n\t     * @private\n\t     */\n\t    function _parseExtension(ext, name) {\n\t\n\t      name = name || null;\n\t      // If it's a string, the extension was previously loaded\n\t      if (showdown.helper.isString(ext)) {\n\t        ext = showdown.helper.stdExtName(ext);\n\t        name = ext;\n\t\n\t        // LEGACY_SUPPORT CODE\n\t        if (showdown.extensions[ext]) {\n\t          console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' + 'Please inform the developer that the extension should be updated!');\n\t          legacyExtensionLoading(showdown.extensions[ext], ext);\n\t          return;\n\t          // END LEGACY SUPPORT CODE\n\t        } else if (!showdown.helper.isUndefined(extensions[ext])) {\n\t          ext = extensions[ext];\n\t        } else {\n\t          throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n\t        }\n\t      }\n\t\n\t      if (typeof ext === 'function') {\n\t        ext = ext();\n\t      }\n\t\n\t      if (!showdown.helper.isArray(ext)) {\n\t        ext = [ext];\n\t      }\n\t\n\t      var validExt = validate(ext, name);\n\t      if (!validExt.valid) {\n\t        throw Error(validExt.error);\n\t      }\n\t\n\t      for (var i = 0; i < ext.length; ++i) {\n\t        switch (ext[i].type) {\n\t\n\t          case 'lang':\n\t            langExtensions.push(ext[i]);\n\t            break;\n\t\n\t          case 'output':\n\t            outputModifiers.push(ext[i]);\n\t            break;\n\t        }\n\t        if (ext[i].hasOwnProperty('listeners')) {\n\t          for (var ln in ext[i].listeners) {\n\t            if (ext[i].listeners.hasOwnProperty(ln)) {\n\t              listen(ln, ext[i].listeners[ln]);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * LEGACY_SUPPORT\n\t     * @param {*} ext\n\t     * @param {string} name\n\t     */\n\t    function legacyExtensionLoading(ext, name) {\n\t      if (typeof ext === 'function') {\n\t        ext = ext(new showdown.Converter());\n\t      }\n\t      if (!showdown.helper.isArray(ext)) {\n\t        ext = [ext];\n\t      }\n\t      var valid = validate(ext, name);\n\t\n\t      if (!valid.valid) {\n\t        throw Error(valid.error);\n\t      }\n\t\n\t      for (var i = 0; i < ext.length; ++i) {\n\t        switch (ext[i].type) {\n\t          case 'lang':\n\t            langExtensions.push(ext[i]);\n\t            break;\n\t          case 'output':\n\t            outputModifiers.push(ext[i]);\n\t            break;\n\t          default:\n\t            // should never reach here\n\t            throw Error('Extension loader error: Type unrecognized!!!');\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Listen to an event\n\t     * @param {string} name\n\t     * @param {function} callback\n\t     */\n\t    function listen(name, callback) {\n\t      if (!showdown.helper.isString(name)) {\n\t        throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + ' given');\n\t      }\n\t\n\t      if (typeof callback !== 'function') {\n\t        throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + (typeof callback === 'undefined' ? 'undefined' : _typeof(callback)) + ' given');\n\t      }\n\t\n\t      if (!listeners.hasOwnProperty(name)) {\n\t        listeners[name] = [];\n\t      }\n\t      listeners[name].push(callback);\n\t    }\n\t\n\t    function rTrimInputText(text) {\n\t      var rsp = text.match(/^\\s*/)[0].length,\n\t          rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n\t      return text.replace(rgx, '');\n\t    }\n\t\n\t    /**\n\t     * Dispatch an event\n\t     * @private\n\t     * @param {string} evtName Event name\n\t     * @param {string} text Text\n\t     * @param {{}} options Converter Options\n\t     * @param {{}} globals\n\t     * @returns {string}\n\t     */\n\t    this._dispatch = function dispatch(evtName, text, options, globals) {\n\t      if (listeners.hasOwnProperty(evtName)) {\n\t        for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n\t          var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n\t          if (nText && typeof nText !== 'undefined') {\n\t            text = nText;\n\t          }\n\t        }\n\t      }\n\t      return text;\n\t    };\n\t\n\t    /**\n\t     * Listen to an event\n\t     * @param {string} name\n\t     * @param {function} callback\n\t     * @returns {showdown.Converter}\n\t     */\n\t    this.listen = function (name, callback) {\n\t      listen(name, callback);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Converts a markdown string into HTML\n\t     * @param {string} text\n\t     * @returns {*}\n\t     */\n\t    this.makeHtml = function (text) {\n\t      //check if text is not falsy\n\t      if (!text) {\n\t        return text;\n\t      }\n\t\n\t      var globals = {\n\t        gHtmlBlocks: [],\n\t        gHtmlMdBlocks: [],\n\t        gHtmlSpans: [],\n\t        gUrls: {},\n\t        gTitles: {},\n\t        gDimensions: {},\n\t        gListLevel: 0,\n\t        hashLinkCounts: {},\n\t        langExtensions: langExtensions,\n\t        outputModifiers: outputModifiers,\n\t        converter: this,\n\t        ghCodeBlocks: []\n\t      };\n\t\n\t      // attacklab: Replace ~ with ~T\n\t      // This lets us use tilde as an escape char to avoid md5 hashes\n\t      // The choice of character is arbitrary; anything that isn't\n\t      // magic in Markdown will work.\n\t      text = text.replace(/~/g, '~T');\n\t\n\t      // attacklab: Replace $ with ~D\n\t      // RegExp interprets $ as a special character\n\t      // when it's in a replacement string\n\t      text = text.replace(/\\$/g, '~D');\n\t\n\t      // Standardize line endings\n\t      text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n\t      text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\t\n\t      // Stardardize line spaces (nbsp causes trouble in older browsers and some regex flavors)\n\t      text = text.replace(/\\u00A0/g, ' ');\n\t\n\t      if (options.smartIndentationFix) {\n\t        text = rTrimInputText(text);\n\t      }\n\t\n\t      // Make sure text begins and ends with a couple of newlines:\n\t      text = '\\n\\n' + text + '\\n\\n';\n\t\n\t      // detab\n\t      text = showdown.subParser('detab')(text, options, globals);\n\t\n\t      // stripBlankLines\n\t      text = showdown.subParser('stripBlankLines')(text, options, globals);\n\t\n\t      //run languageExtensions\n\t      showdown.helper.forEach(langExtensions, function (ext) {\n\t        text = showdown.subParser('runExtension')(ext, text, options, globals);\n\t      });\n\t\n\t      // run the sub parsers\n\t      text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n\t      text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n\t      text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n\t      text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n\t      text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n\t      text = showdown.subParser('blockGamut')(text, options, globals);\n\t      text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n\t      text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\t\n\t      // attacklab: Restore dollar signs\n\t      text = text.replace(/~D/g, '$$');\n\t\n\t      // attacklab: Restore tildes\n\t      text = text.replace(/~T/g, '~');\n\t\n\t      // Run output modifiers\n\t      showdown.helper.forEach(outputModifiers, function (ext) {\n\t        text = showdown.subParser('runExtension')(ext, text, options, globals);\n\t      });\n\t\n\t      return text;\n\t    };\n\t\n\t    /**\n\t     * Set an option of this Converter instance\n\t     * @param {string} key\n\t     * @param {*} value\n\t     */\n\t    this.setOption = function (key, value) {\n\t      options[key] = value;\n\t    };\n\t\n\t    /**\n\t     * Get the option of this Converter instance\n\t     * @param {string} key\n\t     * @returns {*}\n\t     */\n\t    this.getOption = function (key) {\n\t      return options[key];\n\t    };\n\t\n\t    /**\n\t     * Get the options of this Converter instance\n\t     * @returns {{}}\n\t     */\n\t    this.getOptions = function () {\n\t      return options;\n\t    };\n\t\n\t    /**\n\t     * Add extension to THIS converter\n\t     * @param {{}} extension\n\t     * @param {string} [name=null]\n\t     */\n\t    this.addExtension = function (extension, name) {\n\t      name = name || null;\n\t      _parseExtension(extension, name);\n\t    };\n\t\n\t    /**\n\t     * Use a global registered extension with THIS converter\n\t     * @param {string} extensionName Name of the previously registered extension\n\t     */\n\t    this.useExtension = function (extensionName) {\n\t      _parseExtension(extensionName);\n\t    };\n\t\n\t    /**\n\t     * Set the flavor THIS converter should use\n\t     * @param {string} name\n\t     */\n\t    this.setFlavor = function (name) {\n\t      if (!flavor.hasOwnProperty(name)) {\n\t        throw Error(name + ' flavor was not found');\n\t      }\n\t      var preset = flavor[name];\n\t      setConvFlavor = name;\n\t      for (var option in preset) {\n\t        if (preset.hasOwnProperty(option)) {\n\t          options[option] = preset[option];\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Get the currently set flavor of this converter\n\t     * @returns {string}\n\t     */\n\t    this.getFlavor = function () {\n\t      return setConvFlavor;\n\t    };\n\t\n\t    /**\n\t     * Remove an extension from THIS converter.\n\t     * Note: This is a costly operation. It's better to initialize a new converter\n\t     * and specify the extensions you wish to use\n\t     * @param {Array} extension\n\t     */\n\t    this.removeExtension = function (extension) {\n\t      if (!showdown.helper.isArray(extension)) {\n\t        extension = [extension];\n\t      }\n\t      for (var a = 0; a < extension.length; ++a) {\n\t        var ext = extension[a];\n\t        for (var i = 0; i < langExtensions.length; ++i) {\n\t          if (langExtensions[i] === ext) {\n\t            langExtensions[i].splice(i, 1);\n\t          }\n\t        }\n\t        for (var ii = 0; ii < outputModifiers.length; ++i) {\n\t          if (outputModifiers[ii] === ext) {\n\t            outputModifiers[ii].splice(i, 1);\n\t          }\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Get all extension of THIS converter\n\t     * @returns {{language: Array, output: Array}}\n\t     */\n\t    this.getAllExtensions = function () {\n\t      return {\n\t        language: langExtensions,\n\t        output: outputModifiers\n\t      };\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Turn Markdown link shortcuts into XHTML <a> tags.\n\t   */\n\t  showdown.subParser('anchors', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('anchors.before', text, options, globals);\n\t\n\t    var writeAnchorTag = function writeAnchorTag(wholeMatch, m1, m2, m3, m4, m5, m6, m7) {\n\t      if (showdown.helper.isUndefined(m7)) {\n\t        m7 = '';\n\t      }\n\t      wholeMatch = m1;\n\t      var linkText = m2,\n\t          linkId = m3.toLowerCase(),\n\t          url = m4,\n\t          title = m7;\n\t\n\t      if (!url) {\n\t        if (!linkId) {\n\t          // lower-case and turn embedded newlines into spaces\n\t          linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n\t        }\n\t        url = '#' + linkId;\n\t\n\t        if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n\t          url = globals.gUrls[linkId];\n\t          if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n\t            title = globals.gTitles[linkId];\n\t          }\n\t        } else {\n\t          if (wholeMatch.search(/\\(\\s*\\)$/m) > -1) {\n\t            // Special case for explicit empty url\n\t            url = '';\n\t          } else {\n\t            return wholeMatch;\n\t          }\n\t        }\n\t      }\n\t\n\t      url = showdown.helper.escapeCharacters(url, '*_', false);\n\t      var result = '<a href=\"' + url + '\"';\n\t\n\t      if (title !== '' && title !== null) {\n\t        title = title.replace(/\"/g, '&quot;');\n\t        title = showdown.helper.escapeCharacters(title, '*_', false);\n\t        result += ' title=\"' + title + '\"';\n\t      }\n\t\n\t      result += '>' + linkText + '</a>';\n\t\n\t      return result;\n\t    };\n\t\n\t    // First, handle reference-style links: [link text] [id]\n\t    text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)][ ]?(?:\\n[ ]*)?\\[(.*?)])()()()()/g, writeAnchorTag);\n\t\n\t    // Next, inline-style links: [link text](url \"optional title\")\n\t    text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g, writeAnchorTag);\n\t\n\t    // handle reference-style shortcuts: [link text]\n\t    // These must come last in case you've also got [link test][1]\n\t    // or [link test](/foo)\n\t    text = text.replace(/(\\[([^\\[\\]]+)])()()()()()/g, writeAnchorTag);\n\t\n\t    // Lastly handle GithubMentions if option is enabled\n\t    if (options.ghMentions) {\n\t      text = text.replace(/(^|\\s)(\\\\)?(@([a-z\\d\\-]+))(?=[.!?;,[\\]()]|\\s|$)/gmi, function (wm, st, escape, mentions, username) {\n\t        if (escape === '\\\\') {\n\t          return st + mentions;\n\t        }\n\t        return st + '<a href=\"https://www.github.com/' + username + '\">' + mentions + '</a>';\n\t      });\n\t    }\n\t\n\t    text = globals.converter._dispatch('anchors.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  showdown.subParser('autoLinks', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\t\n\t    var simpleURLRegex = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+)()(?=\\s|$)(?![\"<>])/gi,\n\t        simpleURLRegex2 = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?()]?)(?=\\s|$)(?![\"<>])/gi,\n\t        delimUrlRegex = /<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)>/gi,\n\t        simpleMailRegex = /(?:^|\\s)([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?:$|\\s)/gi,\n\t        delimMailRegex = /<(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi;\n\t\n\t    text = text.replace(delimUrlRegex, replaceLink);\n\t    text = text.replace(delimMailRegex, replaceMail);\n\t    // simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[-.+~:?#@!$&'()*,;=[\\]\\w]+)\\b/gi,\n\t    // Email addresses: <address@domain.foo>\n\t\n\t    if (options.simplifiedAutoLink) {\n\t      if (options.excludeTrailingPunctuationFromURLs) {\n\t        text = text.replace(simpleURLRegex2, replaceLink);\n\t      } else {\n\t        text = text.replace(simpleURLRegex, replaceLink);\n\t      }\n\t      text = text.replace(simpleMailRegex, replaceMail);\n\t    }\n\t\n\t    function replaceLink(wm, link, m2, m3, trailingPunctuation) {\n\t      var lnkTxt = link,\n\t          append = '';\n\t      if (/^www\\./i.test(link)) {\n\t        link = link.replace(/^www\\./i, 'http://www.');\n\t      }\n\t      if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\n\t        append = trailingPunctuation;\n\t      }\n\t      return '<a href=\"' + link + '\">' + lnkTxt + '</a>' + append;\n\t    }\n\t\n\t    function replaceMail(wholeMatch, mail) {\n\t      var unescapedStr = showdown.subParser('unescapeSpecialChars')(mail);\n\t      return showdown.subParser('encodeEmailAddress')(unescapedStr);\n\t    }\n\t\n\t    text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * These are all the transformations that form block-level\n\t   * tags like paragraphs, headers, and list items.\n\t   */\n\t  showdown.subParser('blockGamut', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\t\n\t    // we parse blockquotes first so that we can have headings and hrs\n\t    // inside blockquotes\n\t    text = showdown.subParser('blockQuotes')(text, options, globals);\n\t    text = showdown.subParser('headers')(text, options, globals);\n\t\n\t    // Do Horizontal Rules:\n\t    var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n\t    text = text.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm, key);\n\t    text = text.replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm, key);\n\t    text = text.replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm, key);\n\t\n\t    text = showdown.subParser('lists')(text, options, globals);\n\t    text = showdown.subParser('codeBlocks')(text, options, globals);\n\t    text = showdown.subParser('tables')(text, options, globals);\n\t\n\t    // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n\t    // was to escape raw HTML in the original Markdown source. This time,\n\t    // we're escaping the markup we've just created, so that we don't wrap\n\t    // <p> tags around block-level tags.\n\t    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n\t    text = showdown.subParser('paragraphs')(text, options, globals);\n\t\n\t    text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\t\n\t    return text;\n\t  });\n\t\n\t  showdown.subParser('blockQuotes', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\t\n\t    text = text.replace(/((^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+)/gm, function (wholeMatch, m1) {\n\t      var bq = m1;\n\t\n\t      // attacklab: hack around Konqueror 3.5.4 bug:\n\t      // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n\t      bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, '~0'); // trim one level of quoting\n\t\n\t      // attacklab: clean up hack\n\t      bq = bq.replace(/~0/g, '');\n\t\n\t      bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n\t      bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n\t      bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\t\n\t      bq = bq.replace(/(^|\\n)/g, '$1  ');\n\t      // These leading spaces screw with <pre> content, so we need to fix that:\n\t      bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n\t        var pre = m1;\n\t        // attacklab: hack around Konqueror 3.5.4 bug:\n\t        pre = pre.replace(/^  /mg, '~0');\n\t        pre = pre.replace(/~0/g, '');\n\t        return pre;\n\t      });\n\t\n\t      return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n\t    });\n\t\n\t    text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Process Markdown `<pre><code>` blocks.\n\t   */\n\t  showdown.subParser('codeBlocks', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\t\n\t    // sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n\t    text += '~0';\n\t\n\t    var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))/g;\n\t    text = text.replace(pattern, function (wholeMatch, m1, m2) {\n\t      var codeblock = m1,\n\t          nextChar = m2,\n\t          end = '\\n';\n\t\n\t      codeblock = showdown.subParser('outdent')(codeblock);\n\t      codeblock = showdown.subParser('encodeCode')(codeblock);\n\t      codeblock = showdown.subParser('detab')(codeblock);\n\t      codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n\t      codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\t\n\t      if (options.omitExtraWLInCodeBlocks) {\n\t        end = '';\n\t      }\n\t\n\t      codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\t\n\t      return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n\t    });\n\t\n\t    // strip sentinel\n\t    text = text.replace(/~0/, '');\n\t\n\t    text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   *\n\t   *   *  Backtick quotes are used for <code></code> spans.\n\t   *\n\t   *   *  You can use multiple backticks as the delimiters if you want to\n\t   *     include literal backticks in the code span. So, this input:\n\t   *\n\t   *         Just type ``foo `bar` baz`` at the prompt.\n\t   *\n\t   *       Will translate to:\n\t   *\n\t   *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n\t   *\n\t   *    There's no arbitrary limit to the number of backticks you\n\t   *    can use as delimters. If you need three consecutive backticks\n\t   *    in your code, use four for delimiters, etc.\n\t   *\n\t   *  *  You can use spaces to get literal backticks at the edges:\n\t   *\n\t   *         ... type `` `bar` `` ...\n\t   *\n\t   *       Turns to:\n\t   *\n\t   *         ... type <code>`bar`</code> ...\n\t   */\n\t  showdown.subParser('codeSpans', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\t\n\t    /*\n\t     text = text.replace(/\n\t     (^|[^\\\\])\t\t\t\t\t// Character before opening ` can't be a backslash\n\t     (`+)\t\t\t\t\t\t// $2 = Opening run of `\n\t     (\t\t\t\t\t\t\t// $3 = The code block\n\t     [^\\r]*?\n\t     [^`]\t\t\t\t\t// attacklab: work around lack of lookbehind\n\t     )\n\t     \\2\t\t\t\t\t\t\t// Matching closer\n\t     (?!`)\n\t     /gm, function(){...});\n\t     */\n\t\n\t    if (typeof text === 'undefined') {\n\t      text = '';\n\t    }\n\t    text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm, function (wholeMatch, m1, m2, m3) {\n\t      var c = m3;\n\t      c = c.replace(/^([ \\t]*)/g, ''); // leading whitespace\n\t      c = c.replace(/[ \\t]*$/g, ''); // trailing whitespace\n\t      c = showdown.subParser('encodeCode')(c);\n\t      return m1 + '<code>' + c + '</code>';\n\t    });\n\t\n\t    text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Convert all tabs to spaces\n\t   */\n\t  showdown.subParser('detab', function (text) {\n\t    'use strict';\n\t\n\t    // expand first n-1 tabs\n\t\n\t    text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\t\n\t    // replace the nth with two sentinels\n\t    text = text.replace(/\\t/g, '~A~B');\n\t\n\t    // use the sentinel to anchor our regex so it doesn't explode\n\t    text = text.replace(/~B(.+?)~A/g, function (wholeMatch, m1) {\n\t      var leadingText = m1,\n\t          numSpaces = 4 - leadingText.length % 4; // g_tab_width\n\t\n\t      // there *must* be a better way to do this:\n\t      for (var i = 0; i < numSpaces; i++) {\n\t        leadingText += ' ';\n\t      }\n\t\n\t      return leadingText;\n\t    });\n\t\n\t    // clean up sentinels\n\t    text = text.replace(/~A/g, '    '); // g_tab_width\n\t    text = text.replace(/~B/g, '');\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Smart processing for ampersands and angle brackets that need to be encoded.\n\t   */\n\t  showdown.subParser('encodeAmpsAndAngles', function (text) {\n\t    'use strict';\n\t    // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n\t    // http://bumppo.net/projects/amputator/\n\t\n\t    text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\t\n\t    // Encode naked <'s\n\t    text = text.replace(/<(?![a-z\\/?\\$!])/gi, '&lt;');\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Returns the string, with after processing the following backslash escape sequences.\n\t   *\n\t   * attacklab: The polite way to do this is with the new escapeCharacters() function:\n\t   *\n\t   *    text = escapeCharacters(text,\"\\\\\",true);\n\t   *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n\t   *\n\t   * ...but we're sidestepping its use of the (slow) RegExp constructor\n\t   * as an optimization for Firefox.  This function gets called a LOT.\n\t   */\n\t  showdown.subParser('encodeBackslashEscapes', function (text) {\n\t    'use strict';\n\t\n\t    text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n\t    text = text.replace(/\\\\([`*_{}\\[\\]()>#+-.!])/g, showdown.helper.escapeCharactersCallback);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Encode/escape certain characters inside Markdown code runs.\n\t   * The point is that in code, these characters are literals,\n\t   * and lose their special Markdown meanings.\n\t   */\n\t  showdown.subParser('encodeCode', function (text) {\n\t    'use strict';\n\t\n\t    // Encode all ampersands; HTML entities are not\n\t    // entities within a Markdown code span.\n\t\n\t    text = text.replace(/&/g, '&amp;');\n\t\n\t    // Do the angle bracket song and dance:\n\t    text = text.replace(/</g, '&lt;');\n\t    text = text.replace(/>/g, '&gt;');\n\t\n\t    // Now, escape characters that are magic in Markdown:\n\t    text = showdown.helper.escapeCharacters(text, '*_{}[]\\\\', false);\n\t\n\t    // jj the line above breaks this:\n\t    //---\n\t    //* Item\n\t    //   1. Subitem\n\t    //            special char: *\n\t    // ---\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   *  Input: an email address, e.g. \"foo@example.com\"\n\t   *\n\t   *  Output: the email address as a mailto link, with each character\n\t   *    of the address encoded as either a decimal or hex entity, in\n\t   *    the hopes of foiling most address harvesting spam bots. E.g.:\n\t   *\n\t   *    <a href=\"&#x6D;&#97;&#105;&#108;&#x74;&#111;:&#102;&#111;&#111;&#64;&#101;\n\t   *       x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;\">&#102;&#111;&#111;\n\t   *       &#64;&#101;x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;</a>\n\t   *\n\t   *  Based on a filter by Matthew Wickline, posted to the BBEdit-Talk\n\t   *  mailing list: <http://tinyurl.com/yu7ue>\n\t   *\n\t   */\n\t  showdown.subParser('encodeEmailAddress', function (addr) {\n\t    'use strict';\n\t\n\t    var encode = [function (ch) {\n\t      return '&#' + ch.charCodeAt(0) + ';';\n\t    }, function (ch) {\n\t      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n\t    }, function (ch) {\n\t      return ch;\n\t    }];\n\t\n\t    addr = 'mailto:' + addr;\n\t\n\t    addr = addr.replace(/./g, function (ch) {\n\t      if (ch === '@') {\n\t        // this *must* be encoded. I insist.\n\t        ch = encode[Math.floor(Math.random() * 2)](ch);\n\t      } else if (ch !== ':') {\n\t        // leave ':' alone (to spot mailto: later)\n\t        var r = Math.random();\n\t        // roughly 10% raw, 45% hex, 45% dec\n\t        ch = r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch);\n\t      }\n\t      return ch;\n\t    });\n\t\n\t    addr = '<a href=\"' + addr + '\">' + addr + '</a>';\n\t    addr = addr.replace(/\">.+:/g, '\">'); // strip the mailto: from the visible part\n\t\n\t    return addr;\n\t  });\n\t\n\t  /**\n\t   * Within tags -- meaning between < and > -- encode [\\ ` * _] so they\n\t   * don't conflict with their use in Markdown for code, italics and strong.\n\t   */\n\t  showdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text) {\n\t    'use strict';\n\t\n\t    // Build a regex to find HTML tags and comments.  See Friedl's\n\t    // \"Mastering Regular Expressions\", 2nd Ed., pp. 200-201.\n\t\n\t    var regex = /(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)/gi;\n\t\n\t    text = text.replace(regex, function (wholeMatch) {\n\t      var tag = wholeMatch.replace(/(.)<\\/?code>(?=.)/g, '$1`');\n\t      tag = showdown.helper.escapeCharacters(tag, '\\\\`*_', false);\n\t      return tag;\n\t    });\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Handle github codeblocks prior to running HashHTML so that\n\t   * HTML contained within the codeblock gets escaped properly\n\t   * Example:\n\t   * ```ruby\n\t   *     def hello_world(x)\n\t   *       puts \"Hello, #{x}\"\n\t   *     end\n\t   * ```\n\t   */\n\t  showdown.subParser('githubCodeBlocks', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    // early exit if option is not enabled\n\t\n\t    if (!options.ghCodeBlocks) {\n\t      return text;\n\t    }\n\t\n\t    text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\t\n\t    text += '~0';\n\t\n\t    text = text.replace(/(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g, function (wholeMatch, language, codeblock) {\n\t      var end = options.omitExtraWLInCodeBlocks ? '' : '\\n';\n\t\n\t      // First parse the github code block\n\t      codeblock = showdown.subParser('encodeCode')(codeblock);\n\t      codeblock = showdown.subParser('detab')(codeblock);\n\t      codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n\t      codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\t\n\t      codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\t\n\t      codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\t\n\t      // Since GHCodeblocks can be false positives, we need to\n\t      // store the primitive text and the parsed text in a global var,\n\t      // and then return a token\n\t      return '\\n\\n~G' + (globals.ghCodeBlocks.push({ text: wholeMatch, codeblock: codeblock }) - 1) + 'G\\n\\n';\n\t    });\n\t\n\t    // attacklab: strip sentinel\n\t    text = text.replace(/~0/, '');\n\t\n\t    return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n\t  });\n\t\n\t  showdown.subParser('hashBlock', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = text.replace(/(^\\n+|\\n+$)/g, '');\n\t    return '\\n\\n~K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n\t  });\n\t\n\t  showdown.subParser('hashElement', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    return function (wholeMatch, m1) {\n\t      var blockText = m1;\n\t\n\t      // Undo double lines\n\t      blockText = blockText.replace(/\\n\\n/g, '\\n');\n\t      blockText = blockText.replace(/^\\n/, '');\n\t\n\t      // strip trailing blank lines\n\t      blockText = blockText.replace(/\\n+$/g, '');\n\t\n\t      // Replace the element text with a marker (\"~KxK\" where x is its key)\n\t      blockText = '\\n\\n~K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\t\n\t      return blockText;\n\t    };\n\t  });\n\t\n\t  showdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    var blockTags = ['pre', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'table', 'dl', 'ol', 'ul', 'script', 'noscript', 'form', 'fieldset', 'iframe', 'math', 'style', 'section', 'header', 'footer', 'nav', 'article', 'aside', 'address', 'audio', 'canvas', 'figure', 'hgroup', 'output', 'video', 'p'],\n\t        repFunc = function repFunc(wholeMatch, match, left, right) {\n\t      var txt = wholeMatch;\n\t      // check if this html element is marked as markdown\n\t      // if so, it's contents should be parsed as markdown\n\t      if (left.search(/\\bmarkdown\\b/) !== -1) {\n\t        txt = left + globals.converter.makeHtml(match) + right;\n\t      }\n\t      return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n\t    };\n\t\n\t    for (var i = 0; i < blockTags.length; ++i) {\n\t      text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<' + blockTags[i] + '\\\\b[^>]*>', '</' + blockTags[i] + '>', 'gim');\n\t    }\n\t\n\t    // HR SPECIAL CASE\n\t    text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g, showdown.subParser('hashElement')(text, options, globals));\n\t\n\t    // Special case for standalone HTML comments\n\t    text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\n\t      return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n\t    }, '^ {0,3}<!--', '-->', 'gm');\n\t\n\t    // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n\t    text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g, showdown.subParser('hashElement')(text, options, globals));\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Hash span elements that should not be parsed as markdown\n\t   */\n\t  showdown.subParser('hashHTMLSpans', function (text, config, globals) {\n\t    'use strict';\n\t\n\t    var matches = showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');\n\t\n\t    for (var i = 0; i < matches.length; ++i) {\n\t      text = text.replace(matches[i][0], '~C' + (globals.gHtmlSpans.push(matches[i][0]) - 1) + 'C');\n\t    }\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Unhash HTML spans\n\t   */\n\t  showdown.subParser('unhashHTMLSpans', function (text, config, globals) {\n\t    'use strict';\n\t\n\t    for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n\t      text = text.replace('~C' + i + 'C', globals.gHtmlSpans[i]);\n\t    }\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Hash span elements that should not be parsed as markdown\n\t   */\n\t  showdown.subParser('hashPreCodeTags', function (text, config, globals) {\n\t    'use strict';\n\t\n\t    var repFunc = function repFunc(wholeMatch, match, left, right) {\n\t      // encode html entities\n\t      var codeblock = left + showdown.subParser('encodeCode')(match) + right;\n\t      return '\\n\\n~G' + (globals.ghCodeBlocks.push({ text: wholeMatch, codeblock: codeblock }) - 1) + 'G\\n\\n';\n\t    };\n\t\n\t    text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^ {0,3}</code>\\\\s*</pre>', 'gim');\n\t    return text;\n\t  });\n\t\n\t  showdown.subParser('headers', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('headers.before', text, options, globals);\n\t\n\t    var prefixHeader = options.prefixHeaderId,\n\t        headerLevelStart = isNaN(parseInt(options.headerLevelStart)) ? 1 : parseInt(options.headerLevelStart),\n\t        ghHeaderId = options.ghCompatibleHeaderId,\n\t\n\t\n\t    // Set text-style headers:\n\t    //\tHeader 1\n\t    //\t========\n\t    //\n\t    //\tHeader 2\n\t    //\t--------\n\t    //\n\t    setextRegexH1 = options.smoothLivePreview ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n\t        setextRegexH2 = options.smoothLivePreview ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\t\n\t    text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\t\n\t      var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n\t          hID = options.noHeaderId ? '' : ' id=\"' + headerId(m1) + '\"',\n\t          hLevel = headerLevelStart,\n\t          hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n\t      return showdown.subParser('hashBlock')(hashBlock, options, globals);\n\t    });\n\t\n\t    text = text.replace(setextRegexH2, function (matchFound, m1) {\n\t      var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n\t          hID = options.noHeaderId ? '' : ' id=\"' + headerId(m1) + '\"',\n\t          hLevel = headerLevelStart + 1,\n\t          hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n\t      return showdown.subParser('hashBlock')(hashBlock, options, globals);\n\t    });\n\t\n\t    // atx-style headers:\n\t    //  # Header 1\n\t    //  ## Header 2\n\t    //  ## Header 2 with closing hashes ##\n\t    //  ...\n\t    //  ###### Header 6\n\t    //\n\t    var atxStyle = options.requireSpaceBeforeHeadingText ? /^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm : /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm;\n\t\n\t    text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\n\t      var span = showdown.subParser('spanGamut')(m2, options, globals),\n\t          hID = options.noHeaderId ? '' : ' id=\"' + headerId(m2) + '\"',\n\t          hLevel = headerLevelStart - 1 + m1.length,\n\t          header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\t\n\t      return showdown.subParser('hashBlock')(header, options, globals);\n\t    });\n\t\n\t    function headerId(m) {\n\t      var title, escapedId;\n\t\n\t      if (ghHeaderId) {\n\t        escapedId = m.replace(/ /g, '-')\n\t        //replace previously escaped chars (&, ~ and $)\n\t        .replace(/&amp;/g, '').replace(/~T/g, '').replace(/~D/g, '')\n\t        //replace rest of the chars (&~$ are repeated as they might have been escaped)\n\t        // borrowed from github's redcarpet (some they should produce similar results)\n\t        .replace(/[&+$,\\/:;=?@\"#{}|^~\\[\\]`\\\\*)(%.!'<>]/g, '').toLowerCase();\n\t      } else {\n\t        escapedId = m.replace(/[^\\w]/g, '').toLowerCase();\n\t      }\n\t\n\t      if (globals.hashLinkCounts[escapedId]) {\n\t        title = escapedId + '-' + globals.hashLinkCounts[escapedId]++;\n\t      } else {\n\t        title = escapedId;\n\t        globals.hashLinkCounts[escapedId] = 1;\n\t      }\n\t\n\t      // Prefix id to prevent causing inadvertent pre-existing style matches.\n\t      if (prefixHeader === true) {\n\t        prefixHeader = 'section';\n\t      }\n\t\n\t      if (showdown.helper.isString(prefixHeader)) {\n\t        return prefixHeader + title;\n\t      }\n\t      return title;\n\t    }\n\t\n\t    text = globals.converter._dispatch('headers.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Turn Markdown image shortcuts into <img> tags.\n\t   */\n\t  showdown.subParser('images', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('images.before', text, options, globals);\n\t\n\t    var inlineRegExp = /!\\[(.*?)]\\s?\\([ \\t]*()<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(['\"])(.*?)\\6[ \\t]*)?\\)/g,\n\t        referenceRegExp = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[(.*?)]()()()()()/g;\n\t\n\t    function writeImageTag(wholeMatch, altText, linkId, url, width, height, m5, title) {\n\t\n\t      var gUrls = globals.gUrls,\n\t          gTitles = globals.gTitles,\n\t          gDims = globals.gDimensions;\n\t\n\t      linkId = linkId.toLowerCase();\n\t\n\t      if (!title) {\n\t        title = '';\n\t      }\n\t\n\t      if (url === '' || url === null) {\n\t        if (linkId === '' || linkId === null) {\n\t          // lower-case and turn embedded newlines into spaces\n\t          linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n\t        }\n\t        url = '#' + linkId;\n\t\n\t        if (!showdown.helper.isUndefined(gUrls[linkId])) {\n\t          url = gUrls[linkId];\n\t          if (!showdown.helper.isUndefined(gTitles[linkId])) {\n\t            title = gTitles[linkId];\n\t          }\n\t          if (!showdown.helper.isUndefined(gDims[linkId])) {\n\t            width = gDims[linkId].width;\n\t            height = gDims[linkId].height;\n\t          }\n\t        } else {\n\t          return wholeMatch;\n\t        }\n\t      }\n\t\n\t      altText = altText.replace(/\"/g, '&quot;');\n\t      altText = showdown.helper.escapeCharacters(altText, '*_', false);\n\t      url = showdown.helper.escapeCharacters(url, '*_', false);\n\t      var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\t\n\t      if (title) {\n\t        title = title.replace(/\"/g, '&quot;');\n\t        title = showdown.helper.escapeCharacters(title, '*_', false);\n\t        result += ' title=\"' + title + '\"';\n\t      }\n\t\n\t      if (width && height) {\n\t        width = width === '*' ? 'auto' : width;\n\t        height = height === '*' ? 'auto' : height;\n\t\n\t        result += ' width=\"' + width + '\"';\n\t        result += ' height=\"' + height + '\"';\n\t      }\n\t\n\t      result += ' />';\n\t\n\t      return result;\n\t    }\n\t\n\t    // First, handle reference-style labeled images: ![alt text][id]\n\t    text = text.replace(referenceRegExp, writeImageTag);\n\t\n\t    // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n\t    text = text.replace(inlineRegExp, writeImageTag);\n\t\n\t    text = globals.converter._dispatch('images.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  showdown.subParser('italicsAndBold', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\t\n\t    if (options.literalMidWordUnderscores) {\n\t      //underscores\n\t      // Since we are consuming a \\s character, we need to add it\n\t      text = text.replace(/(^|\\s|>|\\b)__(?=\\S)([\\s\\S]+?)__(?=\\b|<|\\s|$)/gm, '$1<strong>$2</strong>');\n\t      text = text.replace(/(^|\\s|>|\\b)_(?=\\S)([\\s\\S]+?)_(?=\\b|<|\\s|$)/gm, '$1<em>$2</em>');\n\t      //asterisks\n\t      text = text.replace(/(\\*\\*)(?=\\S)([^\\r]*?\\S[*]*)\\1/g, '<strong>$2</strong>');\n\t      text = text.replace(/(\\*)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n\t    } else {\n\t      // <strong> must go first:\n\t      text = text.replace(/(\\*\\*|__)(?=\\S)([^\\r]*?\\S[*_]*)\\1/g, '<strong>$2</strong>');\n\t      text = text.replace(/(\\*|_)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n\t    }\n\t\n\t    text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Form HTML ordered (numbered) and unordered (bulleted) lists.\n\t   */\n\t  showdown.subParser('lists', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('lists.before', text, options, globals);\n\t\n\t    /**\n\t     * Process the contents of a single ordered or unordered list, splitting it\n\t     * into individual list items.\n\t     * @param {string} listStr\n\t     * @param {boolean} trimTrailing\n\t     * @returns {string}\n\t     */\n\t    function processListItems(listStr, trimTrailing) {\n\t      // The $g_list_level global keeps track of when we're inside a list.\n\t      // Each time we enter a list, we increment it; when we leave a list,\n\t      // we decrement. If it's zero, we're not in a list anymore.\n\t      //\n\t      // We do this because when we're not inside a list, we want to treat\n\t      // something like this:\n\t      //\n\t      //    I recommend upgrading to version\n\t      //    8. Oops, now this line is treated\n\t      //    as a sub-list.\n\t      //\n\t      // As a single paragraph, despite the fact that the second line starts\n\t      // with a digit-period-space sequence.\n\t      //\n\t      // Whereas when we're inside a list (or sub-list), that line will be\n\t      // treated as the start of a sub-list. What a kludge, huh? This is\n\t      // an aspect of Markdown's syntax that's hard to parse perfectly\n\t      // without resorting to mind-reading. Perhaps the solution is to\n\t      // change the syntax rules such that sub-lists must start with a\n\t      // starting cardinal number; e.g. \"1.\" or \"a.\".\n\t      globals.gListLevel++;\n\t\n\t      // trim trailing blank lines:\n\t      listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\t\n\t      // attacklab: add sentinel to emulate \\z\n\t      listStr += '~0';\n\t\n\t      var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,\n\t          isParagraphed = /\\n[ \\t]*\\n(?!~0)/.test(listStr);\n\t\n\t      // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\n\t      // which is a syntax breaking change\n\t      // activating this option reverts to old behavior\n\t      if (options.disableForced4SpacesIndentedSublists) {\n\t        rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0|\\2([*+-]|\\d+[.])[ \\t]+))/gm;\n\t      }\n\t\n\t      listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n\t        checked = checked && checked.trim() !== '';\n\t\n\t        var item = showdown.subParser('outdent')(m4, options, globals),\n\t            bulletStyle = '';\n\t\n\t        // Support for github tasklists\n\t        if (taskbtn && options.tasklists) {\n\t          bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n\t          item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n\t            var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n\t            if (checked) {\n\t              otp += ' checked';\n\t            }\n\t            otp += '>';\n\t            return otp;\n\t          });\n\t        }\n\t\n\t        // ISSUE #312\n\t        // This input: - - - a\n\t        // causes trouble to the parser, since it interprets it as:\n\t        // <ul><li><li><li>a</li></li></li></ul>\n\t        // instead of:\n\t        // <ul><li>- - a</li></ul>\n\t        // So, to prevent it, we will put a marker (~A)in the beginning of the line\n\t        // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\n\t        item = item.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g, function (wm2) {\n\t          return '~A' + wm2;\n\t        });\n\t\n\t        // m1 - Leading line or\n\t        // Has a double return (multi paragraph) or\n\t        // Has sublist\n\t        if (m1 || item.search(/\\n{2,}/) > -1) {\n\t          item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n\t          item = showdown.subParser('blockGamut')(item, options, globals);\n\t        } else {\n\t          // Recursion for sub-lists:\n\t          item = showdown.subParser('lists')(item, options, globals);\n\t          item = item.replace(/\\n$/, ''); // chomp(item)\n\t          item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\n\t          // Colapse double linebreaks\n\t          item = item.replace(/\\n\\n+/g, '\\n\\n');\n\t          // replace double linebreaks with a placeholder\n\t          item = item.replace(/\\n\\n/g, '~B');\n\t          if (isParagraphed) {\n\t            item = showdown.subParser('paragraphs')(item, options, globals);\n\t          } else {\n\t            item = showdown.subParser('spanGamut')(item, options, globals);\n\t          }\n\t          item = item.replace(/~B/g, '\\n\\n');\n\t        }\n\t\n\t        // now we need to remove the marker (~A)\n\t        item = item.replace('~A', '');\n\t        // we can finally wrap the line in list item tags\n\t        item = '<li' + bulletStyle + '>' + item + '</li>\\n';\n\t\n\t        return item;\n\t      });\n\t\n\t      // attacklab: strip sentinel\n\t      listStr = listStr.replace(/~0/g, '');\n\t\n\t      globals.gListLevel--;\n\t\n\t      if (trimTrailing) {\n\t        listStr = listStr.replace(/\\s+$/, '');\n\t      }\n\t\n\t      return listStr;\n\t    }\n\t\n\t    /**\n\t     * Check and parse consecutive lists (better fix for issue #142)\n\t     * @param {string} list\n\t     * @param {string} listType\n\t     * @param {boolean} trimTrailing\n\t     * @returns {string}\n\t     */\n\t    function parseConsecutiveLists(list, listType, trimTrailing) {\n\t      // check if we caught 2 or more consecutive lists by mistake\n\t      // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\n\t      var olRgx = options.disableForced4SpacesIndentedSublists ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm,\n\t          ulRgx = options.disableForced4SpacesIndentedSublists ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm,\n\t          counterRxg = listType === 'ul' ? olRgx : ulRgx,\n\t          result = '';\n\t\n\t      if (list.search(counterRxg) !== -1) {\n\t        (function parseCL(txt) {\n\t          var pos = txt.search(counterRxg);\n\t          if (pos !== -1) {\n\t            // slice\n\t            result += '\\n<' + listType + '>\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n';\n\t\n\t            // invert counterType and listType\n\t            listType = listType === 'ul' ? 'ol' : 'ul';\n\t            counterRxg = listType === 'ul' ? olRgx : ulRgx;\n\t\n\t            //recurse\n\t            parseCL(txt.slice(pos));\n\t          } else {\n\t            result += '\\n<' + listType + '>\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n';\n\t          }\n\t        })(list);\n\t      } else {\n\t        result = '\\n<' + listType + '>\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n';\n\t      }\n\t\n\t      return result;\n\t    }\n\t\n\t    // add sentinel to hack around khtml/safari bug:\n\t    // http://bugs.webkit.org/show_bug.cgi?id=11231\n\t    text += '~0';\n\t\n\t    if (globals.gListLevel) {\n\t      text = text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm, function (wholeMatch, list, m2) {\n\t        var listType = m2.search(/[*+-]/g) > -1 ? 'ul' : 'ol';\n\t        return parseConsecutiveLists(list, listType, true);\n\t      });\n\t    } else {\n\t      text = text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm, function (wholeMatch, m1, list, m3) {\n\t        var listType = m3.search(/[*+-]/g) > -1 ? 'ul' : 'ol';\n\t        return parseConsecutiveLists(list, listType, false);\n\t      });\n\t    }\n\t\n\t    // strip sentinel\n\t    text = text.replace(/~0/, '');\n\t    text = globals.converter._dispatch('lists.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Remove one level of line-leading tabs or spaces\n\t   */\n\t  showdown.subParser('outdent', function (text) {\n\t    'use strict';\n\t\n\t    // attacklab: hack around Konqueror 3.5.4 bug:\n\t    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n\t\n\t    text = text.replace(/^(\\t|[ ]{1,4})/gm, '~0'); // attacklab: g_tab_width\n\t\n\t    // attacklab: clean up hack\n\t    text = text.replace(/~0/g, '');\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   *\n\t   */\n\t  showdown.subParser('paragraphs', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n\t    // Strip leading and trailing lines:\n\t    text = text.replace(/^\\n+/g, '');\n\t    text = text.replace(/\\n+$/g, '');\n\t\n\t    var grafs = text.split(/\\n{2,}/g),\n\t        grafsOut = [],\n\t        end = grafs.length; // Wrap <p> tags\n\t\n\t    for (var i = 0; i < end; i++) {\n\t      var str = grafs[i];\n\t      // if this is an HTML marker, copy it\n\t      if (str.search(/~(K|G)(\\d+)\\1/g) >= 0) {\n\t        grafsOut.push(str);\n\t      } else {\n\t        str = showdown.subParser('spanGamut')(str, options, globals);\n\t        str = str.replace(/^([ \\t]*)/g, '<p>');\n\t        str += '</p>';\n\t        grafsOut.push(str);\n\t      }\n\t    }\n\t\n\t    /** Unhashify HTML blocks */\n\t    end = grafsOut.length;\n\t    for (i = 0; i < end; i++) {\n\t      var blockText = '',\n\t          grafsOutIt = grafsOut[i],\n\t          codeFlag = false;\n\t      // if this is a marker for an html block...\n\t      while (grafsOutIt.search(/~(K|G)(\\d+)\\1/) >= 0) {\n\t        var delim = RegExp.$1,\n\t            num = RegExp.$2;\n\t\n\t        if (delim === 'K') {\n\t          blockText = globals.gHtmlBlocks[num];\n\t        } else {\n\t          // we need to check if ghBlock is a false positive\n\t          if (codeFlag) {\n\t            // use encoded version of all text\n\t            blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text);\n\t          } else {\n\t            blockText = globals.ghCodeBlocks[num].codeblock;\n\t          }\n\t        }\n\t        blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\t\n\t        grafsOutIt = grafsOutIt.replace(/(\\n\\n)?~(K|G)\\d+\\2(\\n\\n)?/, blockText);\n\t        // Check if grafsOutIt is a pre->code\n\t        if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n\t          codeFlag = true;\n\t        }\n\t      }\n\t      grafsOut[i] = grafsOutIt;\n\t    }\n\t    text = grafsOut.join('\\n');\n\t    // Strip leading and trailing lines:\n\t    text = text.replace(/^\\n+/g, '');\n\t    text = text.replace(/\\n+$/g, '');\n\t    return globals.converter._dispatch('paragraphs.after', text, options, globals);\n\t  });\n\t\n\t  /**\n\t   * Run extension\n\t   */\n\t  showdown.subParser('runExtension', function (ext, text, options, globals) {\n\t    'use strict';\n\t\n\t    if (ext.filter) {\n\t      text = ext.filter(text, globals.converter, options);\n\t    } else if (ext.regex) {\n\t      // TODO remove this when old extension loading mechanism is deprecated\n\t      var re = ext.regex;\n\t      if (!re instanceof RegExp) {\n\t        re = new RegExp(re, 'g');\n\t      }\n\t      text = text.replace(re, ext.replace);\n\t    }\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * These are all the transformations that occur *within* block-level\n\t   * tags like paragraphs, headers, and list items.\n\t   */\n\t  showdown.subParser('spanGamut', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n\t    text = showdown.subParser('codeSpans')(text, options, globals);\n\t    text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n\t    text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\t\n\t    // Process anchor and image tags. Images must come first,\n\t    // because ![foo][f] looks like an anchor.\n\t    text = showdown.subParser('images')(text, options, globals);\n\t    text = showdown.subParser('anchors')(text, options, globals);\n\t\n\t    // Make links out of things like `<http://example.com/>`\n\t    // Must come after _DoAnchors(), because you can use < and >\n\t    // delimiters in inline links like [this](<url>).\n\t    text = showdown.subParser('autoLinks')(text, options, globals);\n\t    text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n\t    text = showdown.subParser('italicsAndBold')(text, options, globals);\n\t    text = showdown.subParser('strikethrough')(text, options, globals);\n\t\n\t    // Do hard breaks\n\t    if (options.simpleLineBreaks) {\n\t      // GFM style hard breaks\n\t      text = text.replace(/\\n/g, '<br />\\n');\n\t    } else {\n\t      // Vanilla hard breaks\n\t      text = text.replace(/  +\\n/g, '<br />\\n');\n\t    }\n\t\n\t    text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  showdown.subParser('strikethrough', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    if (options.strikethrough) {\n\t      text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n\t      text = text.replace(/(?:~T){2}([\\s\\S]+?)(?:~T){2}/g, '<del>$1</del>');\n\t      text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n\t    }\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Strip any lines consisting only of spaces and tabs.\n\t   * This makes subsequent regexs easier to write, because we can\n\t   * match consecutive blank lines with /\\n+/ instead of something\n\t   * contorted like /[ \\t]*\\n+/\n\t   */\n\t  showdown.subParser('stripBlankLines', function (text) {\n\t    'use strict';\n\t\n\t    return text.replace(/^[ \\t]+$/mg, '');\n\t  });\n\t\n\t  /**\n\t   * Strips link definitions from text, stores the URLs and titles in\n\t   * hash references.\n\t   * Link defs are in the form: ^[id]: url \"optional title\"\n\t   */\n\t  showdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    var regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=~0))/gm;\n\t\n\t    // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n\t    text += '~0';\n\t\n\t    text = text.replace(regex, function (wholeMatch, linkId, url, width, height, blankLines, title) {\n\t      linkId = linkId.toLowerCase();\n\t      globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url); // Link IDs are case-insensitive\n\t\n\t      if (blankLines) {\n\t        // Oops, found blank lines, so it's not a title.\n\t        // Put back the parenthetical statement we stole.\n\t        return blankLines + title;\n\t      } else {\n\t        if (title) {\n\t          globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n\t        }\n\t        if (options.parseImgDimensions && width && height) {\n\t          globals.gDimensions[linkId] = {\n\t            width: width,\n\t            height: height\n\t          };\n\t        }\n\t      }\n\t      // Completely remove the definition from the text\n\t      return '';\n\t    });\n\t\n\t    // attacklab: strip sentinel\n\t    text = text.replace(/~0/, '');\n\t\n\t    return text;\n\t  });\n\t\n\t  showdown.subParser('tables', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    if (!options.tables) {\n\t      return text;\n\t    }\n\t\n\t    var tableRgx = /^ {0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[\\s\\S]+?(?:\\n\\n|~0)/gm;\n\t\n\t    function parseStyles(sLine) {\n\t      if (/^:[ \\t]*--*$/.test(sLine)) {\n\t        return ' style=\"text-align:left;\"';\n\t      } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n\t        return ' style=\"text-align:right;\"';\n\t      } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n\t        return ' style=\"text-align:center;\"';\n\t      } else {\n\t        return '';\n\t      }\n\t    }\n\t\n\t    function parseHeaders(header, style) {\n\t      var id = '';\n\t      header = header.trim();\n\t      if (options.tableHeaderId) {\n\t        id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n\t      }\n\t      header = showdown.subParser('spanGamut')(header, options, globals);\n\t\n\t      return '<th' + id + style + '>' + header + '</th>\\n';\n\t    }\n\t\n\t    function parseCells(cell, style) {\n\t      var subText = showdown.subParser('spanGamut')(cell, options, globals);\n\t      return '<td' + style + '>' + subText + '</td>\\n';\n\t    }\n\t\n\t    function buildTable(headers, cells) {\n\t      var tb = '<table>\\n<thead>\\n<tr>\\n',\n\t          tblLgn = headers.length;\n\t\n\t      for (var i = 0; i < tblLgn; ++i) {\n\t        tb += headers[i];\n\t      }\n\t      tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\t\n\t      for (i = 0; i < cells.length; ++i) {\n\t        tb += '<tr>\\n';\n\t        for (var ii = 0; ii < tblLgn; ++ii) {\n\t          tb += cells[i][ii];\n\t        }\n\t        tb += '</tr>\\n';\n\t      }\n\t      tb += '</tbody>\\n</table>\\n';\n\t      return tb;\n\t    }\n\t\n\t    text = globals.converter._dispatch('tables.before', text, options, globals);\n\t\n\t    text = text.replace(tableRgx, function (rawTable) {\n\t\n\t      var i,\n\t          tableLines = rawTable.split('\\n');\n\t\n\t      // strip wrong first and last column if wrapped tables are used\n\t      for (i = 0; i < tableLines.length; ++i) {\n\t        if (/^ {0,3}\\|/.test(tableLines[i])) {\n\t          tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, '');\n\t        }\n\t        if (/\\|[ \\t]*$/.test(tableLines[i])) {\n\t          tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n\t        }\n\t      }\n\t\n\t      var rawHeaders = tableLines[0].split('|').map(function (s) {\n\t        return s.trim();\n\t      }),\n\t          rawStyles = tableLines[1].split('|').map(function (s) {\n\t        return s.trim();\n\t      }),\n\t          rawCells = [],\n\t          headers = [],\n\t          styles = [],\n\t          cells = [];\n\t\n\t      tableLines.shift();\n\t      tableLines.shift();\n\t\n\t      for (i = 0; i < tableLines.length; ++i) {\n\t        if (tableLines[i].trim() === '') {\n\t          continue;\n\t        }\n\t        rawCells.push(tableLines[i].split('|').map(function (s) {\n\t          return s.trim();\n\t        }));\n\t      }\n\t\n\t      if (rawHeaders.length < rawStyles.length) {\n\t        return rawTable;\n\t      }\n\t\n\t      for (i = 0; i < rawStyles.length; ++i) {\n\t        styles.push(parseStyles(rawStyles[i]));\n\t      }\n\t\n\t      for (i = 0; i < rawHeaders.length; ++i) {\n\t        if (showdown.helper.isUndefined(styles[i])) {\n\t          styles[i] = '';\n\t        }\n\t        headers.push(parseHeaders(rawHeaders[i], styles[i]));\n\t      }\n\t\n\t      for (i = 0; i < rawCells.length; ++i) {\n\t        var row = [];\n\t        for (var ii = 0; ii < headers.length; ++ii) {\n\t          if (showdown.helper.isUndefined(rawCells[i][ii])) {}\n\t          row.push(parseCells(rawCells[i][ii], styles[ii]));\n\t        }\n\t        cells.push(row);\n\t      }\n\t\n\t      return buildTable(headers, cells);\n\t    });\n\t\n\t    text = globals.converter._dispatch('tables.after', text, options, globals);\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Swap back in all the special characters we've hidden.\n\t   */\n\t  showdown.subParser('unescapeSpecialChars', function (text) {\n\t    'use strict';\n\t\n\t    text = text.replace(/~E(\\d+)E/g, function (wholeMatch, m1) {\n\t      var charCodeToReplace = parseInt(m1);\n\t      return String.fromCharCode(charCodeToReplace);\n\t    });\n\t    return text;\n\t  });\n\t\n\t  var root = this;\n\t\n\t  // CommonJS/nodeJS Loader\n\t  if (typeof module !== 'undefined' && module.exports) {\n\t    module.exports = showdown;\n\t\n\t    // AMD Loader\n\t  } else if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t      'use strict';\n\t\n\t      return showdown;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t    // Regular Browser loader\n\t  } else {\n\t    root.showdown = showdown;\n\t  }\n\t}).call(undefined);\n\t\n\t//# sourceMappingURL=showdown.js.map\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.SyntaxHighlighter = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _prismjs = __webpack_require__(6);\n\t\n\tvar Prism = _interopRequireWildcard(_prismjs);\n\t\n\t__webpack_require__(7);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar SyntaxHighlighter = exports.SyntaxHighlighter = function () {\n\t\t/**\r\n\t  * @constructor\r\n\t  */\n\t\tfunction SyntaxHighlighter() {\n\t\t\t_classCallCheck(this, SyntaxHighlighter);\n\t\n\t\t\tthis._highlighter = Prism;\n\t\t}\n\t\n\t\t/**\r\n\t  *\r\n\t  * @returns {Prism} - syntax highlighter\r\n\t  */\n\t\n\t\n\t\t_createClass(SyntaxHighlighter, [{\n\t\t\tkey: 'getHighlighter',\n\t\t\tget: function get() {\n\t\t\t\treturn this._highlighter;\n\t\t\t}\n\t\t}]);\n\n\t\treturn SyntaxHighlighter;\n\t}();\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t/* **********************************************\n\t     Begin prism-core.js\n\t********************************************** */\n\t\n\tvar _self = typeof window !== 'undefined' ? window // if in browser\n\t: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n\t: {} // if in node js\n\t;\n\t\n\t/**\n\t * Prism: Lightweight, robust, elegant syntax highlighting\n\t * MIT license http://www.opensource.org/licenses/mit-license.php/\n\t * @author Lea Verou http://lea.verou.me\n\t */\n\t\n\tvar Prism = function () {\n\t\n\t\t// Private helper vars\n\t\tvar lang = /\\blang(?:uage)?-(\\w+)\\b/i;\n\t\tvar uniqueId = 0;\n\t\n\t\tvar _ = _self.Prism = {\n\t\t\tutil: {\n\t\t\t\tencode: function encode(tokens) {\n\t\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\ttype: function type(o) {\n\t\t\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t\t\t},\n\t\n\t\t\t\tobjId: function objId(obj) {\n\t\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t\t}\n\t\t\t\t\treturn obj['__id'];\n\t\t\t\t},\n\t\n\t\t\t\t// Deep clone a language definition (e.g. to extend it)\n\t\t\t\tclone: function clone(o) {\n\t\t\t\t\tvar type = _.util.type(o);\n\t\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\t\tvar clone = {};\n\t\n\t\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\treturn clone;\n\t\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\t\t// Check for existence for IE8\n\t\t\t\t\t\t\treturn o.map && o.map(function (v) {\n\t\t\t\t\t\t\t\treturn _.util.clone(v);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tlanguages: {\n\t\t\t\textend: function extend(id, redef) {\n\t\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\t\n\t\t\t\t\tfor (var key in redef) {\n\t\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn lang;\n\t\t\t\t},\n\t\n\t\t\t\t/**\n\t    * Insert a token before another token in a language literal\n\t    * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t    * we cannot just provide an object, we need anobject and a key.\n\t    * @param inside The key (or language id) of the parent\n\t    * @param before The key to insert before. If not provided, the function appends instead.\n\t    * @param insert Object with the key/value pairs to insert\n\t    * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t    */\n\t\t\t\tinsertBefore: function insertBefore(inside, before, insert, root) {\n\t\t\t\t\troot = root || _.languages;\n\t\t\t\t\tvar grammar = root[inside];\n\t\n\t\t\t\t\tif (arguments.length == 2) {\n\t\t\t\t\t\tinsert = arguments[1];\n\t\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn grammar;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar ret = {};\n\t\n\t\t\t\t\tfor (var token in grammar) {\n\t\n\t\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\t\n\t\t\t\t\t\t\tif (token == before) {\n\t\n\t\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\n\t\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Update references in other language definitions\n\t\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\treturn root[inside] = ret;\n\t\t\t\t},\n\t\n\t\t\t\t// Traverse a language definition with Depth First Search\n\t\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\t\tvisited = visited || {};\n\t\t\t\t\tfor (var i in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\t\n\t\t\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t\t\t} else if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: {},\n\t\n\t\t\thighlightAll: function highlightAll(async, callback) {\n\t\t\t\tvar env = {\n\t\t\t\t\tcallback: callback,\n\t\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t\t};\n\t\n\t\t\t\t_.hooks.run(\"before-highlightall\", env);\n\t\n\t\t\t\tvar elements = env.elements || document.querySelectorAll(env.selector);\n\t\n\t\t\t\tfor (var i = 0, element; element = elements[i++];) {\n\t\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\thighlightElement: function highlightElement(element, async, callback) {\n\t\t\t\t// Find language\n\t\t\t\tvar language,\n\t\t\t\t    grammar,\n\t\t\t\t    parent = element;\n\t\n\t\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t}\n\t\n\t\t\t\tif (parent) {\n\t\t\t\t\tlanguage = (parent.className.match(lang) || [, ''])[1].toLowerCase();\n\t\t\t\t\tgrammar = _.languages[language];\n\t\t\t\t}\n\t\n\t\t\t\t// Set language on the element, if not present\n\t\t\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\n\t\t\t\t// Set language on the parent, for styling\n\t\t\t\tparent = element.parentNode;\n\t\n\t\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t\t}\n\t\n\t\t\t\tvar code = element.textContent;\n\t\n\t\t\t\tvar env = {\n\t\t\t\t\telement: element,\n\t\t\t\t\tlanguage: language,\n\t\t\t\t\tgrammar: grammar,\n\t\t\t\t\tcode: code\n\t\t\t\t};\n\t\n\t\t\t\t_.hooks.run('before-sanity-check', env);\n\t\n\t\t\t\tif (!env.code || !env.grammar) {\n\t\t\t\t\tif (env.code) {\n\t\t\t\t\t\tenv.element.textContent = env.code;\n\t\t\t\t\t}\n\t\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t_.hooks.run('before-highlight', env);\n\t\n\t\t\t\tif (async && _self.Worker) {\n\t\t\t\t\tvar worker = new Worker(_.filename);\n\t\n\t\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\t\tenv.highlightedCode = evt.data;\n\t\n\t\t\t\t\t\t_.hooks.run('before-insert', env);\n\t\n\t\t\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\t\n\t\t\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\t\t};\n\t\n\t\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\t\tcode: env.code,\n\t\t\t\t\t\timmediateClose: true\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\t\n\t\t\t\t\t_.hooks.run('before-insert', env);\n\t\n\t\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\t\n\t\t\t\t\tcallback && callback.call(element);\n\t\n\t\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\thighlight: function highlight(text, grammar, language) {\n\t\t\t\tvar tokens = _.tokenize(text, grammar);\n\t\t\t\treturn Token.stringify(_.util.encode(tokens), language);\n\t\t\t},\n\t\n\t\t\ttokenize: function tokenize(text, grammar, language) {\n\t\t\t\tvar Token = _.Token;\n\t\n\t\t\t\tvar strarr = [text];\n\t\n\t\t\t\tvar rest = grammar.rest;\n\t\n\t\t\t\tif (rest) {\n\t\t\t\t\tfor (var token in rest) {\n\t\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdelete grammar.rest;\n\t\t\t\t}\n\t\n\t\t\t\ttokenloop: for (var token in grammar) {\n\t\t\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar patterns = grammar[token];\n\t\t\t\t\tpatterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\t\n\t\t\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\t\t    inside = pattern.inside,\n\t\t\t\t\t\t    lookbehind = !!pattern.lookbehind,\n\t\t\t\t\t\t    greedy = !!pattern.greedy,\n\t\t\t\t\t\t    lookbehindLength = 0,\n\t\t\t\t\t\t    alias = pattern.alias;\n\t\n\t\t\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tpattern = pattern.pattern || pattern;\n\t\n\t\t\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\t\t\tfor (var i = 0, pos = 0; i < strarr.length; pos += strarr[i].length, ++i) {\n\t\n\t\t\t\t\t\t\tvar str = strarr[i];\n\t\n\t\t\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\t\t\tbreak tokenloop;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tpattern.lastIndex = 0;\n\t\n\t\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\t    delNum = 1;\n\t\n\t\t\t\t\t\t\t// Greedy patterns can override/remove up to two previously matched tokens\n\t\t\t\t\t\t\tif (!match && greedy && i != strarr.length - 1) {\n\t\t\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\t\t\tmatch = pattern.exec(text);\n\t\t\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t\t\t    p = pos;\n\t\n\t\t\t\t\t\t\t\tfor (var len = strarr.length; k < len && p < to; ++k) {\n\t\t\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t/*\n\t        * If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t        * If strarr[k - 1] is greedy we are in conflict with another greedy pattern\n\t        */\n\t\t\t\t\t\t\t\tif (strarr[i] instanceof Token || strarr[k - 1].greedy) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif (lookbehind) {\n\t\t\t\t\t\t\t\tlookbehindLength = match[1].length;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t\t\t    after = str.slice(to);\n\t\n\t\t\t\t\t\t\tvar args = [i, delNum];\n\t\n\t\t\t\t\t\t\tif (before) {\n\t\t\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n\t\n\t\t\t\t\t\t\targs.push(wrapped);\n\t\n\t\t\t\t\t\t\tif (after) {\n\t\t\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn strarr;\n\t\t\t},\n\t\n\t\t\thooks: {\n\t\t\t\tall: {},\n\t\n\t\t\t\tadd: function add(name, callback) {\n\t\t\t\t\tvar hooks = _.hooks.all;\n\t\n\t\t\t\t\thooks[name] = hooks[name] || [];\n\t\n\t\t\t\t\thooks[name].push(callback);\n\t\t\t\t},\n\t\n\t\t\t\trun: function run(name, env) {\n\t\t\t\t\tvar callbacks = _.hooks.all[name];\n\t\n\t\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor (var i = 0, callback; callback = callbacks[i++];) {\n\t\t\t\t\t\tcallback(env);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tvar Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n\t\t\tthis.type = type;\n\t\t\tthis.content = content;\n\t\t\tthis.alias = alias;\n\t\t\t// Copy of the full string this token was created from\n\t\t\tthis.length = (matchedStr || \"\").length | 0;\n\t\t\tthis.greedy = !!greedy;\n\t\t};\n\t\n\t\tToken.stringify = function (o, language, parent) {\n\t\t\tif (typeof o == 'string') {\n\t\t\t\treturn o;\n\t\t\t}\n\t\n\t\t\tif (_.util.type(o) === 'Array') {\n\t\t\t\treturn o.map(function (element) {\n\t\t\t\t\treturn Token.stringify(element, language, o);\n\t\t\t\t}).join('');\n\t\t\t}\n\t\n\t\t\tvar env = {\n\t\t\t\ttype: o.type,\n\t\t\t\tcontent: Token.stringify(o.content, language, parent),\n\t\t\t\ttag: 'span',\n\t\t\t\tclasses: ['token', o.type],\n\t\t\t\tattributes: {},\n\t\t\t\tlanguage: language,\n\t\t\t\tparent: parent\n\t\t\t};\n\t\n\t\t\tif (env.type == 'comment') {\n\t\t\t\tenv.attributes['spellcheck'] = 'true';\n\t\t\t}\n\t\n\t\t\tif (o.alias) {\n\t\t\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t}\n\t\n\t\t\t_.hooks.run('wrap', env);\n\t\n\t\t\tvar attributes = Object.keys(env.attributes).map(function (name) {\n\t\t\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t\t}).join(' ');\n\t\n\t\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\t\t};\n\t\n\t\tif (!_self.document) {\n\t\t\tif (!_self.addEventListener) {\n\t\t\t\t// in Node.js\n\t\t\t\treturn _self.Prism;\n\t\t\t}\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\t    lang = message.language,\n\t\t\t\t    code = message.code,\n\t\t\t\t    immediateClose = message.immediateClose;\n\t\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\n\t\t\treturn _self.Prism;\n\t\t}\n\t\n\t\t//Get current script and highlight\n\t\tvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\t\n\t\tif (script) {\n\t\t\t_.filename = script.src;\n\t\n\t\t\tif (document.addEventListener && !script.hasAttribute('data-manual')) {\n\t\t\t\tif (document.readyState !== \"loading\") {\n\t\t\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn _self.Prism;\n\t}();\n\t\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = Prism;\n\t}\n\t\n\t// hack for components to work correctly in node.js\n\tif (typeof global !== 'undefined') {\n\t\tglobal.Prism = Prism;\n\t}\n\t\n\t/* **********************************************\n\t     Begin prism-markup.js\n\t********************************************** */\n\t\n\tPrism.languages.markup = {\n\t\t'comment': /<!--[\\w\\W]*?-->/,\n\t\t'prolog': /<\\?[\\w\\W]+?\\?>/,\n\t\t'doctype': /<!DOCTYPE[\\w\\W]+?>/i,\n\t\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n\t\t'tag': {\n\t\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\t\tinside: {\n\t\t\t\t'tag': {\n\t\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /[=>\"']/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\/?>/,\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\t'entity': /&#?[\\da-z]{1,8};/i\n\t};\n\t\n\t// Plugin to make entity title show the real entity, idea by Roman Komarov\n\tPrism.hooks.add('wrap', function (env) {\n\t\n\t\tif (env.type === 'entity') {\n\t\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t\t}\n\t});\n\t\n\tPrism.languages.xml = Prism.languages.markup;\n\tPrism.languages.html = Prism.languages.markup;\n\tPrism.languages.mathml = Prism.languages.markup;\n\tPrism.languages.svg = Prism.languages.markup;\n\t\n\t/* **********************************************\n\t     Begin prism-css.js\n\t********************************************** */\n\t\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\n\t\t'string': {\n\t\t\tpattern: /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n\t\t'important': /\\B!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:]/\n\t};\n\t\n\tPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\n\t\n\tif (Prism.languages.markup) {\n\t\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t\t'style': {\n\t\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.css,\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t});\n\t\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, Prism.languages.markup.tag);\n\t}\n\t\n\t/* **********************************************\n\t     Begin prism-clike.js\n\t********************************************** */\n\t\n\tPrism.languages.clike = {\n\t\t'comment': [{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\tlookbehind: true\n\t\t}, {\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}],\n\t\t'string': {\n\t\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /(\\.|\\\\)/\n\t\t\t}\n\t\t},\n\t\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t\t'boolean': /\\b(true|false)\\b/,\n\t\t'function': /[a-z0-9_]+(?=\\()/i,\n\t\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n\t\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t\t'punctuation': /[{}[\\];(),.:]/\n\t};\n\t\n\t/* **********************************************\n\t     Begin prism-javascript.js\n\t********************************************** */\n\t\n\tPrism.languages.javascript = Prism.languages.extend('clike', {\n\t\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n\t\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,\n\t\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*\\*?|\\/|~|\\^|%|\\.{3}/\n\t});\n\t\n\tPrism.languages.insertBefore('javascript', 'keyword', {\n\t\t'regex': {\n\t\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('javascript', 'string', {\n\t\t'template-string': {\n\t\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': {\n\t\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t},\n\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'string': /[\\s\\S]+/\n\t\t\t}\n\t\t}\n\t});\n\t\n\tif (Prism.languages.markup) {\n\t\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t\t'script': {\n\t\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript,\n\t\t\t\talias: 'language-javascript'\n\t\t\t}\n\t\t});\n\t}\n\t\n\tPrism.languages.js = Prism.languages.javascript;\n\t\n\t/* **********************************************\n\t     Begin prism-file-highlight.js\n\t********************************************** */\n\t\n\t(function () {\n\t\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tself.Prism.fileHighlight = function () {\n\t\n\t\t\tvar Extensions = {\n\t\t\t\t'js': 'javascript',\n\t\t\t\t'py': 'python',\n\t\t\t\t'rb': 'ruby',\n\t\t\t\t'ps1': 'powershell',\n\t\t\t\t'psm1': 'powershell',\n\t\t\t\t'sh': 'bash',\n\t\t\t\t'bat': 'batch',\n\t\t\t\t'h': 'c',\n\t\t\t\t'tex': 'latex'\n\t\t\t};\n\t\n\t\t\tif (Array.prototype.forEach) {\n\t\t\t\t// Check to prevent error in IE8\n\t\t\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t\t\tvar src = pre.getAttribute('data-src');\n\t\n\t\t\t\t\tvar language,\n\t\t\t\t\t    parent = pre;\n\t\t\t\t\tvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n\t\t\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (!language) {\n\t\t\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar code = document.createElement('code');\n\t\t\t\t\tcode.className = 'language-' + language;\n\t\n\t\t\t\t\tpre.textContent = '';\n\t\n\t\t\t\t\tcode.textContent = 'Loading…';\n\t\n\t\t\t\t\tpre.appendChild(code);\n\t\n\t\t\t\t\tvar xhr = new XMLHttpRequest();\n\t\n\t\t\t\t\txhr.open('GET', src, true);\n\t\n\t\t\t\t\txhr.onreadystatechange = function () {\n\t\t\t\t\t\tif (xhr.readyState == 4) {\n\t\n\t\t\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\n\t\t\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t\t} else if (xhr.status >= 400) {\n\t\t\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\n\t\t\t\t\txhr.send(null);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\n\t\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);\n\t})();\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(8);\n\t\n\t__webpack_require__(9);\n\t\n\t__webpack_require__(10);\n\t\n\t__webpack_require__(11);\n\t\n\t__webpack_require__(12);\n\t\n\t__webpack_require__(13);\n\t\n\t__webpack_require__(14);\n\t\n\t__webpack_require__(15);\n\t\n\t__webpack_require__(16);\n\t\n\t__webpack_require__(17);\n\t\n\t__webpack_require__(18);\n\t\n\t__webpack_require__(19);\n\t\n\t__webpack_require__(20);\n\t\n\t__webpack_require__(21);\n\t\n\t__webpack_require__(22);\n\t\n\t__webpack_require__(23);\n\t\n\t__webpack_require__(24);\n\t\n\t__webpack_require__(25);\n\t\n\t__webpack_require__(26);\n\t\n\t__webpack_require__(27);\n\t\n\t__webpack_require__(28);\n\t\n\t__webpack_require__(29);\n\t\n\t__webpack_require__(30);\n\t\n\t__webpack_require__(31);\n\t\n\t__webpack_require__(32);\n\t\n\t__webpack_require__(33);\n\t\n\t__webpack_require__(34);\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.apacheconf = {\n\t\t'comment': /#.*/,\n\t\t'directive-inline': {\n\t\t\tpattern: /^(\\s*)\\b(AcceptFilter|AcceptPathInfo|AccessFileName|Action|AddAlt|AddAltByEncoding|AddAltByType|AddCharset|AddDefaultCharset|AddDescription|AddEncoding|AddHandler|AddIcon|AddIconByEncoding|AddIconByType|AddInputFilter|AddLanguage|AddModuleInfo|AddOutputFilter|AddOutputFilterByType|AddType|Alias|AliasMatch|Allow|AllowCONNECT|AllowEncodedSlashes|AllowMethods|AllowOverride|AllowOverrideList|Anonymous|Anonymous_LogEmail|Anonymous_MustGiveEmail|Anonymous_NoUserID|Anonymous_VerifyEmail|AsyncRequestWorkerFactor|AuthBasicAuthoritative|AuthBasicFake|AuthBasicProvider|AuthBasicUseDigestAlgorithm|AuthDBDUserPWQuery|AuthDBDUserRealmQuery|AuthDBMGroupFile|AuthDBMType|AuthDBMUserFile|AuthDigestAlgorithm|AuthDigestDomain|AuthDigestNonceLifetime|AuthDigestProvider|AuthDigestQop|AuthDigestShmemSize|AuthFormAuthoritative|AuthFormBody|AuthFormDisableNoStore|AuthFormFakeBasicAuth|AuthFormLocation|AuthFormLoginRequiredLocation|AuthFormLoginSuccessLocation|AuthFormLogoutLocation|AuthFormMethod|AuthFormMimetype|AuthFormPassword|AuthFormProvider|AuthFormSitePassphrase|AuthFormSize|AuthFormUsername|AuthGroupFile|AuthLDAPAuthorizePrefix|AuthLDAPBindAuthoritative|AuthLDAPBindDN|AuthLDAPBindPassword|AuthLDAPCharsetConfig|AuthLDAPCompareAsUser|AuthLDAPCompareDNOnServer|AuthLDAPDereferenceAliases|AuthLDAPGroupAttribute|AuthLDAPGroupAttributeIsDN|AuthLDAPInitialBindAsUser|AuthLDAPInitialBindPattern|AuthLDAPMaxSubGroupDepth|AuthLDAPRemoteUserAttribute|AuthLDAPRemoteUserIsDN|AuthLDAPSearchAsUser|AuthLDAPSubGroupAttribute|AuthLDAPSubGroupClass|AuthLDAPUrl|AuthMerging|AuthName|AuthnCacheContext|AuthnCacheEnable|AuthnCacheProvideFor|AuthnCacheSOCache|AuthnCacheTimeout|AuthnzFcgiCheckAuthnProvider|AuthnzFcgiDefineProvider|AuthType|AuthUserFile|AuthzDBDLoginToReferer|AuthzDBDQuery|AuthzDBDRedirectQuery|AuthzDBMType|AuthzSendForbiddenOnFailure|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|CacheDefaultExpire|CacheDetailHeader|CacheDirLength|CacheDirLevels|CacheDisable|CacheEnable|CacheFile|CacheHeader|CacheIgnoreCacheControl|CacheIgnoreHeaders|CacheIgnoreNoLastMod|CacheIgnoreQueryString|CacheIgnoreURLSessionIdentifiers|CacheKeyBaseURL|CacheLastModifiedFactor|CacheLock|CacheLockMaxAge|CacheLockPath|CacheMaxExpire|CacheMaxFileSize|CacheMinExpire|CacheMinFileSize|CacheNegotiatedDocs|CacheQuickHandler|CacheReadSize|CacheReadTime|CacheRoot|CacheSocache|CacheSocacheMaxSize|CacheSocacheMaxTime|CacheSocacheMinTime|CacheSocacheReadSize|CacheSocacheReadTime|CacheStaleOnError|CacheStoreExpired|CacheStoreNoStore|CacheStorePrivate|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|DeflateBufferSize|DeflateCompressionLevel|DeflateFilterNote|DeflateInflateLimitRequestBody|DeflateInflateRatioBurst|DeflateInflateRatioLimit|DeflateMemLevel|DeflateWindowSize|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|HeartbeatAddress|HeartbeatListen|HeartbeatMaxServers|HeartbeatStorage|HeartbeatStorage|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|IndexHeadInsert|IndexIgnore|IndexIgnoreReset|IndexOptions|IndexOrderDefault|IndexStyleSheet|InputSed|ISAPIAppendLogToErrors|ISAPIAppendLogToQuery|ISAPICacheFile|ISAPIFakeAsync|ISAPILogNotSupported|ISAPIReadAheadBuffer|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAPCacheEntries|LDAPCacheTTL|LDAPConnectionPoolTTL|LDAPConnectionTimeout|LDAPLibraryDebug|LDAPOpCacheEntries|LDAPOpCacheTTL|LDAPReferralHopLimit|LDAPReferrals|LDAPRetries|LDAPRetryDelay|LDAPSharedCacheFile|LDAPSharedCacheSize|LDAPTimeout|LDAPTrustedClientCert|LDAPTrustedGlobalCert|LDAPTrustedMode|LDAPVerifyServerCert|LimitInternalRecursion|LimitRequestBody|LimitRequestFields|LimitRequestFieldSize|LimitRequestLine|LimitXMLRequestBody|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|LuaHookAccessChecker|LuaHookAuthChecker|LuaHookCheckUserID|LuaHookFixups|LuaHookInsertFilter|LuaHookLog|LuaHookMapToStorage|LuaHookTranslateName|LuaHookTypeChecker|LuaInherit|LuaInputFilter|LuaMapHandler|LuaOutputFilter|LuaPackageCPath|LuaPackagePath|LuaQuickHandler|LuaRoot|LuaScope|MaxConnectionsPerChild|MaxKeepAliveRequests|MaxMemFree|MaxRangeOverlaps|MaxRangeReversals|MaxRanges|MaxRequestWorkers|MaxSpareServers|MaxSpareThreads|MaxThreads|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|ProxyAddHeaders|ProxyBadHeader|ProxyBlock|ProxyDomain|ProxyErrorOverride|ProxyExpressDBMFile|ProxyExpressDBMType|ProxyExpressEnable|ProxyFtpDirCharset|ProxyFtpEscapeWildcards|ProxyFtpListOnWildcard|ProxyHTMLBufSize|ProxyHTMLCharsetOut|ProxyHTMLDocType|ProxyHTMLEnable|ProxyHTMLEvents|ProxyHTMLExtended|ProxyHTMLFixups|ProxyHTMLInterp|ProxyHTMLLinks|ProxyHTMLMeta|ProxyHTMLStripComments|ProxyHTMLURLMap|ProxyIOBufferSize|ProxyMaxForwards|ProxyPass|ProxyPassInherit|ProxyPassInterpolateEnv|ProxyPassMatch|ProxyPassReverse|ProxyPassReverseCookieDomain|ProxyPassReverseCookiePath|ProxyPreserveHost|ProxyReceiveBufferSize|ProxyRemote|ProxyRemoteMatch|ProxyRequests|ProxySCGIInternalRedirect|ProxySCGISendfile|ProxySet|ProxySourceAddress|ProxyStatus|ProxyTimeout|ProxyVia|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIPHeader|RemoteIPInternalProxy|RemoteIPInternalProxyList|RemoteIPProxiesHeader|RemoteIPTrustedProxy|RemoteIPTrustedProxyList|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|RewriteBase|RewriteCond|RewriteEngine|RewriteMap|RewriteOptions|RewriteRule|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script|ScriptAlias|ScriptAliasMatch|ScriptInterpreterSource|ScriptLog|ScriptLogBuffer|ScriptLogLength|ScriptSock|SecureListen|SeeRequestTail|SendBufferSize|ServerAdmin|ServerAlias|ServerLimit|ServerName|ServerPath|ServerRoot|ServerSignature|ServerTokens|Session|SessionCookieName|SessionCookieName2|SessionCookieRemove|SessionCryptoCipher|SessionCryptoDriver|SessionCryptoPassphrase|SessionCryptoPassphraseFile|SessionDBDCookieName|SessionDBDCookieName2|SessionDBDCookieRemove|SessionDBDDeleteLabel|SessionDBDInsertLabel|SessionDBDPerUser|SessionDBDSelectLabel|SessionDBDUpdateLabel|SessionEnv|SessionExclude|SessionHeader|SessionInclude|SessionMaxAge|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSLCACertificateFile|SSLCACertificatePath|SSLCADNRequestFile|SSLCADNRequestPath|SSLCARevocationCheck|SSLCARevocationFile|SSLCARevocationPath|SSLCertificateChainFile|SSLCertificateFile|SSLCertificateKeyFile|SSLCipherSuite|SSLCompression|SSLCryptoDevice|SSLEngine|SSLFIPS|SSLHonorCipherOrder|SSLInsecureRenegotiation|SSLOCSPDefaultResponder|SSLOCSPEnable|SSLOCSPOverrideResponder|SSLOCSPResponderTimeout|SSLOCSPResponseMaxAge|SSLOCSPResponseTimeSkew|SSLOCSPUseRequestNonce|SSLOpenSSLConfCmd|SSLOptions|SSLPassPhraseDialog|SSLProtocol|SSLProxyCACertificateFile|SSLProxyCACertificatePath|SSLProxyCARevocationCheck|SSLProxyCARevocationFile|SSLProxyCARevocationPath|SSLProxyCheckPeerCN|SSLProxyCheckPeerExpire|SSLProxyCheckPeerName|SSLProxyCipherSuite|SSLProxyEngine|SSLProxyMachineCertificateChainFile|SSLProxyMachineCertificateFile|SSLProxyMachineCertificatePath|SSLProxyProtocol|SSLProxyVerify|SSLProxyVerifyDepth|SSLRandomSeed|SSLRenegBufferSize|SSLRequire|SSLRequireSSL|SSLSessionCache|SSLSessionCacheTimeout|SSLSessionTicketKeyFile|SSLSRPUnknownUserSeed|SSLSRPVerifierFile|SSLStaplingCache|SSLStaplingErrorCacheTimeout|SSLStaplingFakeTryLater|SSLStaplingForceURL|SSLStaplingResponderTimeout|SSLStaplingResponseMaxAge|SSLStaplingResponseTimeSkew|SSLStaplingReturnResponderErrors|SSLStaplingStandardCacheTimeout|SSLStrictSNIVHostCheck|SSLUserName|SSLUseStapling|SSLVerifyClient|SSLVerifyDepth|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|VirtualDocumentRoot|VirtualDocumentRootIP|VirtualScriptAlias|VirtualScriptAliasIP|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/mi,\n\t\t\tlookbehind: true,\n\t\t\talias: 'property'\n\t\t},\n\t\t'directive-block': {\n\t\t\tpattern: /<\\/?\\b(AuthnProviderAlias|AuthzProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|RequireAll|RequireAny|RequireNone|VirtualHost)\\b *.*>/i,\n\t\t\tinside: {\n\t\t\t\t'directive-block': {\n\t\t\t\t\tpattern: /^<\\/?\\w+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<\\/?/\n\t\t\t\t\t},\n\t\t\t\t\talias: 'tag'\n\t\t\t\t},\n\t\t\t\t'directive-block-parameter': {\n\t\t\t\t\tpattern: /.*[^>]/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /:/,\n\t\t\t\t\t\t'string': {\n\t\t\t\t\t\t\tpattern: /(\"|').*\\1/,\n\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t'variable': /(\\$|%)\\{?(\\w\\.?(\\+|\\-|:)?)+\\}?/\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\talias: 'attr-value'\n\t\t\t\t},\n\t\t\t\t'punctuation': />/\n\t\t\t},\n\t\t\talias: 'tag'\n\t\t},\n\t\t'directive-flags': {\n\t\t\tpattern: /\\[(\\w,?)+\\]/,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /(\"|').*\\1/,\n\t\t\tinside: {\n\t\t\t\t'variable': /(\\$|%)\\{?(\\w\\.?(\\+|\\-|:)?)+\\}?/\n\t\t\t}\n\t\t},\n\t\t'variable': /(\\$|%)\\{?(\\w\\.?(\\+|\\-|:)?)+\\}?/,\n\t\t'regex': /\\^?.*\\$|\\^.*\\$?/\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t(function (Prism) {\n\t\tvar insideString = {\n\t\t\tvariable: [\n\t\t\t// Arithmetic Environment\n\t\t\t{\n\t\t\t\tpattern: /\\$?\\(\\([\\w\\W]+?\\)\\)/,\n\t\t\t\tinside: {\n\t\t\t\t\t// If there is a $ sign at the beginning highlight $(( and )) as variable\n\t\t\t\t\tvariable: [{\n\t\t\t\t\t\tpattern: /(^\\$\\(\\([\\w\\W]+)\\)\\)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t}, /^\\$\\(\\(/],\n\t\t\t\t\tnumber: /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee]-?\\d+)?)\\b/,\n\t\t\t\t\t// Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n\t\t\t\t\toperator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n\t\t\t\t\t// If there is no $ sign at the beginning highlight (( and )) as punctuation\n\t\t\t\t\tpunctuation: /\\(\\(?|\\)\\)?|,|;/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Command Substitution\n\t\t\t{\n\t\t\t\tpattern: /\\$\\([^)]+\\)|`[^`]+`/,\n\t\t\t\tinside: {\n\t\t\t\t\tvariable: /^\\$\\(|^`|\\)$|`$/\n\t\t\t\t}\n\t\t\t}, /\\$(?:[a-z0-9_#\\?\\*!@]+|\\{[^}]+\\})/i]\n\t\t};\n\t\n\t\tPrism.languages.bash = {\n\t\t\t'shebang': {\n\t\t\t\tpattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'comment': {\n\t\t\t\tpattern: /(^|[^\"{\\\\])#.*/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'string': [\n\t\t\t//Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<\\s*)(?:\"|')?(\\w+?)(?:\"|')?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/g,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t}, {\n\t\t\t\tpattern: /([\"'])(?:\\\\\\\\|\\\\?[^\\\\])*?\\1/g,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t}],\n\t\t\t'variable': insideString.variable,\n\t\t\t// Originally based on http://ss64.com/bash/\n\t\t\t'function': {\n\t\t\t\tpattern: /(^|\\s|;|\\||&)(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|\\s|;|\\||&)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'keyword': {\n\t\t\t\tpattern: /(^|\\s|;|\\||&)(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|\\s|;|\\||&)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'boolean': {\n\t\t\t\tpattern: /(^|\\s|;|\\||&)(?:true|false)(?=$|\\s|;|\\||&)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'operator': /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n\t\t\t'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n\t\t};\n\t\n\t\tvar inside = insideString.variable[1].inside;\n\t\tinside['function'] = Prism.languages.bash['function'];\n\t\tinside.keyword = Prism.languages.bash.keyword;\n\t\tinside.boolean = Prism.languages.bash.boolean;\n\t\tinside.operator = Prism.languages.bash.operator;\n\t\tinside.punctuation = Prism.languages.bash.punctuation;\n\t})(Prism);\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.c = Prism.languages.extend('clike', {\n\t\t'keyword': /\\b(asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n\t\t'operator': /\\-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*\\/]/,\n\t\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)[ful]*\\b/i\n\t});\n\t\n\tPrism.languages.insertBefore('c', 'string', {\n\t\t'macro': {\n\t\t\t// allow for multiline macro definitions\n\t\t\t// spaces after the # character compile fine with gcc\n\t\t\tpattern: /(^\\s*)#\\s*[a-z]+([^\\r\\n\\\\]|\\\\.|\\\\(?:\\r\\n?|\\n))*/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'property',\n\t\t\tinside: {\n\t\t\t\t// highlight the path of the include statement as a string\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: /(#\\s*include\\s*)(<.+?>|(\"|')(\\\\?.)+?\\3)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t// highlight macro directives as keywords\n\t\t\t\t'directive': {\n\t\t\t\t\tpattern: /(#\\s*)\\b(define|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// highlight predefined macros as constants\n\t\t'constant': /\\b(__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|stdin|stdout|stderr)\\b/\n\t});\n\t\n\tdelete Prism.languages.c['class-name'];\n\tdelete Prism.languages.c['boolean'];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t(function (Prism) {\n\t\n\t\t// Ignore comments starting with { to privilege string interpolation highlighting\n\t\tvar comment = /#(?!\\{).+/,\n\t\t    interpolation = {\n\t\t\tpattern: /#\\{[^}]+\\}/,\n\t\t\talias: 'variable'\n\t\t};\n\t\n\t\tPrism.languages.coffeescript = Prism.languages.extend('javascript', {\n\t\t\t'comment': comment,\n\t\t\t'string': [\n\t\n\t\t\t// Strings are multiline\n\t\t\t{\n\t\t\t\tpattern: /'(?:\\\\?[^\\\\])*?'/,\n\t\t\t\tgreedy: true\n\t\t\t}, {\n\t\t\t\t// Strings are multiline\n\t\t\t\tpattern: /\"(?:\\\\?[^\\\\])*?\"/,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t}\n\t\t\t}],\n\t\t\t'keyword': /\\b(and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n\t\t\t'class-member': {\n\t\t\t\tpattern: /@(?!\\d)\\w+/,\n\t\t\t\talias: 'variable'\n\t\t\t}\n\t\t});\n\t\n\t\tPrism.languages.insertBefore('coffeescript', 'comment', {\n\t\t\t'multiline-comment': {\n\t\t\t\tpattern: /###[\\s\\S]+?###/,\n\t\t\t\talias: 'comment'\n\t\t\t},\n\t\n\t\t\t// Block regexp can contain comments and interpolation\n\t\t\t'block-regex': {\n\t\t\t\tpattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n\t\t\t\talias: 'regex',\n\t\t\t\tinside: {\n\t\t\t\t\t'comment': comment,\n\t\t\t\t\t'interpolation': interpolation\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\n\t\tPrism.languages.insertBefore('coffeescript', 'string', {\n\t\t\t'inline-javascript': {\n\t\t\t\tpattern: /`(?:\\\\?[\\s\\S])*?`/,\n\t\t\t\tinside: {\n\t\t\t\t\t'delimiter': {\n\t\t\t\t\t\tpattern: /^`|`$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t// Block strings\n\t\t\t'multiline-string': [{\n\t\t\t\tpattern: /'''[\\s\\S]*?'''/,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'string'\n\t\t\t}, {\n\t\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t\t\t\tgreedy: true,\n\t\t\t\talias: 'string',\n\t\t\t\tinside: {\n\t\t\t\t\tinterpolation: interpolation\n\t\t\t\t}\n\t\t\t}]\n\t\n\t\t});\n\t\n\t\tPrism.languages.insertBefore('coffeescript', 'keyword', {\n\t\t\t// Object property\n\t\t\t'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n\t\t});\n\t\n\t\tdelete Prism.languages.coffeescript['template-string'];\n\t})(Prism);\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.cpp = Prism.languages.extend('c', {\n\t\t'keyword': /\\b(alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n\t\t'boolean': /\\b(true|false)\\b/,\n\t\t'operator': /[-+]{1,2}|!=?|<{1,2}=?|>{1,2}=?|\\->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|?\\||\\?|\\*|\\/|\\b(and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n\t});\n\t\n\tPrism.languages.insertBefore('cpp', 'keyword', {\n\t\t'class-name': {\n\t\t\tpattern: /(class\\s+)[a-z0-9_]+/i,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.csharp = Prism.languages.extend('clike', {\n\t\t'keyword': /\\b(abstract|as|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|do|double|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|goto|if|implicit|in|int|interface|internal|is|lock|long|namespace|new|null|object|operator|out|override|params|private|protected|public|readonly|ref|return|sbyte|sealed|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|virtual|void|volatile|while|add|alias|ascending|async|await|descending|dynamic|from|get|global|group|into|join|let|orderby|partial|remove|select|set|value|var|where|yield)\\b/,\n\t\t'string': [/@(\"|')(\\1\\1|\\\\\\1|\\\\?(?!\\1)[\\s\\S])*\\1/, /(\"|')(\\\\?.)*?\\1/],\n\t\t'number': /\\b-?(0x[\\da-f]+|\\d*\\.?\\d+f?)\\b/i\n\t});\n\t\n\tPrism.languages.insertBefore('csharp', 'keyword', {\n\t\t'generic-method': {\n\t\t\tpattern: /[a-z0-9_]+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/i,\n\t\t\talias: 'function',\n\t\t\tinside: {\n\t\t\t\tkeyword: Prism.languages.csharp.keyword,\n\t\t\t\tpunctuation: /[<>(),.:]/\n\t\t\t}\n\t\t},\n\t\t'preprocessor': {\n\t\t\tpattern: /(^\\s*)#.*/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'property',\n\t\t\tinside: {\n\t\t\t\t// highlight preprocessor directives as keywords\n\t\t\t\t'directive': {\n\t\t\t\t\tpattern: /(\\s*#)\\b(define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\n\t\t'string': {\n\t\t\tpattern: /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n\t\t'important': /\\B!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:]/\n\t};\n\t\n\tPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\n\t\n\tif (Prism.languages.markup) {\n\t\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t\t'style': {\n\t\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.css,\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t});\n\t\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, Prism.languages.markup.tag);\n\t}\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.git = {\n\t\t/*\n\t  * A simple one line comment like in a git status command\n\t  * For instance:\n\t  * $ git status\n\t  * # On branch infinite-scroll\n\t  * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n\t  * # and have 1 and 2 different commits each, respectively.\n\t  * nothing to commit (working directory clean)\n\t  */\n\t\t'comment': /^#.*/m,\n\t\n\t\t/*\n\t  * Regexp to match the changed lines in a git diff output. Check the example below.\n\t  */\n\t\t'deleted': /^[-–].*/m,\n\t\t'inserted': /^\\+.*/m,\n\t\n\t\t/*\n\t  * a string (double and simple quote)\n\t  */\n\t\t'string': /(\"|')(\\\\?.)*?\\1/m,\n\t\n\t\t/*\n\t  * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n\t  * For instance:\n\t  * $ git add file.txt\n\t  */\n\t\t'command': {\n\t\t\tpattern: /^.*\\$ git .*$/m,\n\t\t\tinside: {\n\t\t\t\t/*\n\t    * A git command can contain a parameter starting by a single or a double dash followed by a string\n\t    * For instance:\n\t    * $ git diff --cached\n\t    * $ git log -p\n\t    */\n\t\t\t\t'parameter': /\\s(--|-)\\w+/m\n\t\t\t}\n\t\t},\n\t\n\t\t/*\n\t  * Coordinates displayed in a git diff command\n\t  * For instance:\n\t  * $ git diff\n\t  * diff --git file.txt file.txt\n\t  * index 6214953..1d54a52 100644\n\t  * --- file.txt\n\t  * +++ file.txt\n\t  * @@ -1 +1,2 @@\n\t  * -Here's my tetx file\n\t  * +Here's my text file\n\t  * +And this is the second line\n\t  */\n\t\t'coord': /^@@.*@@$/m,\n\t\n\t\t/*\n\t  * Match a \"commit [SHA1]\" line in a git log output.\n\t  * For instance:\n\t  * $ git log\n\t  * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n\t  * Author: lgiraudel\n\t  * Date:   Mon Feb 17 11:18:34 2014 +0100\n\t  *\n\t  *     Add of a new line\n\t  */\n\t\t'commit_sha1': /^commit \\w{40}$/m\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.groovy = Prism.languages.extend('clike', {\n\t\t'keyword': /\\b(as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n\t\t'string': [{\n\t\t\tpattern: /(\"\"\"|''')[\\W\\w]*?\\1|(\\$\\/)(\\$\\/\\$|[\\W\\w])*?\\/\\$/,\n\t\t\tgreedy: true\n\t\t}, {\n\t\t\tpattern: /(\"|'|\\/)(?:\\\\?.)*?\\1/,\n\t\t\tgreedy: true\n\t\t}],\n\t\t'number': /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\n\t\t'operator': {\n\t\t\tpattern: /(^|[^.])(~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /\\.+|[{}[\\];(),:$]/\n\t});\n\t\n\tPrism.languages.insertBefore('groovy', 'string', {\n\t\t'shebang': {\n\t\t\tpattern: /#!.+/,\n\t\t\talias: 'comment'\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('groovy', 'punctuation', {\n\t\t'spock-block': /\\b(setup|given|when|then|and|cleanup|expect|where):/\n\t});\n\t\n\tPrism.languages.insertBefore('groovy', 'function', {\n\t\t'annotation': {\n\t\t\talias: 'punctuation',\n\t\t\tpattern: /(^|[^.])@\\w+/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\t\n\t// Handle string interpolation\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (env.language === 'groovy' && env.type === 'string') {\n\t\t\tvar delimiter = env.content[0];\n\t\n\t\t\tif (delimiter != \"'\") {\n\t\t\t\tvar pattern = /([^\\\\])(\\$(\\{.*?\\}|[\\w\\.]+))/;\n\t\t\t\tif (delimiter === '$') {\n\t\t\t\t\tpattern = /([^\\$])(\\$(\\{.*?\\}|[\\w\\.]+))/;\n\t\t\t\t}\n\t\n\t\t\t\t// To prevent double HTML-encoding we have to decode env.content first\n\t\t\t\tenv.content = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n\t\n\t\t\t\tenv.content = Prism.highlight(env.content, {\n\t\t\t\t\t'expression': {\n\t\t\t\t\t\tpattern: pattern,\n\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\tinside: Prism.languages.groovy\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\tenv.classes.push(delimiter === '/' ? 'regex' : 'gstring');\n\t\t\t}\n\t\t}\n\t});\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.http = {\n\t\t'request-line': {\n\t\t\tpattern: /^(POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b\\shttps?:\\/\\/\\S+\\sHTTP\\/[0-9.]+/m,\n\t\t\tinside: {\n\t\t\t\t// HTTP Verb\n\t\t\t\tproperty: /^(POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n\t\t\t\t// Path or query argument\n\t\t\t\t'attr-name': /:\\w+/\n\t\t\t}\n\t\t},\n\t\t'response-status': {\n\t\t\tpattern: /^HTTP\\/1.[01] [0-9]+.*/m,\n\t\t\tinside: {\n\t\t\t\t// Status, e.g. 200 OK\n\t\t\t\tproperty: {\n\t\t\t\t\tpattern: /(^HTTP\\/1.[01] )[0-9]+.*/i,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// HTTP header name\n\t\t'header-name': {\n\t\t\tpattern: /^[\\w-]+:(?=.)/m,\n\t\t\talias: 'keyword'\n\t\t}\n\t};\n\t\n\t// Create a mapping of Content-Type headers to language definitions\n\tvar httpLanguages = {\n\t\t'application/json': Prism.languages.javascript,\n\t\t'application/xml': Prism.languages.markup,\n\t\t'text/xml': Prism.languages.markup,\n\t\t'text/html': Prism.languages.markup\n\t};\n\t\n\t// Insert each content type parser that has its associated language\n\t// currently loaded.\n\tfor (var contentType in httpLanguages) {\n\t\tif (httpLanguages[contentType]) {\n\t\t\tvar options = {};\n\t\t\toptions[contentType] = {\n\t\t\t\tpattern: new RegExp('(content-type:\\\\s*' + contentType + '[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*', 'i'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: httpLanguages[contentType]\n\t\t\t\t}\n\t\t\t};\n\t\t\tPrism.languages.insertBefore('http', 'header-name', options);\n\t\t}\n\t}\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t(function (Prism) {\n\t\t// TODO:\n\t\t// - Add CSS highlighting inside <style> tags\n\t\t// - Add support for multi-line code blocks\n\t\t// - Add support for interpolation #{} and !{}\n\t\t// - Add support for tag interpolation #[]\n\t\t// - Add explicit support for plain text using |\n\t\t// - Add support for markup embedded in plain text\n\t\n\t\tPrism.languages.jade = {\n\t\n\t\t\t// Multiline stuff should appear before the rest\n\t\n\t\t\t// This handles both single-line and multi-line comments\n\t\t\t'comment': {\n\t\t\t\tpattern: /(^([\\t ]*))\\/\\/.*((?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\n\t\t\t// All the tag-related part is in lookbehind\n\t\t\t// so that it can be highlighted by the \"tag\" pattern\n\t\t\t'multiline-script': {\n\t\t\t\tpattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t// See at the end of the file for known filters\n\t\t\t'filter': {\n\t\t\t\tpattern: /(^([\\t ]*)):.+((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'filter-name': {\n\t\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t'multiline-plain-text': {\n\t\t\t\tpattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'markup': {\n\t\t\t\tpattern: /(^[\\t ]*)<.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: Prism.languages.markup\n\t\t\t\t}\n\t\t\t},\n\t\t\t'doctype': {\n\t\t\t\tpattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\n\t\t\t// This handle all conditional and loop keywords\n\t\t\t'flow-control': {\n\t\t\t\tpattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'each': {\n\t\t\t\t\t\tpattern: /^each .+? in\\b/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'keyword': /\\b(?:each|in)\\b/,\n\t\t\t\t\t\t\t'punctuation': /,/\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'branch': {\n\t\t\t\t\t\tpattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n\t\t\t\t\t\talias: 'keyword'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'keyword': {\n\t\t\t\tpattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'mixin': [\n\t\t\t// Declaration\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*)mixin .+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^mixin/,\n\t\t\t\t\t'function': /\\w+(?=\\s*\\(|\\s*$)/,\n\t\t\t\t\t'punctuation': /[(),.]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Usage\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*)\\+.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'name': {\n\t\t\t\t\t\tpattern: /^\\+\\w+/,\n\t\t\t\t\t\talias: 'function'\n\t\t\t\t\t},\n\t\t\t\t\t'rest': Prism.languages.javascript\n\t\t\t\t}\n\t\t\t}],\n\t\t\t'script': {\n\t\t\t\tpattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t'plain-text': {\n\t\t\t\tpattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'tag': {\n\t\t\t\tpattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'attributes': [{\n\t\t\t\t\t\tpattern: /&[^(]+\\([^)]+\\)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t\t}\n\t\t\t\t\t}, {\n\t\t\t\t\t\tpattern: /\\([^)]+\\)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n\t\t\t\t\t\t\t'punctuation': /[!=(),]+/\n\t\t\t\t\t\t}\n\t\t\t\t\t}],\n\t\t\t\t\t'punctuation': /:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'code': [{\n\t\t\t\tpattern: /(^[\\t ]*(?:-|!?=)).+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t}],\n\t\t\t'punctuation': /[.\\-!=|]+/\n\t\t};\n\t\n\t\tvar filter_pattern = '(^([\\\\t ]*)):{{filter_name}}((?:\\\\r?\\\\n|\\\\r(?!\\\\n))(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\t\n\t\t// Non exhaustive list of available filters and associated languages\n\t\tvar filters = [{ filter: 'atpl', language: 'twig' }, { filter: 'coffee', language: 'coffeescript' }, 'ejs', 'handlebars', 'hogan', 'less', 'livescript', 'markdown', 'mustache', 'plates', { filter: 'sass', language: 'scss' }, 'stylus', 'swig'];\n\t\tvar all_filters = {};\n\t\tfor (var i = 0, l = filters.length; i < l; i++) {\n\t\t\tvar filter = filters[i];\n\t\t\tfilter = typeof filter === 'string' ? { filter: filter, language: filter } : filter;\n\t\t\tif (Prism.languages[filter.language]) {\n\t\t\t\tall_filters['filter-' + filter.filter] = {\n\t\t\t\t\tpattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter), 'm'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'filter-name': {\n\t\t\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t\t},\n\t\t\t\t\t\trest: Prism.languages[filter.language]\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\n\t\tPrism.languages.insertBefore('jade', 'filter', all_filters);\n\t})(Prism);\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.java = Prism.languages.extend('clike', {\n\t\t'keyword': /\\b(abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n\t\t'number': /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp\\-]+\\b|\\b\\d*\\.?\\d+(?:e[+-]?\\d+)?[df]?\\b/i,\n\t\t'operator': {\n\t\t\tpattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('java', 'function', {\n\t\t'annotation': {\n\t\t\talias: 'punctuation',\n\t\t\tpattern: /(^|[^.])@\\w+/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.javascript = Prism.languages.extend('clike', {\n\t\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n\t\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,\n\t\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*\\*?|\\/|~|\\^|%|\\.{3}/\n\t});\n\t\n\tPrism.languages.insertBefore('javascript', 'keyword', {\n\t\t'regex': {\n\t\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('javascript', 'string', {\n\t\t'template-string': {\n\t\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': {\n\t\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t},\n\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'string': /[\\s\\S]+/\n\t\t\t}\n\t\t}\n\t});\n\t\n\tif (Prism.languages.markup) {\n\t\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t\t'script': {\n\t\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript,\n\t\t\t\talias: 'language-javascript'\n\t\t\t}\n\t\t});\n\t}\n\t\n\tPrism.languages.js = Prism.languages.javascript;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.json = {\n\t    'property': /\"(?:\\\\.|[^|\"])*\"(?=\\s*:)/ig,\n\t    'string': /\"(?!:)(?:\\\\.|[^|\"])*\"(?!:)/g,\n\t    'number': /\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?)\\b/g,\n\t    'punctuation': /[{}[\\]);,]/g,\n\t    'operator': /:/g,\n\t    'boolean': /\\b(true|false)\\b/gi,\n\t    'null': /\\bnull\\b/gi\n\t};\n\t\n\tPrism.languages.jsonp = Prism.languages.json;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t(function (Prism) {\n\t\tvar funcPattern = /\\\\([^a-z()[\\]]|[a-z\\*]+)/i,\n\t\t    insideEqu = {\n\t\t\t'equation-command': {\n\t\t\t\tpattern: funcPattern,\n\t\t\t\talias: 'regex'\n\t\t\t}\n\t\t};\n\t\n\t\tPrism.languages.latex = {\n\t\t\t'comment': /%.*/m,\n\t\t\t// the verbatim environment prints whitespace to the document\n\t\t\t'cdata': {\n\t\t\t\tpattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})([\\w\\W]*?)(?=\\\\end\\{\\2\\})/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/*\n\t   * equations can be between $ $ or \\( \\) or \\[ \\]\n\t   * (all are multiline)\n\t   */\n\t\t\t'equation': [{\n\t\t\t\tpattern: /\\$(?:\\\\?[\\w\\W])*?\\$|\\\\\\((?:\\\\?[\\w\\W])*?\\\\\\)|\\\\\\[(?:\\\\?[\\w\\W])*?\\\\\\]/,\n\t\t\t\tinside: insideEqu,\n\t\t\t\talias: 'string'\n\t\t\t}, {\n\t\t\t\tpattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})([\\w\\W]*?)(?=\\\\end\\{\\2\\})/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: insideEqu,\n\t\t\t\talias: 'string'\n\t\t\t}],\n\t\t\t/*\n\t   * arguments which are keywords or references are highlighted\n\t   * as keywords\n\t   */\n\t\t\t'keyword': {\n\t\t\t\tpattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'url': {\n\t\t\t\tpattern: /(\\\\url\\{)[^}]+(?=\\})/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t/*\n\t   * section or chapter headlines are highlighted as bold so that\n\t   * they stand out more\n\t   */\n\t\t\t'headline': {\n\t\t\t\tpattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'class-name'\n\t\t\t},\n\t\t\t'function': {\n\t\t\t\tpattern: funcPattern,\n\t\t\t\talias: 'selector'\n\t\t\t},\n\t\t\t'punctuation': /[[\\]{}&]/\n\t\t};\n\t})(Prism);\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/* FIXME :\n\t :extend() is not handled specifically : its highlighting is buggy.\n\t Mixin usage must be inside a ruleset to be highlighted.\n\t At-rules (e.g. import) containing interpolations are buggy.\n\t Detached rulesets are highlighted as at-rules.\n\t A comment before a mixin usage prevents the latter to be properly highlighted.\n\t */\n\t\n\tPrism.languages.less = Prism.languages.extend('css', {\n\t\t'comment': [/\\/\\*[\\w\\W]*?\\*\\//, {\n\t\t\tpattern: /(^|[^\\\\])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}],\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /[:()]/\n\t\t\t}\n\t\t},\n\t\t// selectors and mixins are considered the same\n\t\t'selector': {\n\t\t\tpattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n\t\t\tinside: {\n\t\t\t\t// mixin parameters\n\t\t\t\t'variable': /@+[\\w-]+/\n\t\t\t}\n\t\t},\n\t\n\t\t'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n\t\t'punctuation': /[{}();:,]/,\n\t\t'operator': /[+\\-*\\/]/\n\t});\n\t\n\t// Invert function and punctuation positions\n\tPrism.languages.insertBefore('less', 'punctuation', {\n\t\t'function': Prism.languages.less.function\n\t});\n\t\n\tPrism.languages.insertBefore('less', 'property', {\n\t\t'variable': [\n\t\t// Variable declaration (the colon must be consumed!)\n\t\t{\n\t\t\tpattern: /@[\\w-]+\\s*:/,\n\t\t\tinside: {\n\t\t\t\t\"punctuation\": /:/\n\t\t\t}\n\t\t},\n\t\n\t\t// Variable usage\n\t\t/@@?[\\w-]+/],\n\t\t'mixin-usage': {\n\t\t\tpattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'function'\n\t\t}\n\t});\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.markdown = Prism.languages.extend('markup', {});\n\tPrism.languages.insertBefore('markdown', 'prolog', {\n\t\t'blockquote': {\n\t\t\t// > ...\n\t\t\tpattern: /^>(?:[\\t ]*>)*/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'code': [{\n\t\t\t// Prefixed by 4 spaces or 1 tab\n\t\t\tpattern: /^(?: {4}|\\t).+/m,\n\t\t\talias: 'keyword'\n\t\t}, {\n\t\t\t// `code`\n\t\t\t// ``code``\n\t\t\tpattern: /``.+?``|`[^`\\n]+`/,\n\t\t\talias: 'keyword'\n\t\t}],\n\t\t'title': [{\n\t\t\t// title 1\n\t\t\t// =======\n\t\n\t\t\t// title 2\n\t\t\t// -------\n\t\t\tpattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n\t\t\talias: 'important',\n\t\t\tinside: {\n\t\t\t\tpunctuation: /==+$|--+$/\n\t\t\t}\n\t\t}, {\n\t\t\t// # title 1\n\t\t\t// ###### title 6\n\t\t\tpattern: /(^\\s*)#+.+/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'important',\n\t\t\tinside: {\n\t\t\t\tpunctuation: /^#+|#+$/\n\t\t\t}\n\t\t}],\n\t\t'hr': {\n\t\t\t// ***\n\t\t\t// ---\n\t\t\t// * * *\n\t\t\t// -----------\n\t\t\tpattern: /(^\\s*)([*-])([\\t ]*\\2){2,}(?=\\s*$)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'list': {\n\t\t\t// * item\n\t\t\t// + item\n\t\t\t// - item\n\t\t\t// 1. item\n\t\t\tpattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'url-reference': {\n\t\t\t// [id]: http://example.com \"Optional title\"\n\t\t\t// [id]: http://example.com 'Optional title'\n\t\t\t// [id]: http://example.com (Optional title)\n\t\t\t// [id]: <http://example.com> \"Optional title\"\n\t\t\tpattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n\t\t\tinside: {\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /^(!?\\[)[^\\]]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n\t\t\t\t'punctuation': /^[\\[\\]!:]|[<>]/\n\t\t\t},\n\t\t\talias: 'url'\n\t\t},\n\t\t'bold': {\n\t\t\t// **strong**\n\t\t\t// __strong__\n\t\n\t\t\t// Allow only one line break\n\t\t\tpattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\*\\*|^__|\\*\\*$|__$/\n\t\t\t}\n\t\t},\n\t\t'italic': {\n\t\t\t// *em*\n\t\t\t// _em_\n\t\n\t\t\t// Allow only one line break\n\t\t\tpattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^[*_]|[*_]$/\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// [example](http://example.com \"Optional title\")\n\t\t\t// [example] [id]\n\t\t\tpattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n\t\t\tinside: {\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\t\n\tPrism.languages.markdown['bold'].inside['url'] = Prism.util.clone(Prism.languages.markdown['url']);\n\tPrism.languages.markdown['italic'].inside['url'] = Prism.util.clone(Prism.languages.markdown['url']);\n\tPrism.languages.markdown['bold'].inside['italic'] = Prism.util.clone(Prism.languages.markdown['italic']);\n\tPrism.languages.markdown['italic'].inside['bold'] = Prism.util.clone(Prism.languages.markdown['bold']);\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.markup = {\n\t\t'comment': /<!--[\\w\\W]*?-->/,\n\t\t'prolog': /<\\?[\\w\\W]+?\\?>/,\n\t\t'doctype': /<!DOCTYPE[\\w\\W]+?>/i,\n\t\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n\t\t'tag': {\n\t\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\t\tinside: {\n\t\t\t\t'tag': {\n\t\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /[=>\"']/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\/?>/,\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\t'entity': /&#?[\\da-z]{1,8};/i\n\t};\n\t\n\t// Plugin to make entity title show the real entity, idea by Roman Komarov\n\tPrism.hooks.add('wrap', function (env) {\n\t\n\t\tif (env.type === 'entity') {\n\t\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t\t}\n\t});\n\t\n\tPrism.languages.xml = Prism.languages.markup;\n\tPrism.languages.html = Prism.languages.markup;\n\tPrism.languages.mathml = Prism.languages.markup;\n\tPrism.languages.svg = Prism.languages.markup;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.nginx = Prism.languages.extend('clike', {\n\t        'comment': {\n\t                pattern: /(^|[^\"{\\\\])#.*/,\n\t                lookbehind: true\n\t        },\n\t        'keyword': /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|server|events|location|include|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types)\\b/i\n\t});\n\t\n\tPrism.languages.insertBefore('nginx', 'keyword', {\n\t        'variable': /\\$[a-z_]+/i\n\t});\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n\t * Modified by Miles Johnson: http://milesj.me\n\t *\n\t * Supports the following:\n\t * \t\t- Extends clike syntax\n\t * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n\t * \t\t- Smarter constant and function matching\n\t *\n\t * Adds the following new token classes:\n\t * \t\tconstant, delimiter, variable, function, package\n\t */\n\t\n\tPrism.languages.php = Prism.languages.extend('clike', {\n\t\t'keyword': /\\b(and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n\t\t'constant': /\\b[A-Z0-9_]{2,}\\b/,\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t});\n\t\n\t// Shell-like comments are matched after strings, because they are less\n\t// common than strings containing hashes...\n\tPrism.languages.insertBefore('php', 'class-name', {\n\t\t'shell-comment': {\n\t\t\tpattern: /(^|[^\\\\])#.*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'comment'\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('php', 'keyword', {\n\t\t'delimiter': /\\?>|<\\?(?:php)?/i,\n\t\t'variable': /\\$\\w+\\b/i,\n\t\t'package': {\n\t\t\tpattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /\\\\/\n\t\t\t}\n\t\t}\n\t});\n\t\n\t// Must be defined after the function pattern\n\tPrism.languages.insertBefore('php', 'operator', {\n\t\t'property': {\n\t\t\tpattern: /(->)[\\w]+/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\t\n\t// Add HTML support of the markup language exists\n\tif (Prism.languages.markup) {\n\t\n\t\t// Tokenize all inline PHP blocks that are wrapped in <?php ?>\n\t\t// This allows for easy PHP + markup highlighting\n\t\tPrism.hooks.add('before-highlight', function (env) {\n\t\t\tif (env.language !== 'php') {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tenv.tokenStack = [];\n\t\n\t\t\tenv.backupCode = env.code;\n\t\t\tenv.code = env.code.replace(/(?:<\\?php|<\\?)[\\w\\W]*?(?:\\?>)/ig, function (match) {\n\t\t\t\tenv.tokenStack.push(match);\n\t\n\t\t\t\treturn '{{{PHP' + env.tokenStack.length + '}}}';\n\t\t\t});\n\t\t});\n\t\n\t\t// Restore env.code for other plugins (e.g. line-numbers)\n\t\tPrism.hooks.add('before-insert', function (env) {\n\t\t\tif (env.language === 'php') {\n\t\t\t\tenv.code = env.backupCode;\n\t\t\t\tdelete env.backupCode;\n\t\t\t}\n\t\t});\n\t\n\t\t// Re-insert the tokens after highlighting\n\t\tPrism.hooks.add('after-highlight', function (env) {\n\t\t\tif (env.language !== 'php') {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tfor (var i = 0, t; t = env.tokenStack[i]; i++) {\n\t\t\t\t// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns\n\t\t\t\tenv.highlightedCode = env.highlightedCode.replace('{{{PHP' + (i + 1) + '}}}', Prism.highlight(t, env.grammar, 'php').replace(/\\$/g, '$$$$'));\n\t\t\t}\n\t\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\t\t});\n\t\n\t\t// Wrap tokens in classes that are missing them\n\t\tPrism.hooks.add('wrap', function (env) {\n\t\t\tif (env.language === 'php' && env.type === 'markup') {\n\t\t\t\tenv.content = env.content.replace(/(\\{\\{\\{PHP[0-9]+\\}\\}\\})/g, \"<span class=\\\"token php\\\">$1</span>\");\n\t\t\t}\n\t\t});\n\t\n\t\t// Add the rules before all others\n\t\tPrism.languages.insertBefore('php', 'comment', {\n\t\t\t'markup': {\n\t\t\t\tpattern: /<[^?]\\/?(.*?)>/,\n\t\t\t\tinside: Prism.languages.markup\n\t\t\t},\n\t\t\t'php': /\\{\\{\\{PHP[0-9]+\\}\\}\\}/\n\t\t});\n\t}\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.properties = {\n\t\t'comment': /^[ \\t]*[#!].*$/m,\n\t\t'attr-value': {\n\t\t\tpattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|.)+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[ =:]| )/m,\n\t\t'punctuation': /[=:]/\n\t};\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.python = {\n\t\t'triple-quoted-string': {\n\t\t\tpattern: /\"\"\"[\\s\\S]+?\"\"\"|'''[\\s\\S]+?'''/,\n\t\t\talias: 'string'\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])#.*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /(\"|')(?:\\\\\\\\|\\\\?[^\\\\\\r\\n])*?\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'function': {\n\t\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_][a-zA-Z0-9_]*(?=\\()/g,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /(\\bclass\\s+)[a-z0-9_]+/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|with|yield)\\b/,\n\t\t'boolean': /\\b(?:True|False)\\b/,\n\t\t'number': /\\b-?(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n\t\t'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n\t\t'punctuation': /[{}[\\];(),.:]/\n\t};\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.scss = Prism.languages.extend('css', {\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t// url, compassified\n\t\t'url': /(?:[-a-z]+-)*url(?=\\()/i,\n\t\t// CSS selector regex is not appropriate for Sass\n\t\t// since there can be lot more things (var, @ directive, nesting..)\n\t\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\n\t\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n\t\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n\t\t// can \"pass\" as a selector- e.g: proper#{$erty})\n\t\t// this one was hard to do, so please be careful if you edit this one :)\n\t\t'selector': {\n\t\t\t// Initial look-ahead is used to prevent matching of blank selectors\n\t\t\tpattern: /(?=\\S)[^@;\\{\\}\\(\\)]?([^@;\\{\\}\\(\\)]|&|#\\{\\$[-_\\w]+\\})+(?=\\s*\\{(\\}|\\s|[^\\}]+(:|\\{)[^\\}]+))/m,\n\t\t\tinside: {\n\t\t\t\t'parent': {\n\t\t\t\t\tpattern: /&/,\n\t\t\t\t\talias: 'important'\n\t\t\t\t},\n\t\t\t\t'placeholder': /%[-_\\w]+/,\n\t\t\t\t'variable': /\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/\n\t\t\t}\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('scss', 'atrule', {\n\t\t'keyword': [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n\t\t\tpattern: /( +)(?:from|through)(?= )/,\n\t\t\tlookbehind: true\n\t\t}]\n\t});\n\t\n\tPrism.languages.scss.property = {\n\t\tpattern: /(?:[\\w-]|\\$[-_\\w]+|#\\{\\$[-_\\w]+\\})+(?=\\s*:)/i,\n\t\tinside: {\n\t\t\t'variable': /\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/\n\t\t}\n\t};\n\t\n\tPrism.languages.insertBefore('scss', 'important', {\n\t\t// var and interpolated vars\n\t\t'variable': /\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/\n\t});\n\t\n\tPrism.languages.insertBefore('scss', 'function', {\n\t\t'placeholder': {\n\t\t\tpattern: /%[-_\\w]+/,\n\t\t\talias: 'selector'\n\t\t},\n\t\t'statement': {\n\t\t\tpattern: /\\B!(?:default|optional)\\b/i,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'null': /\\bnull\\b/,\n\t\t'operator': {\n\t\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n\t\t\tlookbehind: true\n\t\t}\n\t});\n\t\n\tPrism.languages.scss['atrule'].inside.rest = Prism.util.clone(Prism.languages.scss);\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t(function (Prism) {\n\t\tvar inside = {\n\t\t\t'url': /url\\(([\"']?).*?\\1\\)/i,\n\t\t\t'string': /(\"|')(?:[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*?\\1/,\n\t\t\t'interpolation': null, // See below\n\t\t\t'func': null, // See below\n\t\t\t'important': /\\B!(?:important|optional)\\b/i,\n\t\t\t'keyword': {\n\t\t\t\tpattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'hexcode': /#[\\da-f]{3,6}/i,\n\t\t\t'number': /\\b\\d+(?:\\.\\d+)?%?/,\n\t\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t\t'operator': [\n\t\t\t// We want non-word chars around \"-\" because it is\n\t\t\t// accepted in property names.\n\t\t\t/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n\t\t\t'punctuation': /[{}()\\[\\];:,]/\n\t\t};\n\t\n\t\tinside['interpolation'] = {\n\t\t\tpattern: /\\{[^\\r\\n}:]+\\}/,\n\t\t\talias: 'variable',\n\t\t\tinside: Prism.util.clone(inside)\n\t\t};\n\t\tinside['func'] = {\n\t\t\tpattern: /[\\w-]+\\([^)]*\\).*/,\n\t\t\tinside: {\n\t\t\t\t'function': /^[^(]+/,\n\t\t\t\trest: Prism.util.clone(inside)\n\t\t\t}\n\t\t};\n\t\n\t\tPrism.languages.stylus = {\n\t\t\t'comment': {\n\t\t\t\tpattern: /(^|[^\\\\])(\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'atrule-declaration': {\n\t\t\t\tpattern: /(^\\s*)@.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'atrule': /^@[\\w-]+/,\n\t\t\t\t\trest: inside\n\t\t\t\t}\n\t\t\t},\n\t\t\t'variable-declaration': {\n\t\t\t\tpattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'variable': /^\\S+/,\n\t\t\t\t\trest: inside\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t'statement': {\n\t\t\t\tpattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\tkeyword: /^\\S+/,\n\t\t\t\t\trest: inside\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t// A property/value pair cannot end with a comma or a brace\n\t\t\t// It cannot have indented content unless it ended with a semicolon\n\t\t\t'property-declaration': {\n\t\t\t\tpattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'property': {\n\t\t\t\t\t\tpattern: /^[^\\s:]+/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'interpolation': inside.interpolation\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trest: inside\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t// A selector can contain parentheses only as part of a pseudo-element\n\t\t\t// It can span multiple lines.\n\t\t\t// It must end with a comma or an accolade or have indented content.\n\t\t\t'selector': {\n\t\t\t\tpattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation': inside.interpolation,\n\t\t\t\t\t'punctuation': /[{},]/\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t'func': inside.func,\n\t\t\t'string': inside.string,\n\t\t\t'interpolation': inside.interpolation,\n\t\t\t'punctuation': /[{}()\\[\\];:.]/\n\t\t};\n\t})(Prism);\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.typescript = Prism.languages.extend('javascript', {\n\t\t'keyword': /\\b(break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|package|private|protected|public|return|set|static|super|switch|this|throw|true|try|typeof|var|void|while|with|yield|module|declare|constructor|string|Function|any|number|boolean|Array|enum)\\b/\n\t});\n\t\n\tPrism.languages.ts = Prism.languages.typescript;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.wiki = Prism.languages.extend('markup', {\n\t\t'block-comment': {\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\tlookbehind: true,\n\t\t\talias: 'comment'\n\t\t},\n\t\t'heading': {\n\t\t\tpattern: /^(=+).+?\\1/m,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^=+|=+$/,\n\t\t\t\t'important': /.+/\n\t\t\t}\n\t\t},\n\t\t'emphasis': {\n\t\t\t// TODO Multi-line\n\t\t\tpattern: /('{2,5}).+?\\1/,\n\t\t\tinside: {\n\t\t\t\t'bold italic': {\n\t\t\t\t\tpattern: /(''''').+?(?=\\1)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'bold': {\n\t\t\t\t\tpattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'italic': {\n\t\t\t\t\tpattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'punctuation': /^''+|''+$/\n\t\t\t}\n\t\t},\n\t\t'hr': {\n\t\t\tpattern: /^-{4,}/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'url': [/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i, /\\[\\[.+?\\]\\]|\\[.+?\\]/],\n\t\t'variable': [/__[A-Z]+__/,\n\t\t// FIXME Nested structures should be handled\n\t\t// {{formatnum:{{#expr:{{{3}}}}}}}\n\t\t/\\{{3}.+?\\}{3}/, /\\{\\{.+?}}/],\n\t\t'symbol': [/^#redirect/im, /~{3,5}/],\n\t\t// Handle table attrs:\n\t\t// {|\n\t\t// ! style=\"text-align:left;\"| Item\n\t\t// |}\n\t\t'table-tag': {\n\t\t\tpattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'table-bar': {\n\t\t\t\t\tpattern: /\\|$/,\n\t\t\t\t\talias: 'punctuation'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.markup['tag'].inside\n\t\t\t}\n\t\t},\n\t\t'punctuation': /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n\t});\n\t\n\tPrism.languages.insertBefore('wiki', 'tag', {\n\t\t// Prevent highlighting inside <nowiki>, <source> and <pre> tags\n\t\t'nowiki': {\n\t\t\tpattern: /<(nowiki|pre|source)\\b[\\w\\W]*?>[\\w\\W]*?<\\/\\1>/i,\n\t\t\tinside: {\n\t\t\t\t'tag': {\n\t\t\t\t\tpattern: /<(?:nowiki|pre|source)\\b[\\w\\W]*?>|<\\/(?:nowiki|pre|source)>/i,\n\t\t\t\t\tinside: Prism.languages.markup['tag'].inside\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tPrism.languages.yaml = {\n\t\t'scalar': {\n\t\t\tpattern: /([\\-:]\\s*(![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\3[^\\r\\n]+)*)/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'comment': /#.*/,\n\t\t'key': {\n\t\t\tpattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'atrule'\n\t\t},\n\t\t'directive': {\n\t\t\tpattern: /(^[ \\t]*)%.+/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'important'\n\t\t},\n\t\t'datetime': {\n\t\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(\\d{4}-\\d\\d?-\\d\\d?([tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(\\.\\d*)?[ \\t]*(Z|[-+]\\d\\d?(:\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(:\\d{2}(\\.\\d*)?)?)(?=[ \\t]*($|,|]|}))/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'number'\n\t\t},\n\t\t'boolean': {\n\t\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(true|false)[ \\t]*(?=$|,|]|})/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'important'\n\t\t},\n\t\t'null': {\n\t\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(null|~)[ \\t]*(?=$|,|]|})/im,\n\t\t\tlookbehind: true,\n\t\t\talias: 'important'\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')(?=[ \\t]*($|,|]|}))/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'number': {\n\t\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)[+\\-]?(0x[\\da-f]+|0o[0-7]+|(\\d+\\.?\\d*|\\.?\\d+)(e[\\+\\-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'tag': /![^\\s]+/,\n\t\t'important': /[&*][\\w]+/,\n\t\t'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n\t};\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.TextareaEditor = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _HTMLElement2 = __webpack_require__(36);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar TextareaEditor = exports.TextareaEditor = function (_HTMLElement) {\n\t\t_inherits(TextareaEditor, _HTMLElement);\n\t\n\t\t/**\r\n\t  * Represents TextareaEditor\r\n\t  *\r\n\t  * @constructor\r\n\t  * @param {String} className\r\n\t  * @param {Element} parent\r\n\t  */\n\t\tfunction TextareaEditor(className, parent) {\n\t\t\t_classCallCheck(this, TextareaEditor);\n\t\n\t\t\treturn _possibleConstructorReturn(this, (TextareaEditor.__proto__ || Object.getPrototypeOf(TextareaEditor)).call(this, 'textarea', className, parent));\n\t\t}\n\t\n\t\t/**\r\n\t  * Get the initialized editor element\r\n\t  *\r\n\t  * @returns {Element} - element of the editor\r\n\t  */\n\t\n\t\n\t\t_createClass(TextareaEditor, [{\n\t\t\tkey: 'getContent',\n\t\n\t\n\t\t\t/**\r\n\t   * Get the content of the editor\r\n\t   *\r\n\t   * @returns {String} - the content of editor\r\n\t   */\n\t\t\tvalue: function getContent() {\n\t\t\t\treturn this._element.value;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Set the content of the editor\r\n\t   *\r\n\t   * @param {String} content - content for the editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'setContent',\n\t\t\tvalue: function setContent(content) {\n\t\t\t\tthis._element.value = content;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Alternative for getContent()\r\n\t   * @see getContent\r\n\t   *\r\n\t   * @returns {String} - the content of editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'getMarkdown',\n\t\t\tvalue: function getMarkdown() {\n\t\t\t\treturn this.getContent();\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Alternative for setContent()\r\n\t   * @see setContent\r\n\t   *\r\n\t   * @param {String} markdown - content for the editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'setMarkdown',\n\t\t\tvalue: function setMarkdown(markdown) {\n\t\t\t\tthis.setContent(markdown);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Append the given value to the content of the editor\r\n\t   *\r\n\t   * @param {String} content - additional content for the editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'appendContent',\n\t\t\tvalue: function appendContent(content) {\n\t\t\t\tthis._element.value = this._editor.value + content;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Prepend the given value to the content of the editor\r\n\t   *\r\n\t   * @param {String} content - additional content for the editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'prependContent',\n\t\t\tvalue: function prependContent(content) {\n\t\t\t\tthis._element.value = content + this._editor.value;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Refresh preview automatically if the editor content is changed\r\n\t   *\r\n\t   * @param {Element|Array} element - the element or array of elements that will contain the compiled html content\r\n\t   * @param {Converter} converter - the converter that converts the markdown to html\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'convertMarkdownToHtmlEventListener',\n\t\t\tvalue: function convertMarkdownToHtmlEventListener(element, converter) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tthis.addEventListener('input', function () {\n\t\t\t\t\tvar html = converter.makeHtml(_this2.getContent());\n\t\t\t\t\tif (element instanceof Array) {\n\t\t\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tfor (var _iterator = element[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\t\t\tvar e = _step.value;\n\t\n\t\t\t\t\t\t\t\te.innerHTML = html;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.innerHTML = html;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Copy content of editor to hidden input automatically\r\n\t   *\r\n\t   * @param {Element} element - this element gets the content of the editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'copyMarkdownContentToHiddenInputEventListener',\n\t\t\tvalue: function copyMarkdownContentToHiddenInputEventListener(element) {\n\t\t\t\tvar _this3 = this;\n\t\n\t\t\t\tthis.addEventListener('input', function () {\n\t\t\t\t\treturn element.innerHTML = _this3.getContent();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   *\r\n\t   * @returns {string}\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'getSelectedContent',\n\t\t\tvalue: function getSelectedContent() {\n\t\t\t\tvar start = this._element.selectionStart;\n\t\t\t\tvar end = this._element.selectionEnd;\n\t\t\t\treturn this._element.value.substring(start, end);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   *\r\n\t   * @param content\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'setSelectedContent',\n\t\t\tvalue: function setSelectedContent(content) {\n\t\t\t\tvar start = this._element.selectionStart;\n\t\t\t\tvar end = this._element.selectionEnd;\n\t\t\t\tthis._element.value = this._element.value.substring(0, start) + content + this._element.value.substring(end);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   *\r\n\t   * @returns {Number}\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'getCursorPosition',\n\t\t\tvalue: function getCursorPosition() {\n\t\t\t\treturn this._element.selectionStart;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   *\r\n\t   * @param {Number} position\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'setCursorPosition',\n\t\t\tvalue: function setCursorPosition(position) {\n\t\t\t\tthis._element.selectionStart = position;\n\t\t\t\tthis._element.selectionEnd = position;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Process the content by triggering the input event\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'processContent',\n\t\t\tvalue: function processContent() {\n\t\t\t\tvar e = new Event('input');\n\t\t\t\tthis._element.dispatchEvent(e);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getEditor',\n\t\t\tget: function get() {\n\t\t\t\treturn this._element;\n\t\t\t}\n\t\t}]);\n\n\t\treturn TextareaEditor;\n\t}(_HTMLElement2.HTMLElement);\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar HTMLElement = exports.HTMLElement = function () {\n\t\n\t\t/**\r\n\t  * Represents a HTMLElement\r\n\t  *\r\n\t  * @constructor\r\n\t  * @param {String} type - the string value of the html tag\r\n\t  * @param {String} className - the name of the html element\r\n\t  * @param {Element} parent - the parent element of the created element\r\n\t  * @param {Object} params - additional parameters for the created element\r\n\t  */\n\t\tfunction HTMLElement(type, className, parent) {\n\t\t\tvar params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t\n\t\t\t_classCallCheck(this, HTMLElement);\n\t\n\t\t\tthis.init(type, className, parent, params);\n\t\t}\n\t\n\t\t/**\r\n\t  * Initialize HTML element\r\n\t  * Get a type, a className and additional params to create a html element\r\n\t  * and append the created element to the parent\r\n\t  *\r\n\t  * @param {String} type - the string value of the html tag\r\n\t  * @param {String} className - the name of the html element\r\n\t  * @param {Element} parent - the parent element of the created element\r\n\t  * @param {Object} params - additional parameters for the created element\r\n\t  */\n\t\n\t\n\t\t_createClass(HTMLElement, [{\n\t\t\tkey: \"init\",\n\t\t\tvalue: function init(type, className, parent, params) {\n\t\t\t\t// Create element\n\t\t\t\tvar element = HTMLElement.createElement(type, className, params);\n\t\n\t\t\t\t// Append element to parent\n\t\t\t\tHTMLElement.appendElementToParent(element, parent);\n\t\n\t\t\t\t// Get the element from the dom\n\t\t\t\tthis.setElementByClassName(className);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Get the element\r\n\t   *\r\n\t   * @returns {Element} - the element\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"setElementByClassName\",\n\t\n\t\n\t\t\t/**\r\n\t   * Get the element by the class name with querySelector\r\n\t   *\r\n\t   * @param {String} className - the string value of the class name without dot\r\n\t   */\n\t\t\tvalue: function setElementByClassName(className) {\n\t\t\t\tthis._element = document.querySelector(\".\" + className);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Create an eventListener for the html element\r\n\t   *\r\n\t   * @param {String} event - the string value of the event name\r\n\t   * @param {Function} callback - the function that should be run when the event is fired\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"addEventListener\",\n\t\t\tvalue: function addEventListener(event, callback) {\n\t\t\t\tthis._element.addEventListener(event, callback);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Create a new element of given type with class name and parameters\r\n\t   *\r\n\t   * @param {String} type - the string value of type of the new element\r\n\t   * @param {String} className - the string value of the class attribute of the element without dot\r\n\t   * @param {Object} params - parameter object to set attribute of the element\r\n\t   * @returns {Element} - return a new element\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"getElement\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._element;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Set the element\r\n\t   *\r\n\t   * @param {Element} element - the new value of the element\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"setElement\",\n\t\t\tset: function set(element) {\n\t\t\t\tthis._element = element;\n\t\t\t}\n\t\t}], [{\n\t\t\tkey: \"createElement\",\n\t\t\tvalue: function createElement(type, className, params) {\n\t\t\t\tvar element = document.createElement(type);\n\t\t\t\telement.className = className;\n\t\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = Object.keys(params)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar key = _step.value;\n\t\n\t\t\t\t\t\telement[key] = params[key];\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn element;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Append the element to the parent element as a child\r\n\t   *\r\n\t   * @param {Element} element - the element that will be appended to the parent\r\n\t   * @param {Element} parent - the parent element that will contain the given element\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"appendElementToParent\",\n\t\t\tvalue: function appendElementToParent(element, parent) {\n\t\t\t\tparent.appendChild(element);\n\t\t\t}\n\t\t}]);\n\n\t\treturn HTMLElement;\n\t}();\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.Preview = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _HTMLElement2 = __webpack_require__(36);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Preview = exports.Preview = function (_HTMLElement) {\n\t\t_inherits(Preview, _HTMLElement);\n\t\n\t\t/**\r\n\t  * Represents Preview\r\n\t  *\r\n\t  * @constructor\r\n\t  * @param className\r\n\t  * @param parent\r\n\t  */\n\t\tfunction Preview(className, parent) {\n\t\t\t_classCallCheck(this, Preview);\n\t\n\t\t\treturn _possibleConstructorReturn(this, (Preview.__proto__ || Object.getPrototypeOf(Preview)).call(this, 'div', className, parent));\n\t\t}\n\t\n\t\t/**\r\n\t  * Get the preview element\r\n\t  *\r\n\t  * @returns {Element} - the preview element\r\n\t  */\n\t\n\t\n\t\t_createClass(Preview, [{\n\t\t\tkey: 'getPreview',\n\t\t\tget: function get() {\n\t\t\t\treturn this._element;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Preview;\n\t}(_HTMLElement2.HTMLElement);\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.UserInteraction = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _mousetrap = __webpack_require__(39);\n\t\n\tvar Mousetrap = _interopRequireWildcard(_mousetrap);\n\t\n\t__webpack_require__(40);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar UserInteraction = exports.UserInteraction = function () {\n\t\n\t\t/**\r\n\t  * Represents UserInteraction\r\n\t  *\r\n\t  * @constructor\r\n\t  * @param {Element} element\r\n\t  */\n\t\tfunction UserInteraction() {\n\t\t\tvar element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\n\t\t\t_classCallCheck(this, UserInteraction);\n\t\n\t\t\tthis._mousetrap = new Mousetrap.default(element);\n\t\t}\n\t\n\t\t/**\r\n\t  *\r\n\t  * @param key\r\n\t  * @param callback\r\n\t  */\n\t\n\t\n\t\t_createClass(UserInteraction, [{\n\t\t\tkey: 'keyboardEvent',\n\t\t\tvalue: function keyboardEvent(key, callback) {\n\t\t\t\tthis._mousetrap.bind(key, callback);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   *\r\n\t   * @param key\r\n\t   * @param callback\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'keyboardEventGlobal',\n\t\t\tvalue: function keyboardEventGlobal(key, callback) {\n\t\t\t\tthis._mousetrap.bindGlobal(key, callback);\n\t\t\t}\n\t\t}]);\n\n\t\treturn UserInteraction;\n\t}();\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\t/*global define:false */\n\t/**\n\t * Copyright 2016 Craig Campbell\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * Mousetrap is a simple keyboard shortcut library for Javascript with\n\t * no external dependencies\n\t *\n\t * @version 1.6.0\n\t * @url craig.is/killing/mice\n\t */\n\t(function (window, document, undefined) {\n\t\n\t    // Check if mousetrap is used inside browser, if not, return\n\t    if (!window) {\n\t        return;\n\t    }\n\t\n\t    /**\n\t     * mapping of special keycodes to their corresponding keys\n\t     *\n\t     * everything in this dictionary cannot use keypress events\n\t     * so it has to be here to map to the correct keycodes for\n\t     * keyup/keydown events\n\t     *\n\t     * @type {Object}\n\t     */\n\t    var _MAP = {\n\t        8: 'backspace',\n\t        9: 'tab',\n\t        13: 'enter',\n\t        16: 'shift',\n\t        17: 'ctrl',\n\t        18: 'alt',\n\t        20: 'capslock',\n\t        27: 'esc',\n\t        32: 'space',\n\t        33: 'pageup',\n\t        34: 'pagedown',\n\t        35: 'end',\n\t        36: 'home',\n\t        37: 'left',\n\t        38: 'up',\n\t        39: 'right',\n\t        40: 'down',\n\t        45: 'ins',\n\t        46: 'del',\n\t        91: 'meta',\n\t        93: 'meta',\n\t        224: 'meta'\n\t    };\n\t\n\t    /**\n\t     * mapping for special characters so they can support\n\t     *\n\t     * this dictionary is only used incase you want to bind a\n\t     * keyup or keydown event to one of these keys\n\t     *\n\t     * @type {Object}\n\t     */\n\t    var _KEYCODE_MAP = {\n\t        106: '*',\n\t        107: '+',\n\t        109: '-',\n\t        110: '.',\n\t        111: '/',\n\t        186: ';',\n\t        187: '=',\n\t        188: ',',\n\t        189: '-',\n\t        190: '.',\n\t        191: '/',\n\t        192: '`',\n\t        219: '[',\n\t        220: '\\\\',\n\t        221: ']',\n\t        222: '\\''\n\t    };\n\t\n\t    /**\n\t     * this is a mapping of keys that require shift on a US keypad\n\t     * back to the non shift equivelents\n\t     *\n\t     * this is so you can use keyup events with these keys\n\t     *\n\t     * note that this will only work reliably on US keyboards\n\t     *\n\t     * @type {Object}\n\t     */\n\t    var _SHIFT_MAP = {\n\t        '~': '`',\n\t        '!': '1',\n\t        '@': '2',\n\t        '#': '3',\n\t        '$': '4',\n\t        '%': '5',\n\t        '^': '6',\n\t        '&': '7',\n\t        '*': '8',\n\t        '(': '9',\n\t        ')': '0',\n\t        '_': '-',\n\t        '+': '=',\n\t        ':': ';',\n\t        '\\\"': '\\'',\n\t        '<': ',',\n\t        '>': '.',\n\t        '?': '/',\n\t        '|': '\\\\'\n\t    };\n\t\n\t    /**\n\t     * this is a list of special strings you can use to map\n\t     * to modifier keys when you specify your keyboard shortcuts\n\t     *\n\t     * @type {Object}\n\t     */\n\t    var _SPECIAL_ALIASES = {\n\t        'option': 'alt',\n\t        'command': 'meta',\n\t        'return': 'enter',\n\t        'escape': 'esc',\n\t        'plus': '+',\n\t        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n\t    };\n\t\n\t    /**\n\t     * variable to store the flipped version of _MAP from above\n\t     * needed to check if we should use keypress or not when no action\n\t     * is specified\n\t     *\n\t     * @type {Object|undefined}\n\t     */\n\t    var _REVERSE_MAP;\n\t\n\t    /**\n\t     * loop through the f keys, f1 to f19 and add them to the map\n\t     * programatically\n\t     */\n\t    for (var i = 1; i < 20; ++i) {\n\t        _MAP[111 + i] = 'f' + i;\n\t    }\n\t\n\t    /**\n\t     * loop through to map numbers on the numeric keypad\n\t     */\n\t    for (i = 0; i <= 9; ++i) {\n\t        _MAP[i + 96] = i;\n\t    }\n\t\n\t    /**\n\t     * cross browser add event method\n\t     *\n\t     * @param {Element|HTMLDocument} object\n\t     * @param {string} type\n\t     * @param {Function} callback\n\t     * @returns void\n\t     */\n\t    function _addEvent(object, type, callback) {\n\t        if (object.addEventListener) {\n\t            object.addEventListener(type, callback, false);\n\t            return;\n\t        }\n\t\n\t        object.attachEvent('on' + type, callback);\n\t    }\n\t\n\t    /**\n\t     * takes the event and returns the key character\n\t     *\n\t     * @param {Event} e\n\t     * @return {string}\n\t     */\n\t    function _characterFromEvent(e) {\n\t\n\t        // for keypress events we should return the character as is\n\t        if (e.type == 'keypress') {\n\t            var character = String.fromCharCode(e.which);\n\t\n\t            // if the shift key is not pressed then it is safe to assume\n\t            // that we want the character to be lowercase.  this means if\n\t            // you accidentally have caps lock on then your key bindings\n\t            // will continue to work\n\t            //\n\t            // the only side effect that might not be desired is if you\n\t            // bind something like 'A' cause you want to trigger an\n\t            // event when capital A is pressed caps lock will no longer\n\t            // trigger the event.  shift+a will though.\n\t            if (!e.shiftKey) {\n\t                character = character.toLowerCase();\n\t            }\n\t\n\t            return character;\n\t        }\n\t\n\t        // for non keypress events the special maps are needed\n\t        if (_MAP[e.which]) {\n\t            return _MAP[e.which];\n\t        }\n\t\n\t        if (_KEYCODE_MAP[e.which]) {\n\t            return _KEYCODE_MAP[e.which];\n\t        }\n\t\n\t        // if it is not in the special map\n\t\n\t        // with keydown and keyup events the character seems to always\n\t        // come in as an uppercase character whether you are pressing shift\n\t        // or not.  we should make sure it is always lowercase for comparisons\n\t        return String.fromCharCode(e.which).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * checks if two arrays are equal\n\t     *\n\t     * @param {Array} modifiers1\n\t     * @param {Array} modifiers2\n\t     * @returns {boolean}\n\t     */\n\t    function _modifiersMatch(modifiers1, modifiers2) {\n\t        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n\t    }\n\t\n\t    /**\n\t     * takes a key event and figures out what the modifiers are\n\t     *\n\t     * @param {Event} e\n\t     * @returns {Array}\n\t     */\n\t    function _eventModifiers(e) {\n\t        var modifiers = [];\n\t\n\t        if (e.shiftKey) {\n\t            modifiers.push('shift');\n\t        }\n\t\n\t        if (e.altKey) {\n\t            modifiers.push('alt');\n\t        }\n\t\n\t        if (e.ctrlKey) {\n\t            modifiers.push('ctrl');\n\t        }\n\t\n\t        if (e.metaKey) {\n\t            modifiers.push('meta');\n\t        }\n\t\n\t        return modifiers;\n\t    }\n\t\n\t    /**\n\t     * prevents default for this event\n\t     *\n\t     * @param {Event} e\n\t     * @returns void\n\t     */\n\t    function _preventDefault(e) {\n\t        if (e.preventDefault) {\n\t            e.preventDefault();\n\t            return;\n\t        }\n\t\n\t        e.returnValue = false;\n\t    }\n\t\n\t    /**\n\t     * stops propogation for this event\n\t     *\n\t     * @param {Event} e\n\t     * @returns void\n\t     */\n\t    function _stopPropagation(e) {\n\t        if (e.stopPropagation) {\n\t            e.stopPropagation();\n\t            return;\n\t        }\n\t\n\t        e.cancelBubble = true;\n\t    }\n\t\n\t    /**\n\t     * determines if the keycode specified is a modifier key or not\n\t     *\n\t     * @param {string} key\n\t     * @returns {boolean}\n\t     */\n\t    function _isModifier(key) {\n\t        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n\t    }\n\t\n\t    /**\n\t     * reverses the map lookup so that we can look for specific keys\n\t     * to see what can and can't use keypress\n\t     *\n\t     * @return {Object}\n\t     */\n\t    function _getReverseMap() {\n\t        if (!_REVERSE_MAP) {\n\t            _REVERSE_MAP = {};\n\t            for (var key in _MAP) {\n\t\n\t                // pull out the numeric keypad from here cause keypress should\n\t                // be able to detect the keys from the character\n\t                if (key > 95 && key < 112) {\n\t                    continue;\n\t                }\n\t\n\t                if (_MAP.hasOwnProperty(key)) {\n\t                    _REVERSE_MAP[_MAP[key]] = key;\n\t                }\n\t            }\n\t        }\n\t        return _REVERSE_MAP;\n\t    }\n\t\n\t    /**\n\t     * picks the best action based on the key combination\n\t     *\n\t     * @param {string} key - character for key\n\t     * @param {Array} modifiers\n\t     * @param {string=} action passed in\n\t     */\n\t    function _pickBestAction(key, modifiers, action) {\n\t\n\t        // if no action was picked in we should try to pick the one\n\t        // that we think would work best for this key\n\t        if (!action) {\n\t            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n\t        }\n\t\n\t        // modifier keys don't work as expected with keypress,\n\t        // switch to keydown\n\t        if (action == 'keypress' && modifiers.length) {\n\t            action = 'keydown';\n\t        }\n\t\n\t        return action;\n\t    }\n\t\n\t    /**\n\t     * Converts from a string key combination to an array\n\t     *\n\t     * @param  {string} combination like \"command+shift+l\"\n\t     * @return {Array}\n\t     */\n\t    function _keysFromString(combination) {\n\t        if (combination === '+') {\n\t            return ['+'];\n\t        }\n\t\n\t        combination = combination.replace(/\\+{2}/g, '+plus');\n\t        return combination.split('+');\n\t    }\n\t\n\t    /**\n\t     * Gets info for a specific key combination\n\t     *\n\t     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n\t     * @param  {string=} action\n\t     * @returns {Object}\n\t     */\n\t    function _getKeyInfo(combination, action) {\n\t        var keys;\n\t        var key;\n\t        var i;\n\t        var modifiers = [];\n\t\n\t        // take the keys from this pattern and figure out what the actual\n\t        // pattern is all about\n\t        keys = _keysFromString(combination);\n\t\n\t        for (i = 0; i < keys.length; ++i) {\n\t            key = keys[i];\n\t\n\t            // normalize key names\n\t            if (_SPECIAL_ALIASES[key]) {\n\t                key = _SPECIAL_ALIASES[key];\n\t            }\n\t\n\t            // if this is not a keypress event then we should\n\t            // be smart about using shift keys\n\t            // this will only work for US keyboards however\n\t            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n\t                key = _SHIFT_MAP[key];\n\t                modifiers.push('shift');\n\t            }\n\t\n\t            // if this key is a modifier then add it to the list of modifiers\n\t            if (_isModifier(key)) {\n\t                modifiers.push(key);\n\t            }\n\t        }\n\t\n\t        // depending on what the key combination is\n\t        // we will try to pick the best event for it\n\t        action = _pickBestAction(key, modifiers, action);\n\t\n\t        return {\n\t            key: key,\n\t            modifiers: modifiers,\n\t            action: action\n\t        };\n\t    }\n\t\n\t    function _belongsTo(element, ancestor) {\n\t        if (element === null || element === document) {\n\t            return false;\n\t        }\n\t\n\t        if (element === ancestor) {\n\t            return true;\n\t        }\n\t\n\t        return _belongsTo(element.parentNode, ancestor);\n\t    }\n\t\n\t    function Mousetrap(targetElement) {\n\t        var self = this;\n\t\n\t        targetElement = targetElement || document;\n\t\n\t        if (!(self instanceof Mousetrap)) {\n\t            return new Mousetrap(targetElement);\n\t        }\n\t\n\t        /**\n\t         * element to attach key events to\n\t         *\n\t         * @type {Element}\n\t         */\n\t        self.target = targetElement;\n\t\n\t        /**\n\t         * a list of all the callbacks setup via Mousetrap.bind()\n\t         *\n\t         * @type {Object}\n\t         */\n\t        self._callbacks = {};\n\t\n\t        /**\n\t         * direct map of string combinations to callbacks used for trigger()\n\t         *\n\t         * @type {Object}\n\t         */\n\t        self._directMap = {};\n\t\n\t        /**\n\t         * keeps track of what level each sequence is at since multiple\n\t         * sequences can start out with the same sequence\n\t         *\n\t         * @type {Object}\n\t         */\n\t        var _sequenceLevels = {};\n\t\n\t        /**\n\t         * variable to store the setTimeout call\n\t         *\n\t         * @type {null|number}\n\t         */\n\t        var _resetTimer;\n\t\n\t        /**\n\t         * temporary state where we will ignore the next keyup\n\t         *\n\t         * @type {boolean|string}\n\t         */\n\t        var _ignoreNextKeyup = false;\n\t\n\t        /**\n\t         * temporary state where we will ignore the next keypress\n\t         *\n\t         * @type {boolean}\n\t         */\n\t        var _ignoreNextKeypress = false;\n\t\n\t        /**\n\t         * are we currently inside of a sequence?\n\t         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n\t         *\n\t         * @type {boolean|string}\n\t         */\n\t        var _nextExpectedAction = false;\n\t\n\t        /**\n\t         * resets all sequence counters except for the ones passed in\n\t         *\n\t         * @param {Object} doNotReset\n\t         * @returns void\n\t         */\n\t        function _resetSequences(doNotReset) {\n\t            doNotReset = doNotReset || {};\n\t\n\t            var activeSequences = false,\n\t                key;\n\t\n\t            for (key in _sequenceLevels) {\n\t                if (doNotReset[key]) {\n\t                    activeSequences = true;\n\t                    continue;\n\t                }\n\t                _sequenceLevels[key] = 0;\n\t            }\n\t\n\t            if (!activeSequences) {\n\t                _nextExpectedAction = false;\n\t            }\n\t        }\n\t\n\t        /**\n\t         * finds all callbacks that match based on the keycode, modifiers,\n\t         * and action\n\t         *\n\t         * @param {string} character\n\t         * @param {Array} modifiers\n\t         * @param {Event|Object} e\n\t         * @param {string=} sequenceName - name of the sequence we are looking for\n\t         * @param {string=} combination\n\t         * @param {number=} level\n\t         * @returns {Array}\n\t         */\n\t        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n\t            var i;\n\t            var callback;\n\t            var matches = [];\n\t            var action = e.type;\n\t\n\t            // if there are no events related to this keycode\n\t            if (!self._callbacks[character]) {\n\t                return [];\n\t            }\n\t\n\t            // if a modifier key is coming up on its own we should allow it\n\t            if (action == 'keyup' && _isModifier(character)) {\n\t                modifiers = [character];\n\t            }\n\t\n\t            // loop through all callbacks for the key that was pressed\n\t            // and see if any of them match\n\t            for (i = 0; i < self._callbacks[character].length; ++i) {\n\t                callback = self._callbacks[character][i];\n\t\n\t                // if a sequence name is not specified, but this is a sequence at\n\t                // the wrong level then move onto the next match\n\t                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n\t                    continue;\n\t                }\n\t\n\t                // if the action we are looking for doesn't match the action we got\n\t                // then we should keep going\n\t                if (action != callback.action) {\n\t                    continue;\n\t                }\n\t\n\t                // if this is a keypress event and the meta key and control key\n\t                // are not pressed that means that we need to only look at the\n\t                // character, otherwise check the modifiers as well\n\t                //\n\t                // chrome will not fire a keypress if meta or control is down\n\t                // safari will fire a keypress if meta or meta+shift is down\n\t                // firefox will fire a keypress if meta or control is down\n\t                if (action == 'keypress' && !e.metaKey && !e.ctrlKey || _modifiersMatch(modifiers, callback.modifiers)) {\n\t\n\t                    // when you bind a combination or sequence a second time it\n\t                    // should overwrite the first one.  if a sequenceName or\n\t                    // combination is specified in this call it does just that\n\t                    //\n\t                    // @todo make deleting its own method?\n\t                    var deleteCombo = !sequenceName && callback.combo == combination;\n\t                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n\t                    if (deleteCombo || deleteSequence) {\n\t                        self._callbacks[character].splice(i, 1);\n\t                    }\n\t\n\t                    matches.push(callback);\n\t                }\n\t            }\n\t\n\t            return matches;\n\t        }\n\t\n\t        /**\n\t         * actually calls the callback function\n\t         *\n\t         * if your callback function returns false this will use the jquery\n\t         * convention - prevent default and stop propogation on the event\n\t         *\n\t         * @param {Function} callback\n\t         * @param {Event} e\n\t         * @returns void\n\t         */\n\t        function _fireCallback(callback, e, combo, sequence) {\n\t\n\t            // if this event should not happen stop here\n\t            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n\t                return;\n\t            }\n\t\n\t            if (callback(e, combo) === false) {\n\t                _preventDefault(e);\n\t                _stopPropagation(e);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * handles a character key event\n\t         *\n\t         * @param {string} character\n\t         * @param {Array} modifiers\n\t         * @param {Event} e\n\t         * @returns void\n\t         */\n\t        self._handleKey = function (character, modifiers, e) {\n\t            var callbacks = _getMatches(character, modifiers, e);\n\t            var i;\n\t            var doNotReset = {};\n\t            var maxLevel = 0;\n\t            var processedSequenceCallback = false;\n\t\n\t            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n\t            for (i = 0; i < callbacks.length; ++i) {\n\t                if (callbacks[i].seq) {\n\t                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n\t                }\n\t            }\n\t\n\t            // loop through matching callbacks for this key event\n\t            for (i = 0; i < callbacks.length; ++i) {\n\t\n\t                // fire for all sequence callbacks\n\t                // this is because if for example you have multiple sequences\n\t                // bound such as \"g i\" and \"g t\" they both need to fire the\n\t                // callback for matching g cause otherwise you can only ever\n\t                // match the first one\n\t                if (callbacks[i].seq) {\n\t\n\t                    // only fire callbacks for the maxLevel to prevent\n\t                    // subsequences from also firing\n\t                    //\n\t                    // for example 'a option b' should not cause 'option b' to fire\n\t                    // even though 'option b' is part of the other sequence\n\t                    //\n\t                    // any sequences that do not match here will be discarded\n\t                    // below by the _resetSequences call\n\t                    if (callbacks[i].level != maxLevel) {\n\t                        continue;\n\t                    }\n\t\n\t                    processedSequenceCallback = true;\n\t\n\t                    // keep a list of which sequences were matches for later\n\t                    doNotReset[callbacks[i].seq] = 1;\n\t                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n\t                    continue;\n\t                }\n\t\n\t                // if there were no sequence matches but we are still here\n\t                // that means this is a regular match so we should fire that\n\t                if (!processedSequenceCallback) {\n\t                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n\t                }\n\t            }\n\t\n\t            // if the key you pressed matches the type of sequence without\n\t            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n\t            // reset all sequences that were not matched by this event\n\t            //\n\t            // this is so, for example, if you have the sequence \"h a t\" and you\n\t            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n\t            // cause the sequence to reset\n\t            //\n\t            // modifier keys are ignored because you can have a sequence\n\t            // that contains modifiers such as \"enter ctrl+space\" and in most\n\t            // cases the modifier key will be pressed before the next key\n\t            //\n\t            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n\t            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n\t            //\n\t            // the \"keydown\" is expected when there is a modifier, but the\n\t            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n\t            // after and that causes the sequence to reset\n\t            //\n\t            // we ignore keypresses in a sequence that directly follow a keydown\n\t            // for the same character\n\t            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n\t            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n\t                _resetSequences(doNotReset);\n\t            }\n\t\n\t            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n\t        };\n\t\n\t        /**\n\t         * handles a keydown event\n\t         *\n\t         * @param {Event} e\n\t         * @returns void\n\t         */\n\t        function _handleKeyEvent(e) {\n\t\n\t            // normalize e.which for key events\n\t            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n\t            if (typeof e.which !== 'number') {\n\t                e.which = e.keyCode;\n\t            }\n\t\n\t            var character = _characterFromEvent(e);\n\t\n\t            // no character found then stop\n\t            if (!character) {\n\t                return;\n\t            }\n\t\n\t            // need to use === for the character check because the character can be 0\n\t            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n\t                _ignoreNextKeyup = false;\n\t                return;\n\t            }\n\t\n\t            self.handleKey(character, _eventModifiers(e), e);\n\t        }\n\t\n\t        /**\n\t         * called to set a 1 second timeout on the specified sequence\n\t         *\n\t         * this is so after each key press in the sequence you have 1 second\n\t         * to press the next key before you have to start over\n\t         *\n\t         * @returns void\n\t         */\n\t        function _resetSequenceTimer() {\n\t            clearTimeout(_resetTimer);\n\t            _resetTimer = setTimeout(_resetSequences, 1000);\n\t        }\n\t\n\t        /**\n\t         * binds a key sequence to an event\n\t         *\n\t         * @param {string} combo - combo specified in bind call\n\t         * @param {Array} keys\n\t         * @param {Function} callback\n\t         * @param {string=} action\n\t         * @returns void\n\t         */\n\t        function _bindSequence(combo, keys, callback, action) {\n\t\n\t            // start off by adding a sequence level record for this combination\n\t            // and setting the level to 0\n\t            _sequenceLevels[combo] = 0;\n\t\n\t            /**\n\t             * callback to increase the sequence level for this sequence and reset\n\t             * all other sequences that were active\n\t             *\n\t             * @param {string} nextAction\n\t             * @returns {Function}\n\t             */\n\t            function _increaseSequence(nextAction) {\n\t                return function () {\n\t                    _nextExpectedAction = nextAction;\n\t                    ++_sequenceLevels[combo];\n\t                    _resetSequenceTimer();\n\t                };\n\t            }\n\t\n\t            /**\n\t             * wraps the specified callback inside of another function in order\n\t             * to reset all sequence counters as soon as this sequence is done\n\t             *\n\t             * @param {Event} e\n\t             * @returns void\n\t             */\n\t            function _callbackAndReset(e) {\n\t                _fireCallback(callback, e, combo);\n\t\n\t                // we should ignore the next key up if the action is key down\n\t                // or keypress.  this is so if you finish a sequence and\n\t                // release the key the final key will not trigger a keyup\n\t                if (action !== 'keyup') {\n\t                    _ignoreNextKeyup = _characterFromEvent(e);\n\t                }\n\t\n\t                // weird race condition if a sequence ends with the key\n\t                // another sequence begins with\n\t                setTimeout(_resetSequences, 10);\n\t            }\n\t\n\t            // loop through keys one at a time and bind the appropriate callback\n\t            // function.  for any key leading up to the final one it should\n\t            // increase the sequence. after the final, it should reset all sequences\n\t            //\n\t            // if an action is specified in the original bind call then that will\n\t            // be used throughout.  otherwise we will pass the action that the\n\t            // next key in the sequence should match.  this allows a sequence\n\t            // to mix and match keypress and keydown events depending on which\n\t            // ones are better suited to the key provided\n\t            for (var i = 0; i < keys.length; ++i) {\n\t                var isFinal = i + 1 === keys.length;\n\t                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n\t                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * binds a single keyboard combination\n\t         *\n\t         * @param {string} combination\n\t         * @param {Function} callback\n\t         * @param {string=} action\n\t         * @param {string=} sequenceName - name of sequence if part of sequence\n\t         * @param {number=} level - what part of the sequence the command is\n\t         * @returns void\n\t         */\n\t        function _bindSingle(combination, callback, action, sequenceName, level) {\n\t\n\t            // store a direct mapped reference for use with Mousetrap.trigger\n\t            self._directMap[combination + ':' + action] = callback;\n\t\n\t            // make sure multiple spaces in a row become a single space\n\t            combination = combination.replace(/\\s+/g, ' ');\n\t\n\t            var sequence = combination.split(' ');\n\t            var info;\n\t\n\t            // if this pattern is a sequence of keys then run through this method\n\t            // to reprocess each pattern one key at a time\n\t            if (sequence.length > 1) {\n\t                _bindSequence(combination, sequence, callback, action);\n\t                return;\n\t            }\n\t\n\t            info = _getKeyInfo(combination, action);\n\t\n\t            // make sure to initialize array if this is the first time\n\t            // a callback is added for this key\n\t            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\t\n\t            // remove an existing match if there is one\n\t            _getMatches(info.key, info.modifiers, { type: info.action }, sequenceName, combination, level);\n\t\n\t            // add this call back to the array\n\t            // if it is a sequence put it at the beginning\n\t            // if not put it at the end\n\t            //\n\t            // this is important because the way these are processed expects\n\t            // the sequence ones to come first\n\t            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n\t                callback: callback,\n\t                modifiers: info.modifiers,\n\t                action: info.action,\n\t                seq: sequenceName,\n\t                level: level,\n\t                combo: combination\n\t            });\n\t        }\n\t\n\t        /**\n\t         * binds multiple combinations to the same callback\n\t         *\n\t         * @param {Array} combinations\n\t         * @param {Function} callback\n\t         * @param {string|undefined} action\n\t         * @returns void\n\t         */\n\t        self._bindMultiple = function (combinations, callback, action) {\n\t            for (var i = 0; i < combinations.length; ++i) {\n\t                _bindSingle(combinations[i], callback, action);\n\t            }\n\t        };\n\t\n\t        // start!\n\t        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n\t        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n\t        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n\t    }\n\t\n\t    /**\n\t     * binds an event to mousetrap\n\t     *\n\t     * can be a single key, a combination of keys separated with +,\n\t     * an array of keys, or a sequence of keys separated by spaces\n\t     *\n\t     * be sure to list the modifier keys first to make sure that the\n\t     * correct key ends up getting bound (the last key in the pattern)\n\t     *\n\t     * @param {string|Array} keys\n\t     * @param {Function} callback\n\t     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n\t     * @returns void\n\t     */\n\t    Mousetrap.prototype.bind = function (keys, callback, action) {\n\t        var self = this;\n\t        keys = keys instanceof Array ? keys : [keys];\n\t        self._bindMultiple.call(self, keys, callback, action);\n\t        return self;\n\t    };\n\t\n\t    /**\n\t     * unbinds an event to mousetrap\n\t     *\n\t     * the unbinding sets the callback function of the specified key combo\n\t     * to an empty function and deletes the corresponding key in the\n\t     * _directMap dict.\n\t     *\n\t     * TODO: actually remove this from the _callbacks dictionary instead\n\t     * of binding an empty function\n\t     *\n\t     * the keycombo+action has to be exactly the same as\n\t     * it was defined in the bind method\n\t     *\n\t     * @param {string|Array} keys\n\t     * @param {string} action\n\t     * @returns void\n\t     */\n\t    Mousetrap.prototype.unbind = function (keys, action) {\n\t        var self = this;\n\t        return self.bind.call(self, keys, function () {}, action);\n\t    };\n\t\n\t    /**\n\t     * triggers an event that has already been bound\n\t     *\n\t     * @param {string} keys\n\t     * @param {string=} action\n\t     * @returns void\n\t     */\n\t    Mousetrap.prototype.trigger = function (keys, action) {\n\t        var self = this;\n\t        if (self._directMap[keys + ':' + action]) {\n\t            self._directMap[keys + ':' + action]({}, keys);\n\t        }\n\t        return self;\n\t    };\n\t\n\t    /**\n\t     * resets the library back to its initial state.  this is useful\n\t     * if you want to clear out the current keyboard shortcuts and bind\n\t     * new ones - for example if you switch to another page\n\t     *\n\t     * @returns void\n\t     */\n\t    Mousetrap.prototype.reset = function () {\n\t        var self = this;\n\t        self._callbacks = {};\n\t        self._directMap = {};\n\t        return self;\n\t    };\n\t\n\t    /**\n\t     * should we stop this event before firing off callbacks\n\t     *\n\t     * @param {Event} e\n\t     * @param {Element} element\n\t     * @return {boolean}\n\t     */\n\t    Mousetrap.prototype.stopCallback = function (e, element) {\n\t        var self = this;\n\t\n\t        // if the element has the class \"mousetrap\" then no need to stop\n\t        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n\t            return false;\n\t        }\n\t\n\t        if (_belongsTo(element, self.target)) {\n\t            return false;\n\t        }\n\t\n\t        // stop for input, select, and textarea\n\t        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n\t    };\n\t\n\t    /**\n\t     * exposes _handleKey publicly so it can be overwritten by extensions\n\t     */\n\t    Mousetrap.prototype.handleKey = function () {\n\t        var self = this;\n\t        return self._handleKey.apply(self, arguments);\n\t    };\n\t\n\t    /**\n\t     * allow custom key mappings\n\t     */\n\t    Mousetrap.addKeycodes = function (object) {\n\t        for (var key in object) {\n\t            if (object.hasOwnProperty(key)) {\n\t                _MAP[key] = object[key];\n\t            }\n\t        }\n\t        _REVERSE_MAP = null;\n\t    };\n\t\n\t    /**\n\t     * Init the global mousetrap functions\n\t     *\n\t     * This method is needed to allow the global mousetrap functions to work\n\t     * now that mousetrap is a constructor function.\n\t     */\n\t    Mousetrap.init = function () {\n\t        var documentMousetrap = Mousetrap(document);\n\t        for (var method in documentMousetrap) {\n\t            if (method.charAt(0) !== '_') {\n\t                Mousetrap[method] = function (method) {\n\t                    return function () {\n\t                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n\t                    };\n\t                }(method);\n\t            }\n\t        }\n\t    };\n\t\n\t    Mousetrap.init();\n\t\n\t    // expose mousetrap to the global object\n\t    window.Mousetrap = Mousetrap;\n\t\n\t    // expose as a common js module\n\t    if (typeof module !== 'undefined' && module.exports) {\n\t        module.exports = Mousetrap;\n\t    }\n\t\n\t    // expose mousetrap as an AMD module\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t            return Mousetrap;\n\t        }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    }\n\t})(typeof window !== 'undefined' ? window : null, typeof window !== 'undefined' ? document : null);\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * adds a bindGlobal method to Mousetrap that allows you to\n\t * bind specific keyboard shortcuts that will still work\n\t * inside a text input field\n\t *\n\t * usage:\n\t * Mousetrap.bindGlobal('ctrl+s', _saveChanges);\n\t */\n\t/* global Mousetrap:true */\n\t(function (Mousetrap) {\n\t    var _globalCallbacks = {};\n\t    var _originalStopCallback = Mousetrap.prototype.stopCallback;\n\t\n\t    Mousetrap.prototype.stopCallback = function (e, element, combo, sequence) {\n\t        var self = this;\n\t\n\t        if (self.paused) {\n\t            return true;\n\t        }\n\t\n\t        if (_globalCallbacks[combo] || _globalCallbacks[sequence]) {\n\t            return false;\n\t        }\n\t\n\t        return _originalStopCallback.call(self, e, element, combo);\n\t    };\n\t\n\t    Mousetrap.prototype.bindGlobal = function (keys, callback, action) {\n\t        var self = this;\n\t        self.bind(keys, callback, action);\n\t\n\t        if (keys instanceof Array) {\n\t            for (var i = 0; i < keys.length; i++) {\n\t                _globalCallbacks[keys[i]] = true;\n\t            }\n\t            return;\n\t        }\n\t\n\t        _globalCallbacks[keys] = true;\n\t    };\n\t\n\t    Mousetrap.init();\n\t})(Mousetrap);\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.EditorUserInteraction = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _UserInteraction2 = __webpack_require__(38);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar EditorUserInteraction = exports.EditorUserInteraction = function (_UserInteraction) {\n\t\t_inherits(EditorUserInteraction, _UserInteraction);\n\t\n\t\t/**\r\n\t  * Represents EditorUserInteraction\r\n\t  *\r\n\t  * @constructor\r\n\t  * @param {TextareaEditor} editor\r\n\t  */\n\t\tfunction EditorUserInteraction(editor) {\n\t\t\t_classCallCheck(this, EditorUserInteraction);\n\t\n\t\t\tvar _this = _possibleConstructorReturn(this, (EditorUserInteraction.__proto__ || Object.getPrototypeOf(EditorUserInteraction)).call(this, editor.getEditor));\n\t\n\t\t\t_this._editor = editor;\n\t\t\treturn _this;\n\t\t}\n\t\n\t\t/**\r\n\t  *\r\n\t  * @param key\r\n\t  * @param prefix\r\n\t  * @param suffix\r\n\t  */\n\t\n\t\n\t\t_createClass(EditorUserInteraction, [{\n\t\t\tkey: 'insertKeyboardEvent',\n\t\t\tvalue: function insertKeyboardEvent(key) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tvar prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\t\t\t\tvar suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\t\n\t\t\t\tthis.keyboardEvent(key, function (e, combo) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar actualPosition = _this2._editor.getCursorPosition();\n\t\t\t\t\tvar value = _this2._editor.getSelectedContent();\n\t\t\t\t\t_this2._editor.setSelectedContent(prefix + value + suffix);\n\t\n\t\t\t\t\tvar position = value.length == 0 ? actualPosition + prefix.length : actualPosition + (prefix + value + suffix).length;\n\t\t\t\t\t_this2._editor.setCursorPosition(position);\n\t\n\t\t\t\t\t_this2._editor.processContent();\n\t\t\t\t});\n\t\t\t}\n\t\t}]);\n\n\t\treturn EditorUserInteraction;\n\t}(_UserInteraction2.UserInteraction);\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// Calmdown.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a4d122515ba615311cf7","import { CONFIG } from './Config';\r\nimport { ShowdownConverter } from './ShowdownConverter';\r\nimport { TextareaEditor } from './TextareaEditor';\r\nimport { Preview } from './Preview';\r\nimport { HTMLElement } from './HTMLElement';\r\nimport { UserInteraction } from './UserInteraction';\r\nimport { EditorUserInteraction } from './EditorUserInteraction';\r\n\r\nexport default class Calmdown{\r\n\r\n\t/**\r\n\t * Represents Calmdown\r\n\t *\r\n\t * @constructor\r\n\t * @param {Object} settings\r\n\t */\r\n\tconstructor(settings = {}){\r\n\t\tthis.setDefaults(settings);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\t/**\r\n\t * Set the default values for the Calmdown properties\r\n\t *\r\n\t * @param {Object} settings\r\n\t */\r\n\tsetDefaults(settings) {\r\n\t\tthis.settings = Object.assign(CONFIG, settings);\r\n\t\tthis.calmdown = document.querySelector(`.${this.settings.selector}`);\r\n\t\tthis.calmdown.style = `width: ${this.settings.width}; height: ${this.settings.height};`;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize Calmdown\r\n\t */\r\n\tinit(){\r\n\t\tthis.initCodeHightlight();\r\n\t\tthis.initConverter();\r\n\t\tthis.initBody();\r\n\t\tthis.initResize();\r\n\t\tthis.initEditor();\r\n\t\tthis.initPreview();\r\n\t\tthis.initHiddenHtmlInput();\r\n\t\tthis.initHiddenMarkdownInput();\r\n\t\tthis.initUserInteraction();\r\n\t\tthis.initEventListeners();\r\n\t\tthis.triggerEvents();\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize code higlighting\r\n\t */\r\n\tinitCodeHightlight(){\r\n\t\tthis.calmdown.className += ` ${this.settings.codeHighlightStyle}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize toolbar\r\n\t */\r\n\tinitToolbar(){\r\n\t\tthis.toolbar = new HTMLElement('div', this.settings.bodySelector, this.calmdown).getElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize body\r\n\t */\r\n\tinitBody(){\r\n\t\tthis.calmdownBody = new HTMLElement('div', this.settings.bodySelector, this.calmdown).getElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize resizer div\r\n\t */\r\n\tinitResize(){\r\n\t\tthis.resize = new HTMLElement('div', 'cd-resize', this.calmdown).getElement;\r\n\t\tnew HTMLElement('span','cd-bars',this.resize);\r\n\r\n\t\tlet isResizing = false;\r\n\t\tthis.resize.addEventListener('mousedown',(e)=>{\r\n\t\t\te.preventDefault();\r\n\t\t\tisResizing = true;\r\n\t\t});\r\n\t\tdocument.addEventListener('mousemove',(e)=>{\r\n\t\t\tif(isResizing) {\r\n\t\t\t\tthis.calmdown.style.height = (e.clientY - this.calmdown.offsetTop + (this.resize.offsetHeight/2))+'px';\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.resize.addEventListener('mouseup',(e)=>{\r\n\t\t\te.preventDefault();\r\n\t\t\tisResizing = false;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize hidden html input\r\n\t *\r\n\t * This textarea value can be sent through some http methods\r\n\t * to the server for further processing.\r\n\t */\r\n\tinitHiddenHtmlInput(){\r\n\t\tif(this.settings.htmlInputSelector != null ) {\r\n\t\t\tthis.htmlInputElement = new HTMLElement('textarea',\r\n\t\t\t\tthis.settings.htmlInputSelector,\r\n\t\t\t\tthis.calmdown, {\r\n\t\t\t\t\tname: this.settings.htmlInputSelector,\r\n\t\t\t\t\tstyle: 'display: none;'\r\n\t\t\t\t}).getElement;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize hidden markdown input\r\n\t *\r\n\t * This textarea value can be sent through some http methods\r\n\t * to the server for further processing.\r\n\t */\r\n\tinitHiddenMarkdownInput(){\r\n\t\tif(this.settings.markdownInputSelector != null ) {\r\n\t\t\tthis.markdownInputElement = new HTMLElement('textarea',\r\n\t\t\t\tthis.settings.markdownInputSelector,\r\n\t\t\t\tthis.calmdown, {\r\n\t\t\t\t\tname: this.settings.markdownInputSelector,\r\n\t\t\t\t\tstyle: 'display: none;'\r\n\t\t\t\t}).getElement;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize markdown converter\r\n\t */\r\n\tinitConverter(){\r\n\t\tthis.converter = new ShowdownConverter();\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize editor area\r\n\t */\r\n\tinitEditor(){\r\n\t\tthis.editor = new TextareaEditor(this.settings.editorSelector,this.calmdownBody);\r\n\t\tthis.editor.getEditor.value = this.settings.defaultContent;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t */\r\n\tinitUserInteraction(){\r\n\t\tthis.globalUserInteraction = new UserInteraction();\r\n\t\tthis.editorUserInteraction = new EditorUserInteraction(this.editor);\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize preview area\r\n\t */\r\n\tinitPreview(){\r\n\t\tthis.preview = new Preview(this.settings.previewSelector,this.calmdownBody);\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize event listeners\r\n\t */\r\n\tinitEventListeners(){\r\n\t\t// Convert markdown to html\r\n\t\tthis.editor.convertMarkdownToHtmlEventListener([this.preview.getPreview,this.htmlInputElement],this.converter);\r\n\r\n\t\t// Copy markdown to hidden input\r\n\t\t// This is useful when you do not want to send data through AJAX\r\n\t\tthis.editor.copyMarkdownContentToHiddenInputEventListener(this.markdownInputElement);\r\n\r\n\t\t// Initialize insert keyboard events\r\n\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+b','**','**');\r\n\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+i','_','_');\r\n\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+u','~~','~~');\r\n\t\tthis.editorUserInteraction.insertKeyboardEvent('tab','\\t');\r\n\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+shift+i','![',']()');\r\n\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+l','[',']()');\r\n\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+k','\\`\\`\\`','\\n\\`\\`\\`');\r\n\t\tthis.editorUserInteraction.insertKeyboardEvent('ctrl+shift+k','\\`','\\`');\r\n\r\n\t\t// Initialize view change events\r\n\t\tthis.viewChangeEvents();\r\n\t}\r\n\r\n\t/**\r\n\t * Set the view to show editor or preview or both\r\n\t */\r\n\tviewChangeEvents(){\r\n\t\t// Show editor and preview\r\n\t\tthis.globalUserInteraction.keyboardEventGlobal('alt+1',(e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.editor.getEditor.removeAttribute('style');\r\n\t\t\tthis.preview.getPreview.removeAttribute('style');\r\n\t\t\tthis.editor.getEditor.focus();\r\n\t\t});\r\n\r\n\t\t// Show only editor\r\n\t\tthis.globalUserInteraction.keyboardEventGlobal('alt+2',(e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.editor.getEditor.removeAttribute('style');\r\n\t\t\tthis.preview.getPreview.removeAttribute('style');\r\n\t\t\tthis.editor.getEditor.style.maxWidth='100%';\r\n\t\t\tthis.editor.getEditor.style.border='0';\r\n\t\t\tthis.editor.getEditor.focus();\r\n\t\t\tthis.preview.getPreview.style.display='none';\r\n\t\t});\r\n\r\n\t\t// Show only preview\r\n\t\tthis.globalUserInteraction.keyboardEventGlobal('alt+3',(e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tthis.editor.getEditor.removeAttribute('style');\r\n\t\t\tthis.preview.getPreview.removeAttribute('style');\r\n\t\t\tthis.editor.getEditor.style.display='none';\r\n\t\t\tthis.preview.getPreview.style.maxWidth='100%';\r\n\t\t});\r\n\r\n\t\tlet fullsize = false;\r\n\t\t// Set calmdown full screen\r\n\t\tthis.globalUserInteraction.keyboardEventGlobal('alt+enter',(e)=>{\r\n\t\t\tif(!fullsize){\r\n\t\t\t\tthis.calmdown.style = 'position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: 9999';\r\n\t\t\t\tthis.resize.style.display = 'none';\r\n\t\t\t} else {\r\n\t\t\t\tthis.calmdown.style = `width: ${this.settings.width}; height: ${this.settings.height};`;\r\n\t\t\t\tthis.resize.removeAttribute('style');\r\n\t\t\t}\r\n\t\t\tfullsize = !fullsize;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger the processing event\r\n\t */\r\n\ttriggerEvents(){\r\n\t\tthis.editor.processContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Get the editor content\r\n\t *\r\n\t * @returns {String} -  the string value of the editor content\r\n\t */\r\n\tgetContent(){\r\n\t\treturn this.editor.getContent();\r\n\t}\r\n\r\n\t/**\r\n\t *  Set the editor content\r\n\t *\r\n\t * @param {String} content - the new value of the editor\r\n\t */\r\n\tsetContent(content){\r\n\t\tthis.editor.setContent(content);\r\n\t\tthis.editor.processContent();\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Calmdown.js","export const CONFIG = {\r\n\r\n\t/**\r\n\t * @type {String}\r\n\t */\r\n\t'width' : '100%',\r\n\r\n\t/**\r\n\t * @type {String}\r\n\t */\r\n\t'height' : '500px',\r\n\r\n\t/**\r\n\t * @type {String}\r\n\t */\r\n\t'selector' : 'calmdown',\r\n\r\n\t/**\r\n\t * @type {String}\r\n\t */\r\n\t'bodySelector': 'cd-body',\r\n\r\n\t/**\r\n\t * @type {String}\r\n\t */\r\n\t'editorSelector' : 'cd-editor',\r\n\r\n\t/**\r\n\t * @type {String|null}\r\n\t */\r\n\t'previewSelector' : 'cd-preview',\r\n\r\n\t/**\r\n\t * @type {String|null}\r\n\t */\r\n\t'markdownInputSelector' : 'cd-markdown-input',\r\n\r\n\t/**\r\n\t * @type {String|null}\r\n\t */\r\n\t'htmlInputSelector' : 'cd-html-input',\r\n\r\n\t/**\r\n\t * @type {String}\r\n\t */\r\n\t'codeHighlightStyle' : 'cd-highlight-default',\r\n\r\n\t/**\r\n\t * @type {String}\r\n\t */\r\n\t'editorType': 'textarea',\r\n\r\n\t/**\r\n\t * @type {String}\r\n\t */\r\n\t'defaultContent': ''\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/js/Config.js","import * as showdown from 'showdown';\r\nimport { SyntaxHighlighter } from './SyntaxHighlighter';\r\n\r\nexport class ShowdownConverter{\r\n\r\n\t/**\r\n\t * Represents ShowdownConverter\r\n\t *\r\n\t * @param {String} flavor - flavor of the converter\r\n \t */\r\n\tconstructor(flavor = 'github'){\r\n\t\tthis._converter = new showdown.Converter();\r\n\t\tthis.setFlavor(flavor);\r\n\t\tthis._codeHighlighter = new SyntaxHighlighter().getHighlighter;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the showdown converter\r\n\t *\r\n\t * @returns {showdown.Converter} - showdown markdown converter\r\n\t */\r\n\tget getConverter(){\r\n\t\treturn this._converter;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the flavor of the showdown converter\r\n\t *\r\n\t * @param {String} flavor - flavor of the converter\r\n\t */\r\n\tsetFlavor(flavor){\r\n\t\tthis._converter.setFlavor(flavor);\r\n\t}\r\n\r\n\t/**\r\n\t * Generate html from the markdown\r\n\t *\r\n\t * @param {String} markdown - markdown from the editor\r\n\t * @returns {String} - the generated html\r\n\t */\r\n\tmakeHtml(markdown){\r\n\t\tlet html = this._converter.makeHtml(markdown);\r\n\t\treturn this._codeHighlighter == null ? html : this.addCodeHighlighting(html);\r\n\t}\r\n\r\n\t/**\r\n\t * Get a syntax highlighted version of the given html code tags\r\n\t *\r\n\t * @param {String} html - the generated html\r\n\t * @returns {String} - the generated html with syntax highlight\r\n\t */\r\n\taddCodeHighlighting(html){\r\n\t\tlet div = document.createElement('div');\r\n\t\tdiv.innerHTML = html;\r\n\t\tlet codeList = div.getElementsByTagName('code');\r\n\t\tfor (let i = 0; i < codeList.length; i++) {\r\n\t\t\tthis._codeHighlighter.highlightElement(codeList[i]);\r\n\t\t}\r\n\t\treturn div.innerHTML;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/ShowdownConverter.js",";/*! showdown 09-01-2017 */\r\n(function(){\r\n/**\n * Created by Tivie on 13-07-2015.\n */\n\nfunction getDefaultOpts(simple) {\n  'use strict';\n\n  var defaultOptions = {\n    omitExtraWLInCodeBlocks: {\n      defaultValue: false,\n      describe: 'Omit the default extra whiteline added to code blocks',\n      type: 'boolean'\n    },\n    noHeaderId: {\n      defaultValue: false,\n      describe: 'Turn on/off generated header id',\n      type: 'boolean'\n    },\n    prefixHeaderId: {\n      defaultValue: false,\n      describe: 'Specify a prefix to generated header ids',\n      type: 'string'\n    },\n    ghCompatibleHeaderId: {\n      defaultValue: false,\n      describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\n      type: 'boolean'\n    },\n    headerLevelStart: {\n      defaultValue: false,\n      describe: 'The header blocks level start',\n      type: 'integer'\n    },\n    parseImgDimensions: {\n      defaultValue: false,\n      describe: 'Turn on/off image dimension parsing',\n      type: 'boolean'\n    },\n    simplifiedAutoLink: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM autolink style',\n      type: 'boolean'\n    },\n    excludeTrailingPunctuationFromURLs: {\n      defaultValue: false,\n      describe: 'Excludes trailing punctuation from links generated with autoLinking',\n      type: 'boolean'\n    },\n    literalMidWordUnderscores: {\n      defaultValue: false,\n      describe: 'Parse midword underscores as literal underscores',\n      type: 'boolean'\n    },\n    strikethrough: {\n      defaultValue: false,\n      describe: 'Turn on/off strikethrough support',\n      type: 'boolean'\n    },\n    tables: {\n      defaultValue: false,\n      describe: 'Turn on/off tables support',\n      type: 'boolean'\n    },\n    tablesHeaderId: {\n      defaultValue: false,\n      describe: 'Add an id to table headers',\n      type: 'boolean'\n    },\n    ghCodeBlocks: {\n      defaultValue: true,\n      describe: 'Turn on/off GFM fenced code blocks support',\n      type: 'boolean'\n    },\n    tasklists: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM tasklist support',\n      type: 'boolean'\n    },\n    smoothLivePreview: {\n      defaultValue: false,\n      describe: 'Prevents weird effects in live previews due to incomplete input',\n      type: 'boolean'\n    },\n    smartIndentationFix: {\n      defaultValue: false,\n      description: 'Tries to smartly fix indentation in es6 strings',\n      type: 'boolean'\n    },\n    disableForced4SpacesIndentedSublists: {\n      defaultValue: false,\n      description: 'Disables the requirement of indenting nested sublists by 4 spaces',\n      type: 'boolean'\n    },\n    simpleLineBreaks: {\n      defaultValue: false,\n      description: 'Parses simple line breaks as <br> (GFM Style)',\n      type: 'boolean'\n    },\n    requireSpaceBeforeHeadingText: {\n      defaultValue: false,\n      description: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\n      type: 'boolean'\n    },\n    ghMentions: {\n      defaultValue: false,\n      description: 'Enables github @mentions',\n      type: 'boolean'\n    }\n  };\n  if (simple === false) {\n    return JSON.parse(JSON.stringify(defaultOptions));\n  }\n  var ret = {};\n  for (var opt in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(opt)) {\n      ret[opt] = defaultOptions[opt].defaultValue;\n    }\n  }\n  return ret;\n}\n\nfunction allOptionsOn() {\n  'use strict';\n  var options = getDefaultOpts(true),\n      ret = {};\n  for (var opt in options) {\n    if (options.hasOwnProperty(opt)) {\n      ret[opt] = true;\n    }\n  }\n  return ret;\n}\n\r\n/**\n * Created by Tivie on 06-01-2015.\n */\n\n// Private properties\nvar showdown = {},\n    parsers = {},\n    extensions = {},\n    globalOptions = getDefaultOpts(true),\n    setFlavor = 'vanilla',\n    flavor = {\n      github: {\n        omitExtraWLInCodeBlocks:              true,\n        prefixHeaderId:                       'user-content-',\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        disableForced4SpacesIndentedSublists: true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghCompatibleHeaderId:                 true,\n        ghMentions:                           true\n      },\n      vanilla: getDefaultOpts(true),\n      allOn: allOptionsOn()\n    };\n\n/**\n * helper namespace\n * @type {{}}\n */\nshowdown.helper = {};\n\n/**\n * TODO LEGACY SUPPORT CODE\n * @type {{}}\n */\nshowdown.extensions = {};\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {showdown}\n */\nshowdown.setOption = function (key, value) {\n  'use strict';\n  globalOptions[key] = value;\n  return this;\n};\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nshowdown.getOption = function (key) {\n  'use strict';\n  return globalOptions[key];\n};\n\n/**\n * Get the global options\n * @static\n * @returns {{}}\n */\nshowdown.getOptions = function () {\n  'use strict';\n  return globalOptions;\n};\n\n/**\n * Reset global options to the default values\n * @static\n */\nshowdown.resetOptions = function () {\n  'use strict';\n  globalOptions = getDefaultOpts(true);\n};\n\n/**\n * Set the flavor showdown should use as default\n * @param {string} name\n */\nshowdown.setFlavor = function (name) {\n  'use strict';\n  if (!flavor.hasOwnProperty(name)) {\n    throw Error(name + ' flavor was not found');\n  }\n  var preset = flavor[name];\n  setFlavor = name;\n  for (var option in preset) {\n    if (preset.hasOwnProperty(option)) {\n      globalOptions[option] = preset[option];\n    }\n  }\n};\n\n/**\n * Get the currently set flavor\n * @returns {string}\n */\nshowdown.getFlavor = function () {\n  'use strict';\n  return setFlavor;\n};\n\n/**\n * Get the options of a specified flavor. Returns undefined if the flavor was not found\n * @param {string} name Name of the flavor\n * @returns {{}|undefined}\n */\nshowdown.getFlavorOptions = function (name) {\n  'use strict';\n  if (flavor.hasOwnProperty(name)) {\n    return flavor[name];\n  }\n};\n\n/**\n * Get the default options\n * @static\n * @param {boolean} [simple=true]\n * @returns {{}}\n */\nshowdown.getDefaultOptions = function (simple) {\n  'use strict';\n  return getDefaultOpts(simple);\n};\n\n/**\n * Get or set a subParser\n *\n * subParser(name)       - Get a registered subParser\n * subParser(name, func) - Register a subParser\n * @static\n * @param {string} name\n * @param {function} [func]\n * @returns {*}\n */\nshowdown.subParser = function (name, func) {\n  'use strict';\n  if (showdown.helper.isString(name)) {\n    if (typeof func !== 'undefined') {\n      parsers[name] = func;\n    } else {\n      if (parsers.hasOwnProperty(name)) {\n        return parsers[name];\n      } else {\n        throw Error('SubParser named ' + name + ' not registered!');\n      }\n    }\n  }\n};\n\n/**\n * Gets or registers an extension\n * @static\n * @param {string} name\n * @param {object|function=} ext\n * @returns {*}\n */\nshowdown.extension = function (name, ext) {\n  'use strict';\n\n  if (!showdown.helper.isString(name)) {\n    throw Error('Extension \\'name\\' must be a string');\n  }\n\n  name = showdown.helper.stdExtName(name);\n\n  // Getter\n  if (showdown.helper.isUndefined(ext)) {\n    if (!extensions.hasOwnProperty(name)) {\n      throw Error('Extension named ' + name + ' is not registered!');\n    }\n    return extensions[name];\n\n    // Setter\n  } else {\n    // Expand extension if it's wrapped in a function\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    // Ensure extension is an array\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExtension = validate(ext, name);\n\n    if (validExtension.valid) {\n      extensions[name] = ext;\n    } else {\n      throw Error(validExtension.error);\n    }\n  }\n};\n\n/**\n * Gets all extensions registered\n * @returns {{}}\n */\nshowdown.getAllExtensions = function () {\n  'use strict';\n  return extensions;\n};\n\n/**\n * Remove an extension\n * @param {string} name\n */\nshowdown.removeExtension = function (name) {\n  'use strict';\n  delete extensions[name];\n};\n\n/**\n * Removes all extensions\n */\nshowdown.resetExtensions = function () {\n  'use strict';\n  extensions = {};\n};\n\n/**\n * Validate extension\n * @param {array} extension\n * @param {string} name\n * @returns {{valid: boolean, error: string}}\n */\nfunction validate(extension, name) {\n  'use strict';\n\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n    ret = {\n      valid: true,\n      error: ''\n    };\n\n  if (!showdown.helper.isArray(extension)) {\n    extension = [extension];\n  }\n\n  for (var i = 0; i < extension.length; ++i) {\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n        ext = extension[i];\n    if (typeof ext !== 'object') {\n      ret.valid = false;\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\n      return ret;\n    }\n\n    if (!showdown.helper.isString(ext.type)) {\n      ret.valid = false;\n      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given';\n      return ret;\n    }\n\n    var type = ext.type = ext.type.toLowerCase();\n\n    // normalize extension type\n    if (type === 'language') {\n      type = ext.type = 'lang';\n    }\n\n    if (type === 'html') {\n      type = ext.type = 'output';\n    }\n\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n      ret.valid = false;\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n      return ret;\n    }\n\n    if (type === 'listener') {\n      if (showdown.helper.isUndefined(ext.listeners)) {\n        ret.valid = false;\n        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n        return ret;\n      }\n    } else {\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n        ret.valid = false;\n        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n        return ret;\n      }\n    }\n\n    if (ext.listeners) {\n      if (typeof ext.listeners !== 'object') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given';\n        return ret;\n      }\n      for (var ln in ext.listeners) {\n        if (ext.listeners.hasOwnProperty(ln)) {\n          if (typeof ext.listeners[ln] !== 'function') {\n            ret.valid = false;\n            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\n            return ret;\n          }\n        }\n      }\n    }\n\n    if (ext.filter) {\n      if (typeof ext.filter !== 'function') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given';\n        return ret;\n      }\n    } else if (ext.regex) {\n      if (showdown.helper.isString(ext.regex)) {\n        ext.regex = new RegExp(ext.regex, 'g');\n      }\n      if (!ext.regex instanceof RegExp) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\n        return ret;\n      }\n      if (showdown.helper.isUndefined(ext.replace)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n        return ret;\n      }\n    }\n  }\n  return ret;\n}\n\n/**\n * Validate extension\n * @param {object} ext\n * @returns {boolean}\n */\nshowdown.validateExtension = function (ext) {\n  'use strict';\n\n  var validateExtension = validate(ext, null);\n  if (!validateExtension.valid) {\n    console.warn(validateExtension.error);\n    return false;\n  }\n  return true;\n};\n\r\n/**\n * showdownjs helper functions\n */\n\nif (!showdown.hasOwnProperty('helper')) {\n  showdown.helper = {};\n}\n\n/**\n * Check if var is string\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isString = function isString(a) {\n  'use strict';\n  return (typeof a === 'string' || a instanceof String);\n};\n\n/**\n * Check if var is a function\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isFunction = function isFunction(a) {\n  'use strict';\n  var getType = {};\n  return a && getType.toString.call(a) === '[object Function]';\n};\n\n/**\n * ForEach helper function\n * @static\n * @param {*} obj\n * @param {function} callback\n */\nshowdown.helper.forEach = function forEach(obj, callback) {\n  'use strict';\n  if (typeof obj.forEach === 'function') {\n    obj.forEach(callback);\n  } else {\n    for (var i = 0; i < obj.length; i++) {\n      callback(obj[i], i, obj);\n    }\n  }\n};\n\n/**\n * isArray helper function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isArray = function isArray(a) {\n  'use strict';\n  return a.constructor === Array;\n};\n\n/**\n * Check if value is undefined\n * @static\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n */\nshowdown.helper.isUndefined = function isUndefined(value) {\n  'use strict';\n  return typeof value === 'undefined';\n};\n\n/**\n * Standardidize extension name\n * @static\n * @param {string} s extension name\n * @returns {string}\n */\nshowdown.helper.stdExtName = function (s) {\n  'use strict';\n  return s.replace(/[_-]||\\s/g, '').toLowerCase();\n};\n\nfunction escapeCharactersCallback(wholeMatch, m1) {\n  'use strict';\n  var charCodeToEscape = m1.charCodeAt(0);\n  return '~E' + charCodeToEscape + 'E';\n}\n\n/**\n * Callback used to escape characters when passing through String.replace\n * @static\n * @param {string} wholeMatch\n * @param {string} m1\n * @returns {string}\n */\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\n/**\n * Escape characters in a string\n * @static\n * @param {string} text\n * @param {string} charsToEscape\n * @param {boolean} afterBackslash\n * @returns {XML|string|void|*}\n */\nshowdown.helper.escapeCharacters = function escapeCharacters(text, charsToEscape, afterBackslash) {\n  'use strict';\n  // First we have to escape the escape characters so that\n  // we can build a character class out of them\n  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\n  if (afterBackslash) {\n    regexString = '\\\\\\\\' + regexString;\n  }\n\n  var regex = new RegExp(regexString, 'g');\n  text = text.replace(regex, escapeCharactersCallback);\n\n  return text;\n};\n\nvar rgxFindMatchPos = function (str, left, right, flags) {\n  'use strict';\n  var f = flags || '',\n    g = f.indexOf('g') > -1,\n    x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n    l = new RegExp(left, f.replace(/g/g, '')),\n    pos = [],\n    t, s, m, start, end;\n\n  do {\n    t = 0;\n    while ((m = x.exec(str))) {\n      if (l.test(m[0])) {\n        if (!(t++)) {\n          s = x.lastIndex;\n          start = s - m[0].length;\n        }\n      } else if (t) {\n        if (!--t) {\n          end = m.index + m[0].length;\n          var obj = {\n            left: {start: start, end: s},\n            match: {start: s, end: m.index},\n            right: {start: m.index, end: end},\n            wholeMatch: {start: start, end: end}\n          };\n          pos.push(obj);\n          if (!g) {\n            return pos;\n          }\n        }\n      }\n    }\n  } while (t && (x.lastIndex = s));\n\n  return pos;\n};\n\n/**\n * matchRecursiveRegExp\n *\n * (c) 2007 Steven Levithan <stevenlevithan.com>\n * MIT License\n *\n * Accepts a string to search, a left and right format delimiter\n * as regex patterns, and optional regex flags. Returns an array\n * of matches, allowing nested instances of left/right delimiters.\n * Use the \"g\" flag to return all matches, otherwise only the\n * first is returned. Be careful to ensure that the left and\n * right format delimiters produce mutually exclusive matches.\n * Backreferences are not supported within the right delimiter\n * due to how it is internally combined with the left delimiter.\n * When matching strings whose format delimiters are unbalanced\n * to the left or right, the output is intentionally as a\n * conventional regex library with recursion support would\n * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n * \"<\" and \">\" as the delimiters (both strings contain a single,\n * balanced instance of \"<x>\").\n *\n * examples:\n * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n * returns: []\n * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n * returns: [\"t<<e>><s>\", \"\"]\n * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n * returns: [\"test\"]\n */\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n  'use strict';\n\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\n    results = [];\n\n  for (var i = 0; i < matchPos.length; ++i) {\n    results.push([\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n    ]);\n  }\n  return results;\n};\n\n/**\n *\n * @param {string} str\n * @param {string|function} replacement\n * @param {string} left\n * @param {string} right\n * @param {string} flags\n * @returns {string}\n */\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n  'use strict';\n\n  if (!showdown.helper.isFunction(replacement)) {\n    var repStr = replacement;\n    replacement = function () {\n      return repStr;\n    };\n  }\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n      finalStr = str,\n      lng = matchPos.length;\n\n  if (lng > 0) {\n    var bits = [];\n    if (matchPos[0].wholeMatch.start !== 0) {\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n    }\n    for (var i = 0; i < lng; ++i) {\n      bits.push(\n        replacement(\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n        )\n      );\n      if (i < lng - 1) {\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n      }\n    }\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n    }\n    finalStr = bits.join('');\n  }\n  return finalStr;\n};\n\n/**\n * POLYFILLS\n */\n// use this instead of builtin is undefined for IE8 compatibility\nif (typeof(console) === 'undefined') {\n  console = {\n    warn: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    log: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    error: function (msg) {\n      'use strict';\n      throw msg;\n    }\n  };\n}\n\r\n/**\n * Created by Estevao on 31-05-2015.\n */\n\n/**\n * Showdown Converter class\n * @class\n * @param {object} [converterOptions]\n * @returns {Converter}\n */\nshowdown.Converter = function (converterOptions) {\n  'use strict';\n\n  var\n      /**\n       * Options used by this converter\n       * @private\n       * @type {{}}\n       */\n      options = {},\n\n      /**\n       * Language extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      langExtensions = [],\n\n      /**\n       * Output modifiers extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      outputModifiers = [],\n\n      /**\n       * Event listeners\n       * @private\n       * @type {{}}\n       */\n      listeners = {},\n\n      /**\n       * The flavor set in this converter\n       */\n      setConvFlavor = setFlavor;\n\n  _constructor();\n\n  /**\n   * Converter constructor\n   * @private\n   */\n  function _constructor() {\n    converterOptions = converterOptions || {};\n\n    for (var gOpt in globalOptions) {\n      if (globalOptions.hasOwnProperty(gOpt)) {\n        options[gOpt] = globalOptions[gOpt];\n      }\n    }\n\n    // Merge options\n    if (typeof converterOptions === 'object') {\n      for (var opt in converterOptions) {\n        if (converterOptions.hasOwnProperty(opt)) {\n          options[opt] = converterOptions[opt];\n        }\n      }\n    } else {\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n      ' was passed instead.');\n    }\n\n    if (options.extensions) {\n      showdown.helper.forEach(options.extensions, _parseExtension);\n    }\n  }\n\n  /**\n   * Parse extension\n   * @param {*} ext\n   * @param {string} [name='']\n   * @private\n   */\n  function _parseExtension(ext, name) {\n\n    name = name || null;\n    // If it's a string, the extension was previously loaded\n    if (showdown.helper.isString(ext)) {\n      ext = showdown.helper.stdExtName(ext);\n      name = ext;\n\n      // LEGACY_SUPPORT CODE\n      if (showdown.extensions[ext]) {\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n          'Please inform the developer that the extension should be updated!');\n        legacyExtensionLoading(showdown.extensions[ext], ext);\n        return;\n      // END LEGACY SUPPORT CODE\n\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n        ext = extensions[ext];\n\n      } else {\n        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n      }\n    }\n\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExt = validate(ext, name);\n    if (!validExt.valid) {\n      throw Error(validExt.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n      }\n      if (ext[i].hasOwnProperty('listeners')) {\n        for (var ln in ext[i].listeners) {\n          if (ext[i].listeners.hasOwnProperty(ln)) {\n            listen(ln, ext[i].listeners[ln]);\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * LEGACY_SUPPORT\n   * @param {*} ext\n   * @param {string} name\n   */\n  function legacyExtensionLoading(ext, name) {\n    if (typeof ext === 'function') {\n      ext = ext(new showdown.Converter());\n    }\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n    var valid = validate(ext, name);\n\n    if (!valid.valid) {\n      throw Error(valid.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n        default:// should never reach here\n          throw Error('Extension loader error: Type unrecognized!!!');\n      }\n    }\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   */\n  function listen(name, callback) {\n    if (!showdown.helper.isString(name)) {\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\n    }\n\n    if (typeof callback !== 'function') {\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\n    }\n\n    if (!listeners.hasOwnProperty(name)) {\n      listeners[name] = [];\n    }\n    listeners[name].push(callback);\n  }\n\n  function rTrimInputText(text) {\n    var rsp = text.match(/^\\s*/)[0].length,\n        rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n    return text.replace(rgx, '');\n  }\n\n  /**\n   * Dispatch an event\n   * @private\n   * @param {string} evtName Event name\n   * @param {string} text Text\n   * @param {{}} options Converter Options\n   * @param {{}} globals\n   * @returns {string}\n   */\n  this._dispatch = function dispatch (evtName, text, options, globals) {\n    if (listeners.hasOwnProperty(evtName)) {\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n        if (nText && typeof nText !== 'undefined') {\n          text = nText;\n        }\n      }\n    }\n    return text;\n  };\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   * @returns {showdown.Converter}\n   */\n  this.listen = function (name, callback) {\n    listen(name, callback);\n    return this;\n  };\n\n  /**\n   * Converts a markdown string into HTML\n   * @param {string} text\n   * @returns {*}\n   */\n  this.makeHtml = function (text) {\n    //check if text is not falsy\n    if (!text) {\n      return text;\n    }\n\n    var globals = {\n      gHtmlBlocks:     [],\n      gHtmlMdBlocks:   [],\n      gHtmlSpans:      [],\n      gUrls:           {},\n      gTitles:         {},\n      gDimensions:     {},\n      gListLevel:      0,\n      hashLinkCounts:  {},\n      langExtensions:  langExtensions,\n      outputModifiers: outputModifiers,\n      converter:       this,\n      ghCodeBlocks:    []\n    };\n\n    // attacklab: Replace ~ with ~T\n    // This lets us use tilde as an escape char to avoid md5 hashes\n    // The choice of character is arbitrary; anything that isn't\n    // magic in Markdown will work.\n    text = text.replace(/~/g, '~T');\n\n    // attacklab: Replace $ with ~D\n    // RegExp interprets $ as a special character\n    // when it's in a replacement string\n    text = text.replace(/\\$/g, '~D');\n\n    // Standardize line endings\n    text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n    text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\n    // Stardardize line spaces (nbsp causes trouble in older browsers and some regex flavors)\n    text = text.replace(/\\u00A0/g, ' ');\n\n    if (options.smartIndentationFix) {\n      text = rTrimInputText(text);\n    }\n\n    // Make sure text begins and ends with a couple of newlines:\n    text = '\\n\\n' + text + '\\n\\n';\n\n    // detab\n    text = showdown.subParser('detab')(text, options, globals);\n\n    // stripBlankLines\n    text = showdown.subParser('stripBlankLines')(text, options, globals);\n\n    //run languageExtensions\n    showdown.helper.forEach(langExtensions, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // run the sub parsers\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n    text = showdown.subParser('blockGamut')(text, options, globals);\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\n    // attacklab: Restore dollar signs\n    text = text.replace(/~D/g, '$$');\n\n    // attacklab: Restore tildes\n    text = text.replace(/~T/g, '~');\n\n    // Run output modifiers\n    showdown.helper.forEach(outputModifiers, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    return text;\n  };\n\n  /**\n   * Set an option of this Converter instance\n   * @param {string} key\n   * @param {*} value\n   */\n  this.setOption = function (key, value) {\n    options[key] = value;\n  };\n\n  /**\n   * Get the option of this Converter instance\n   * @param {string} key\n   * @returns {*}\n   */\n  this.getOption = function (key) {\n    return options[key];\n  };\n\n  /**\n   * Get the options of this Converter instance\n   * @returns {{}}\n   */\n  this.getOptions = function () {\n    return options;\n  };\n\n  /**\n   * Add extension to THIS converter\n   * @param {{}} extension\n   * @param {string} [name=null]\n   */\n  this.addExtension = function (extension, name) {\n    name = name || null;\n    _parseExtension(extension, name);\n  };\n\n  /**\n   * Use a global registered extension with THIS converter\n   * @param {string} extensionName Name of the previously registered extension\n   */\n  this.useExtension = function (extensionName) {\n    _parseExtension(extensionName);\n  };\n\n  /**\n   * Set the flavor THIS converter should use\n   * @param {string} name\n   */\n  this.setFlavor = function (name) {\n    if (!flavor.hasOwnProperty(name)) {\n      throw Error(name + ' flavor was not found');\n    }\n    var preset = flavor[name];\n    setConvFlavor = name;\n    for (var option in preset) {\n      if (preset.hasOwnProperty(option)) {\n        options[option] = preset[option];\n      }\n    }\n  };\n\n  /**\n   * Get the currently set flavor of this converter\n   * @returns {string}\n   */\n  this.getFlavor = function () {\n    return setConvFlavor;\n  };\n\n  /**\n   * Remove an extension from THIS converter.\n   * Note: This is a costly operation. It's better to initialize a new converter\n   * and specify the extensions you wish to use\n   * @param {Array} extension\n   */\n  this.removeExtension = function (extension) {\n    if (!showdown.helper.isArray(extension)) {\n      extension = [extension];\n    }\n    for (var a = 0; a < extension.length; ++a) {\n      var ext = extension[a];\n      for (var i = 0; i < langExtensions.length; ++i) {\n        if (langExtensions[i] === ext) {\n          langExtensions[i].splice(i, 1);\n        }\n      }\n      for (var ii = 0; ii < outputModifiers.length; ++i) {\n        if (outputModifiers[ii] === ext) {\n          outputModifiers[ii].splice(i, 1);\n        }\n      }\n    }\n  };\n\n  /**\n   * Get all extension of THIS converter\n   * @returns {{language: Array, output: Array}}\n   */\n  this.getAllExtensions = function () {\n    return {\n      language: langExtensions,\n      output: outputModifiers\n    };\n  };\n};\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('anchors', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\n\n  var writeAnchorTag = function (wholeMatch, m1, m2, m3, m4, m5, m6, m7) {\n    if (showdown.helper.isUndefined(m7)) {\n      m7 = '';\n    }\n    wholeMatch = m1;\n    var linkText = m2,\n        linkId = m3.toLowerCase(),\n        url = m4,\n        title = m7;\n\n    if (!url) {\n      if (!linkId) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n        url = globals.gUrls[linkId];\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n          title = globals.gTitles[linkId];\n        }\n      } else {\n        if (wholeMatch.search(/\\(\\s*\\)$/m) > -1) {\n          // Special case for explicit empty url\n          url = '';\n        } else {\n          return wholeMatch;\n        }\n      }\n    }\n\n    url = showdown.helper.escapeCharacters(url, '*_', false);\n    var result = '<a href=\"' + url + '\"';\n\n    if (title !== '' && title !== null) {\n      title = title.replace(/\"/g, '&quot;');\n      title = showdown.helper.escapeCharacters(title, '*_', false);\n      result += ' title=\"' + title + '\"';\n    }\n\n    result += '>' + linkText + '</a>';\n\n    return result;\n  };\n\n  // First, handle reference-style links: [link text] [id]\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)][ ]?(?:\\n[ ]*)?\\[(.*?)])()()()()/g, writeAnchorTag);\n\n  // Next, inline-style links: [link text](url \"optional title\")\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g,\n                      writeAnchorTag);\n\n  // handle reference-style shortcuts: [link text]\n  // These must come last in case you've also got [link test][1]\n  // or [link test](/foo)\n  text = text.replace(/(\\[([^\\[\\]]+)])()()()()()/g, writeAnchorTag);\n\n  // Lastly handle GithubMentions if option is enabled\n  if (options.ghMentions) {\n    text = text.replace(/(^|\\s)(\\\\)?(@([a-z\\d\\-]+))(?=[.!?;,[\\]()]|\\s|$)/gmi, function (wm, st, escape, mentions, username) {\n      if (escape === '\\\\') {\n        return st + mentions;\n      }\n      return st + '<a href=\"https://www.github.com/' + username + '\">' + mentions + '</a>';\n    });\n  }\n\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('autoLinks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\n  var simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+)()(?=\\s|$)(?![\"<>])/gi,\n      simpleURLRegex2 = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?()]?)(?=\\s|$)(?![\"<>])/gi,\n      delimUrlRegex   = /<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)>/gi,\n      simpleMailRegex = /(?:^|\\s)([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?:$|\\s)/gi,\n      delimMailRegex  = /<(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi;\n\n  text = text.replace(delimUrlRegex, replaceLink);\n  text = text.replace(delimMailRegex, replaceMail);\n  // simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[-.+~:?#@!$&'()*,;=[\\]\\w]+)\\b/gi,\n  // Email addresses: <address@domain.foo>\n\n  if (options.simplifiedAutoLink) {\n    if (options.excludeTrailingPunctuationFromURLs) {\n      text = text.replace(simpleURLRegex2, replaceLink);\n    } else {\n      text = text.replace(simpleURLRegex, replaceLink);\n    }\n    text = text.replace(simpleMailRegex, replaceMail);\n  }\n\n  function replaceLink(wm, link, m2, m3, trailingPunctuation) {\n    var lnkTxt = link,\n        append = '';\n    if (/^www\\./i.test(link)) {\n      link = link.replace(/^www\\./i, 'http://www.');\n    }\n    if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\n      append = trailingPunctuation;\n    }\n    return '<a href=\"' + link + '\">' + lnkTxt + '</a>' + append;\n  }\n\n  function replaceMail(wholeMatch, mail) {\n    var unescapedStr = showdown.subParser('unescapeSpecialChars')(mail);\n    return showdown.subParser('encodeEmailAddress')(unescapedStr);\n  }\n\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('blockGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('blockQuotes')(text, options, globals);\n  text = showdown.subParser('headers')(text, options, globals);\n\n  // Do Horizontal Rules:\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n  text = text.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm, key);\n\n  text = showdown.subParser('lists')(text, options, globals);\n  text = showdown.subParser('codeBlocks')(text, options, globals);\n  text = showdown.subParser('tables')(text, options, globals);\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n  text = showdown.subParser('paragraphs')(text, options, globals);\n\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\n  return text;\n});\n\r\nshowdown.subParser('blockQuotes', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\n  text = text.replace(/((^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+)/gm, function (wholeMatch, m1) {\n    var bq = m1;\n\n    // attacklab: hack around Konqueror 3.5.4 bug:\n    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, '~0'); // trim one level of quoting\n\n    // attacklab: clean up hack\n    bq = bq.replace(/~0/g, '');\n\n    bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\n    bq = bq.replace(/(^|\\n)/g, '$1  ');\n    // These leading spaces screw with <pre> content, so we need to fix that:\n    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n      var pre = m1;\n      // attacklab: hack around Konqueror 3.5.4 bug:\n      pre = pre.replace(/^  /mg, '~0');\n      pre = pre.replace(/~0/g, '');\n      return pre;\n    });\n\n    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n  });\n\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Process Markdown `<pre><code>` blocks.\n */\nshowdown.subParser('codeBlocks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\n  // sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '~0';\n\n  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))/g;\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n    var codeblock = m1,\n        nextChar = m2,\n        end = '\\n';\n\n    codeblock = showdown.subParser('outdent')(codeblock);\n    codeblock = showdown.subParser('encodeCode')(codeblock);\n    codeblock = showdown.subParser('detab')(codeblock);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\n    if (options.omitExtraWLInCodeBlocks) {\n      end = '';\n    }\n\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n  });\n\n  // strip sentinel\n  text = text.replace(/~0/, '');\n\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n *   *  Backtick quotes are used for <code></code> spans.\n *\n *   *  You can use multiple backticks as the delimiters if you want to\n *     include literal backticks in the code span. So, this input:\n *\n *         Just type ``foo `bar` baz`` at the prompt.\n *\n *       Will translate to:\n *\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n *\n *    There's no arbitrary limit to the number of backticks you\n *    can use as delimters. If you need three consecutive backticks\n *    in your code, use four for delimiters, etc.\n *\n *  *  You can use spaces to get literal backticks at the edges:\n *\n *         ... type `` `bar` `` ...\n *\n *       Turns to:\n *\n *         ... type <code>`bar`</code> ...\n */\nshowdown.subParser('codeSpans', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\n  /*\n   text = text.replace(/\n   (^|[^\\\\])\t\t\t\t\t// Character before opening ` can't be a backslash\n   (`+)\t\t\t\t\t\t// $2 = Opening run of `\n   (\t\t\t\t\t\t\t// $3 = The code block\n   [^\\r]*?\n   [^`]\t\t\t\t\t// attacklab: work around lack of lookbehind\n   )\n   \\2\t\t\t\t\t\t\t// Matching closer\n   (?!`)\n   /gm, function(){...});\n   */\n\n  if (typeof(text) === 'undefined') {\n    text = '';\n  }\n  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n    function (wholeMatch, m1, m2, m3) {\n      var c = m3;\n      c = c.replace(/^([ \\t]*)/g, '');\t// leading whitespace\n      c = c.replace(/[ \\t]*$/g, '');\t// trailing whitespace\n      c = showdown.subParser('encodeCode')(c);\n      return m1 + '<code>' + c + '</code>';\n    }\n  );\n\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Convert all tabs to spaces\n */\nshowdown.subParser('detab', function (text) {\n  'use strict';\n\n  // expand first n-1 tabs\n  text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\n  // replace the nth with two sentinels\n  text = text.replace(/\\t/g, '~A~B');\n\n  // use the sentinel to anchor our regex so it doesn't explode\n  text = text.replace(/~B(.+?)~A/g, function (wholeMatch, m1) {\n    var leadingText = m1,\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\n\n    // there *must* be a better way to do this:\n    for (var i = 0; i < numSpaces; i++) {\n      leadingText += ' ';\n    }\n\n    return leadingText;\n  });\n\n  // clean up sentinels\n  text = text.replace(/~A/g, '    ');  // g_tab_width\n  text = text.replace(/~B/g, '');\n\n  return text;\n\n});\n\r\n/**\n * Smart processing for ampersands and angle brackets that need to be encoded.\n */\nshowdown.subParser('encodeAmpsAndAngles', function (text) {\n  'use strict';\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n  // http://bumppo.net/projects/amputator/\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\n  // Encode naked <'s\n  text = text.replace(/<(?![a-z\\/?\\$!])/gi, '&lt;');\n\n  return text;\n});\n\r\n/**\n * Returns the string, with after processing the following backslash escape sequences.\n *\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\n *\n *    text = escapeCharacters(text,\"\\\\\",true);\n *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n *\n * ...but we're sidestepping its use of the (slow) RegExp constructor\n * as an optimization for Firefox.  This function gets called a LOT.\n */\nshowdown.subParser('encodeBackslashEscapes', function (text) {\n  'use strict';\n  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n  text = text.replace(/\\\\([`*_{}\\[\\]()>#+-.!])/g, showdown.helper.escapeCharactersCallback);\n  return text;\n});\n\r\n/**\n * Encode/escape certain characters inside Markdown code runs.\n * The point is that in code, these characters are literals,\n * and lose their special Markdown meanings.\n */\nshowdown.subParser('encodeCode', function (text) {\n  'use strict';\n\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  text = text.replace(/&/g, '&amp;');\n\n  // Do the angle bracket song and dance:\n  text = text.replace(/</g, '&lt;');\n  text = text.replace(/>/g, '&gt;');\n\n  // Now, escape characters that are magic in Markdown:\n  text = showdown.helper.escapeCharacters(text, '*_{}[]\\\\', false);\n\n  // jj the line above breaks this:\n  //---\n  //* Item\n  //   1. Subitem\n  //            special char: *\n  // ---\n\n  return text;\n});\n\r\n/**\n *  Input: an email address, e.g. \"foo@example.com\"\n *\n *  Output: the email address as a mailto link, with each character\n *    of the address encoded as either a decimal or hex entity, in\n *    the hopes of foiling most address harvesting spam bots. E.g.:\n *\n *    <a href=\"&#x6D;&#97;&#105;&#108;&#x74;&#111;:&#102;&#111;&#111;&#64;&#101;\n *       x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;\">&#102;&#111;&#111;\n *       &#64;&#101;x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;</a>\n *\n *  Based on a filter by Matthew Wickline, posted to the BBEdit-Talk\n *  mailing list: <http://tinyurl.com/yu7ue>\n *\n */\nshowdown.subParser('encodeEmailAddress', function (addr) {\n  'use strict';\n\n  var encode = [\n    function (ch) {\n      return '&#' + ch.charCodeAt(0) + ';';\n    },\n    function (ch) {\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n    },\n    function (ch) {\n      return ch;\n    }\n  ];\n\n  addr = 'mailto:' + addr;\n\n  addr = addr.replace(/./g, function (ch) {\n    if (ch === '@') {\n      // this *must* be encoded. I insist.\n      ch = encode[Math.floor(Math.random() * 2)](ch);\n    } else if (ch !== ':') {\n      // leave ':' alone (to spot mailto: later)\n      var r = Math.random();\n      // roughly 10% raw, 45% hex, 45% dec\n      ch = (\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n      );\n    }\n    return ch;\n  });\n\n  addr = '<a href=\"' + addr + '\">' + addr + '</a>';\n  addr = addr.replace(/\">.+:/g, '\">'); // strip the mailto: from the visible part\n\n  return addr;\n});\n\r\n/**\n * Within tags -- meaning between < and > -- encode [\\ ` * _] so they\n * don't conflict with their use in Markdown for code, italics and strong.\n */\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text) {\n  'use strict';\n\n  // Build a regex to find HTML tags and comments.  See Friedl's\n  // \"Mastering Regular Expressions\", 2nd Ed., pp. 200-201.\n  var regex = /(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)/gi;\n\n  text = text.replace(regex, function (wholeMatch) {\n    var tag = wholeMatch.replace(/(.)<\\/?code>(?=.)/g, '$1`');\n    tag = showdown.helper.escapeCharacters(tag, '\\\\`*_', false);\n    return tag;\n  });\n\n  return text;\n});\n\r\n/**\n * Handle github codeblocks prior to running HashHTML so that\n * HTML contained within the codeblock gets escaped properly\n * Example:\n * ```ruby\n *     def hello_world(x)\n *       puts \"Hello, #{x}\"\n *     end\n * ```\n */\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n  'use strict';\n\n  // early exit if option is not enabled\n  if (!options.ghCodeBlocks) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\n  text += '~0';\n\n  text = text.replace(/(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g, function (wholeMatch, language, codeblock) {\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n';\n\n    // First parse the github code block\n    codeblock = showdown.subParser('encodeCode')(codeblock);\n    codeblock = showdown.subParser('detab')(codeblock);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\n    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\n    // Since GHCodeblocks can be false positives, we need to\n    // store the primitive text and the parsed text in a global var,\n    // and then return a token\n    return '\\n\\n~G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '');\n\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n});\n\r\nshowdown.subParser('hashBlock', function (text, options, globals) {\n  'use strict';\n  text = text.replace(/(^\\n+|\\n+$)/g, '');\n  return '\\n\\n~K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n});\n\r\nshowdown.subParser('hashElement', function (text, options, globals) {\n  'use strict';\n\n  return function (wholeMatch, m1) {\n    var blockText = m1;\n\n    // Undo double lines\n    blockText = blockText.replace(/\\n\\n/g, '\\n');\n    blockText = blockText.replace(/^\\n/, '');\n\n    // strip trailing blank lines\n    blockText = blockText.replace(/\\n+$/g, '');\n\n    // Replace the element text with a marker (\"~KxK\" where x is its key)\n    blockText = '\\n\\n~K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\n    return blockText;\n  };\n});\n\r\nshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n  'use strict';\n\n  var blockTags = [\n      'pre',\n      'div',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'table',\n      'dl',\n      'ol',\n      'ul',\n      'script',\n      'noscript',\n      'form',\n      'fieldset',\n      'iframe',\n      'math',\n      'style',\n      'section',\n      'header',\n      'footer',\n      'nav',\n      'article',\n      'aside',\n      'address',\n      'audio',\n      'canvas',\n      'figure',\n      'hgroup',\n      'output',\n      'video',\n      'p'\n    ],\n    repFunc = function (wholeMatch, match, left, right) {\n      var txt = wholeMatch;\n      // check if this html element is marked as markdown\n      // if so, it's contents should be parsed as markdown\n      if (left.search(/\\bmarkdown\\b/) !== -1) {\n        txt = left + globals.converter.makeHtml(match) + right;\n      }\n      return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n    };\n\n  for (var i = 0; i < blockTags.length; ++i) {\n    text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<' + blockTags[i] + '\\\\b[^>]*>', '</' + blockTags[i] + '>', 'gim');\n  }\n\n  // HR SPECIAL CASE\n  text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  // Special case for standalone HTML comments\n  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\n    return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n  }, '^ {0,3}<!--', '-->', 'gm');\n\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n  text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashHTMLSpans', function (text, config, globals) {\n  'use strict';\n\n  var matches = showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');\n\n  for (var i = 0; i < matches.length; ++i) {\n    text = text.replace(matches[i][0], '~C' + (globals.gHtmlSpans.push(matches[i][0]) - 1) + 'C');\n  }\n  return text;\n});\n\n/**\n * Unhash HTML spans\n */\nshowdown.subParser('unhashHTMLSpans', function (text, config, globals) {\n  'use strict';\n\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n    text = text.replace('~C' + i + 'C', globals.gHtmlSpans[i]);\n  }\n\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashPreCodeTags', function (text, config, globals) {\n  'use strict';\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    // encode html entities\n    var codeblock = left + showdown.subParser('encodeCode')(match) + right;\n    return '\\n\\n~G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  };\n\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^ {0,3}</code>\\\\s*</pre>', 'gim');\n  return text;\n});\n\r\nshowdown.subParser('headers', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('headers.before', text, options, globals);\n\n  var prefixHeader = options.prefixHeaderId,\n      headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n      ghHeaderId = options.ghCompatibleHeaderId,\n\n  // Set text-style headers:\n  //\tHeader 1\n  //\t========\n  //\n  //\tHeader 2\n  //\t--------\n  //\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart + 1,\n      hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  // atx-style headers:\n  //  # Header 1\n  //  ## Header 2\n  //  ## Header 2 with closing hashes ##\n  //  ...\n  //  ###### Header 6\n  //\n  var atxStyle = (options.requireSpaceBeforeHeadingText) ? /^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm : /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm;\n\n  text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\n    var span = showdown.subParser('spanGamut')(m2, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n        hLevel = headerLevelStart - 1 + m1.length,\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\n    return showdown.subParser('hashBlock')(header, options, globals);\n  });\n\n  function headerId(m) {\n    var title, escapedId;\n\n    if (ghHeaderId) {\n      escapedId = m\n        .replace(/ /g, '-')\n        //replace previously escaped chars (&, ~ and $)\n        .replace(/&amp;/g, '')\n        .replace(/~T/g, '')\n        .replace(/~D/g, '')\n        //replace rest of the chars (&~$ are repeated as they might have been escaped)\n        // borrowed from github's redcarpet (some they should produce similar results)\n        .replace(/[&+$,\\/:;=?@\"#{}|^~\\[\\]`\\\\*)(%.!'<>]/g, '')\n        .toLowerCase();\n    } else {\n      escapedId = m.replace(/[^\\w]/g, '').toLowerCase();\n    }\n\n    if (globals.hashLinkCounts[escapedId]) {\n      title = escapedId + '-' + (globals.hashLinkCounts[escapedId]++);\n    } else {\n      title = escapedId;\n      globals.hashLinkCounts[escapedId] = 1;\n    }\n\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\n    if (prefixHeader === true) {\n      prefixHeader = 'section';\n    }\n\n    if (showdown.helper.isString(prefixHeader)) {\n      return prefixHeader + title;\n    }\n    return title;\n  }\n\n  text = globals.converter._dispatch('headers.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown image shortcuts into <img> tags.\n */\nshowdown.subParser('images', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('images.before', text, options, globals);\n\n  var inlineRegExp    = /!\\[(.*?)]\\s?\\([ \\t]*()<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(['\"])(.*?)\\6[ \\t]*)?\\)/g,\n      referenceRegExp = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[(.*?)]()()()()()/g;\n\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\n    var gUrls   = globals.gUrls,\n        gTitles = globals.gTitles,\n        gDims   = globals.gDimensions;\n\n    linkId = linkId.toLowerCase();\n\n    if (!title) {\n      title = '';\n    }\n\n    if (url === '' || url === null) {\n      if (linkId === '' || linkId === null) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n        url = gUrls[linkId];\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n          title = gTitles[linkId];\n        }\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\n          width = gDims[linkId].width;\n          height = gDims[linkId].height;\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    altText = altText.replace(/\"/g, '&quot;');\n    altText = showdown.helper.escapeCharacters(altText, '*_', false);\n    url = showdown.helper.escapeCharacters(url, '*_', false);\n    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\n    if (title) {\n      title = title.replace(/\"/g, '&quot;');\n      title = showdown.helper.escapeCharacters(title, '*_', false);\n      result += ' title=\"' + title + '\"';\n    }\n\n    if (width && height) {\n      width  = (width === '*') ? 'auto' : width;\n      height = (height === '*') ? 'auto' : height;\n\n      result += ' width=\"' + width + '\"';\n      result += ' height=\"' + height + '\"';\n    }\n\n    result += ' />';\n\n    return result;\n  }\n\n  // First, handle reference-style labeled images: ![alt text][id]\n  text = text.replace(referenceRegExp, writeImageTag);\n\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n  text = text.replace(inlineRegExp, writeImageTag);\n\n  text = globals.converter._dispatch('images.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('italicsAndBold', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\n  if (options.literalMidWordUnderscores) {\n    //underscores\n    // Since we are consuming a \\s character, we need to add it\n    text = text.replace(/(^|\\s|>|\\b)__(?=\\S)([\\s\\S]+?)__(?=\\b|<|\\s|$)/gm, '$1<strong>$2</strong>');\n    text = text.replace(/(^|\\s|>|\\b)_(?=\\S)([\\s\\S]+?)_(?=\\b|<|\\s|$)/gm, '$1<em>$2</em>');\n    //asterisks\n    text = text.replace(/(\\*\\*)(?=\\S)([^\\r]*?\\S[*]*)\\1/g, '<strong>$2</strong>');\n    text = text.replace(/(\\*)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n\n  } else {\n    // <strong> must go first:\n    text = text.replace(/(\\*\\*|__)(?=\\S)([^\\r]*?\\S[*_]*)\\1/g, '<strong>$2</strong>');\n    text = text.replace(/(\\*|_)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n  }\n\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\n */\nshowdown.subParser('lists', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('lists.before', text, options, globals);\n\n  /**\n   * Process the contents of a single ordered or unordered list, splitting it\n   * into individual list items.\n   * @param {string} listStr\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function processListItems (listStr, trimTrailing) {\n    // The $g_list_level global keeps track of when we're inside a list.\n    // Each time we enter a list, we increment it; when we leave a list,\n    // we decrement. If it's zero, we're not in a list anymore.\n    //\n    // We do this because when we're not inside a list, we want to treat\n    // something like this:\n    //\n    //    I recommend upgrading to version\n    //    8. Oops, now this line is treated\n    //    as a sub-list.\n    //\n    // As a single paragraph, despite the fact that the second line starts\n    // with a digit-period-space sequence.\n    //\n    // Whereas when we're inside a list (or sub-list), that line will be\n    // treated as the start of a sub-list. What a kludge, huh? This is\n    // an aspect of Markdown's syntax that's hard to parse perfectly\n    // without resorting to mind-reading. Perhaps the solution is to\n    // change the syntax rules such that sub-lists must start with a\n    // starting cardinal number; e.g. \"1.\" or \"a.\".\n    globals.gListLevel++;\n\n    // trim trailing blank lines:\n    listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\n    // attacklab: add sentinel to emulate \\z\n    listStr += '~0';\n\n    var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,\n        isParagraphed = (/\\n[ \\t]*\\n(?!~0)/.test(listStr));\n\n    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\n    // which is a syntax breaking change\n    // activating this option reverts to old behavior\n    if (options.disableForced4SpacesIndentedSublists) {\n      rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0|\\2([*+-]|\\d+[.])[ \\t]+))/gm;\n    }\n\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n      checked = (checked && checked.trim() !== '');\n\n      var item = showdown.subParser('outdent')(m4, options, globals),\n          bulletStyle = '';\n\n      // Support for github tasklists\n      if (taskbtn && options.tasklists) {\n        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n          if (checked) {\n            otp += ' checked';\n          }\n          otp += '>';\n          return otp;\n        });\n      }\n\n      // ISSUE #312\n      // This input: - - - a\n      // causes trouble to the parser, since it interprets it as:\n      // <ul><li><li><li>a</li></li></li></ul>\n      // instead of:\n      // <ul><li>- - a</li></ul>\n      // So, to prevent it, we will put a marker (~A)in the beginning of the line\n      // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\n      item = item.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g, function (wm2) {\n        return '~A' + wm2;\n      });\n\n      // m1 - Leading line or\n      // Has a double return (multi paragraph) or\n      // Has sublist\n      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n        item = showdown.subParser('blockGamut')(item, options, globals);\n      } else {\n        // Recursion for sub-lists:\n        item = showdown.subParser('lists')(item, options, globals);\n        item = item.replace(/\\n$/, ''); // chomp(item)\n        item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\n        // Colapse double linebreaks\n        item = item.replace(/\\n\\n+/g, '\\n\\n');\n        // replace double linebreaks with a placeholder\n        item = item.replace(/\\n\\n/g, '~B');\n        if (isParagraphed) {\n          item = showdown.subParser('paragraphs')(item, options, globals);\n        } else {\n          item = showdown.subParser('spanGamut')(item, options, globals);\n        }\n        item = item.replace(/~B/g, '\\n\\n');\n      }\n\n      // now we need to remove the marker (~A)\n      item = item.replace('~A', '');\n      // we can finally wrap the line in list item tags\n      item =  '<li' + bulletStyle + '>' + item + '</li>\\n';\n\n      return item;\n    });\n\n    // attacklab: strip sentinel\n    listStr = listStr.replace(/~0/g, '');\n\n    globals.gListLevel--;\n\n    if (trimTrailing) {\n      listStr = listStr.replace(/\\s+$/, '');\n    }\n\n    return listStr;\n  }\n\n  /**\n   * Check and parse consecutive lists (better fix for issue #142)\n   * @param {string} list\n   * @param {string} listType\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function parseConsecutiveLists(list, listType, trimTrailing) {\n    // check if we caught 2 or more consecutive lists by mistake\n    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\n    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm,\n        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm,\n        counterRxg = (listType === 'ul') ? olRgx : ulRgx,\n        result = '';\n\n    if (list.search(counterRxg) !== -1) {\n      (function parseCL(txt) {\n        var pos = txt.search(counterRxg);\n        if (pos !== -1) {\n          // slice\n          result += '\\n<' + listType + '>\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n';\n\n          // invert counterType and listType\n          listType = (listType === 'ul') ? 'ol' : 'ul';\n          counterRxg = (listType === 'ul') ? olRgx : ulRgx;\n\n          //recurse\n          parseCL(txt.slice(pos));\n        } else {\n          result += '\\n<' + listType + '>\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n';\n        }\n      })(list);\n    } else {\n      result = '\\n<' + listType + '>\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n';\n    }\n\n    return result;\n  }\n\n  // add sentinel to hack around khtml/safari bug:\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\n  text += '~0';\n\n  if (globals.gListLevel) {\n    text = text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, list, m2) {\n        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, true);\n      }\n    );\n  } else {\n    text = text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, m1, list, m3) {\n        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, false);\n      }\n    );\n  }\n\n  // strip sentinel\n  text = text.replace(/~0/, '');\n  text = globals.converter._dispatch('lists.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Remove one level of line-leading tabs or spaces\n */\nshowdown.subParser('outdent', function (text) {\n  'use strict';\n\n  // attacklab: hack around Konqueror 3.5.4 bug:\n  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n  text = text.replace(/^(\\t|[ ]{1,4})/gm, '~0'); // attacklab: g_tab_width\n\n  // attacklab: clean up hack\n  text = text.replace(/~0/g, '');\n\n  return text;\n});\n\r\n/**\n *\n */\nshowdown.subParser('paragraphs', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n\n  var grafs = text.split(/\\n{2,}/g),\n      grafsOut = [],\n      end = grafs.length; // Wrap <p> tags\n\n  for (var i = 0; i < end; i++) {\n    var str = grafs[i];\n    // if this is an HTML marker, copy it\n    if (str.search(/~(K|G)(\\d+)\\1/g) >= 0) {\n      grafsOut.push(str);\n    } else {\n      str = showdown.subParser('spanGamut')(str, options, globals);\n      str = str.replace(/^([ \\t]*)/g, '<p>');\n      str += '</p>';\n      grafsOut.push(str);\n    }\n  }\n\n  /** Unhashify HTML blocks */\n  end = grafsOut.length;\n  for (i = 0; i < end; i++) {\n    var blockText = '',\n        grafsOutIt = grafsOut[i],\n        codeFlag = false;\n    // if this is a marker for an html block...\n    while (grafsOutIt.search(/~(K|G)(\\d+)\\1/) >= 0) {\n      var delim = RegExp.$1,\n          num   = RegExp.$2;\n\n      if (delim === 'K') {\n        blockText = globals.gHtmlBlocks[num];\n      } else {\n        // we need to check if ghBlock is a false positive\n        if (codeFlag) {\n          // use encoded version of all text\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text);\n        } else {\n          blockText = globals.ghCodeBlocks[num].codeblock;\n        }\n      }\n      blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\n      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?~(K|G)\\d+\\2(\\n\\n)?/, blockText);\n      // Check if grafsOutIt is a pre->code\n      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n        codeFlag = true;\n      }\n    }\n    grafsOut[i] = grafsOutIt;\n  }\n  text = grafsOut.join('\\n');\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\n});\n\r\n/**\n * Run extension\n */\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\n  'use strict';\n\n  if (ext.filter) {\n    text = ext.filter(text, globals.converter, options);\n\n  } else if (ext.regex) {\n    // TODO remove this when old extension loading mechanism is deprecated\n    var re = ext.regex;\n    if (!re instanceof RegExp) {\n      re = new RegExp(re, 'g');\n    }\n    text = text.replace(re, ext.replace);\n  }\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that occur *within* block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('spanGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n  text = showdown.subParser('codeSpans')(text, options, globals);\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\n  // Process anchor and image tags. Images must come first,\n  // because ![foo][f] looks like an anchor.\n  text = showdown.subParser('images')(text, options, globals);\n  text = showdown.subParser('anchors')(text, options, globals);\n\n  // Make links out of things like `<http://example.com/>`\n  // Must come after _DoAnchors(), because you can use < and >\n  // delimiters in inline links like [this](<url>).\n  text = showdown.subParser('autoLinks')(text, options, globals);\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\n  text = showdown.subParser('strikethrough')(text, options, globals);\n\n  // Do hard breaks\n  if (options.simpleLineBreaks) {\n    // GFM style hard breaks\n    text = text.replace(/\\n/g, '<br />\\n');\n  } else {\n    // Vanilla hard breaks\n    text = text.replace(/  +\\n/g, '<br />\\n');\n  }\n\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('strikethrough', function (text, options, globals) {\n  'use strict';\n\n  if (options.strikethrough) {\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n    text = text.replace(/(?:~T){2}([\\s\\S]+?)(?:~T){2}/g, '<del>$1</del>');\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n  }\n\n  return text;\n});\n\r\n/**\n * Strip any lines consisting only of spaces and tabs.\n * This makes subsequent regexs easier to write, because we can\n * match consecutive blank lines with /\\n+/ instead of something\n * contorted like /[ \\t]*\\n+/\n */\nshowdown.subParser('stripBlankLines', function (text) {\n  'use strict';\n  return text.replace(/^[ \\t]+$/mg, '');\n});\n\r\n/**\n * Strips link definitions from text, stores the URLs and titles in\n * hash references.\n * Link defs are in the form: ^[id]: url \"optional title\"\n */\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n  'use strict';\n\n  var regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=~0))/gm;\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '~0';\n\n  text = text.replace(regex, function (wholeMatch, linkId, url, width, height, blankLines, title) {\n    linkId = linkId.toLowerCase();\n    globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url);  // Link IDs are case-insensitive\n\n    if (blankLines) {\n      // Oops, found blank lines, so it's not a title.\n      // Put back the parenthetical statement we stole.\n      return blankLines + title;\n\n    } else {\n      if (title) {\n        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n      }\n      if (options.parseImgDimensions && width && height) {\n        globals.gDimensions[linkId] = {\n          width:  width,\n          height: height\n        };\n      }\n    }\n    // Completely remove the definition from the text\n    return '';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '');\n\n  return text;\n});\n\r\nshowdown.subParser('tables', function (text, options, globals) {\n  'use strict';\n\n  if (!options.tables) {\n    return text;\n  }\n\n  var tableRgx = /^ {0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[\\s\\S]+?(?:\\n\\n|~0)/gm;\n\n  function parseStyles(sLine) {\n    if (/^:[ \\t]*--*$/.test(sLine)) {\n      return ' style=\"text-align:left;\"';\n    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n      return ' style=\"text-align:right;\"';\n    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n      return ' style=\"text-align:center;\"';\n    } else {\n      return '';\n    }\n  }\n\n  function parseHeaders(header, style) {\n    var id = '';\n    header = header.trim();\n    if (options.tableHeaderId) {\n      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n    }\n    header = showdown.subParser('spanGamut')(header, options, globals);\n\n    return '<th' + id + style + '>' + header + '</th>\\n';\n  }\n\n  function parseCells(cell, style) {\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\n    return '<td' + style + '>' + subText + '</td>\\n';\n  }\n\n  function buildTable(headers, cells) {\n    var tb = '<table>\\n<thead>\\n<tr>\\n',\n        tblLgn = headers.length;\n\n    for (var i = 0; i < tblLgn; ++i) {\n      tb += headers[i];\n    }\n    tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\n    for (i = 0; i < cells.length; ++i) {\n      tb += '<tr>\\n';\n      for (var ii = 0; ii < tblLgn; ++ii) {\n        tb += cells[i][ii];\n      }\n      tb += '</tr>\\n';\n    }\n    tb += '</tbody>\\n</table>\\n';\n    return tb;\n  }\n\n  text = globals.converter._dispatch('tables.before', text, options, globals);\n\n  text = text.replace(tableRgx, function (rawTable) {\n\n    var i, tableLines = rawTable.split('\\n');\n\n    // strip wrong first and last column if wrapped tables are used\n    for (i = 0; i < tableLines.length; ++i) {\n      if (/^ {0,3}\\|/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, '');\n      }\n      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n      }\n    }\n\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\n        rawCells = [],\n        headers = [],\n        styles = [],\n        cells = [];\n\n    tableLines.shift();\n    tableLines.shift();\n\n    for (i = 0; i < tableLines.length; ++i) {\n      if (tableLines[i].trim() === '') {\n        continue;\n      }\n      rawCells.push(\n        tableLines[i]\n          .split('|')\n          .map(function (s) {\n            return s.trim();\n          })\n      );\n    }\n\n    if (rawHeaders.length < rawStyles.length) {\n      return rawTable;\n    }\n\n    for (i = 0; i < rawStyles.length; ++i) {\n      styles.push(parseStyles(rawStyles[i]));\n    }\n\n    for (i = 0; i < rawHeaders.length; ++i) {\n      if (showdown.helper.isUndefined(styles[i])) {\n        styles[i] = '';\n      }\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\n    }\n\n    for (i = 0; i < rawCells.length; ++i) {\n      var row = [];\n      for (var ii = 0; ii < headers.length; ++ii) {\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\n        }\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\n      }\n      cells.push(row);\n    }\n\n    return buildTable(headers, cells);\n  });\n\n  text = globals.converter._dispatch('tables.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Swap back in all the special characters we've hidden.\n */\nshowdown.subParser('unescapeSpecialChars', function (text) {\n  'use strict';\n\n  text = text.replace(/~E(\\d+)E/g, function (wholeMatch, m1) {\n    var charCodeToReplace = parseInt(m1);\n    return String.fromCharCode(charCodeToReplace);\n  });\n  return text;\n});\n\r\nvar root = this;\n\n// CommonJS/nodeJS Loader\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = showdown;\n\n// AMD Loader\n} else if (typeof define === 'function' && define.amd) {\n  define(function () {\n    'use strict';\n    return showdown;\n  });\n\n// Regular Browser loader\n} else {\n  root.showdown = showdown;\n}\n}).call(this);\r\n\n//# sourceMappingURL=showdown.js.map\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/showdown/dist/showdown.js","import * as Prism from 'prismjs';\r\nimport './SyntaxHighligherLanguages';\r\n\r\nexport class SyntaxHighlighter{\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tconstructor(){\r\n\t\tthis._highlighter = Prism;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Prism} - syntax highlighter\r\n\t */\r\n\tget getHighlighter(){\r\n\t\treturn this._highlighter;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/SyntaxHighlighter.js","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-(\\w+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = _self.Prism = {\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function (o) {\n\t\t\tvar type = _.util.type(o);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tvar clone = {};\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\t// Check for existence for IE8\n\t\t\t\t\treturn o.map && o.map(function(v) { return _.util.clone(v); });\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn grammar;\n\t\t\t}\n\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || document.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tparent = element.parentNode;\n\n\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code || !env.grammar) {\n\t\t\tif (env.code) {\n\t\t\t\tenv.element.textContent = env.code;\n\t\t\t}\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tenv.highlightedCode = evt.data;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tcallback && callback.call(element);\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar tokens = _.tokenize(text, grammar);\n\t\treturn Token.stringify(_.util.encode(tokens), language);\n\t},\n\n\ttokenize: function(text, grammar, language) {\n\t\tvar Token = _.Token;\n\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\ttokenloop: for (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i=0, pos = 0; i<strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\tbreak tokenloop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t    delNum = 1;\n\n\t\t\t\t\t// Greedy patterns can override/remove up to two previously matched tokens\n\t\t\t\t\tif (!match && greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tmatch = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && p < to; ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\t * If strarr[k - 1] is greedy we are in conflict with another greedy pattern\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (strarr[i] instanceof Token || strarr[k - 1].greedy) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1].length;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n};\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (_.util.type(o) === 'Array') {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (env.type == 'comment') {\n\t\tenv.attributes['spellcheck'] = 'true';\n\t}\n\n\tif (o.alias) {\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _self.Prism;\n\t}\n \t// In worker\n\t_self.addEventListener('message', function(evt) {\n\t\tvar message = JSON.parse(evt.data),\n\t\t    lang = message.language,\n\t\t    code = message.code,\n\t\t    immediateClose = message.immediateClose;\n\n\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\tif (immediateClose) {\n\t\t\t_self.close();\n\t\t}\n\t}, false);\n\n\treturn _self.Prism;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (document.addEventListener && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\w\\W]*?-->/,\n\t'prolog': /<\\?[\\w\\W]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\w\\W]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[=>\"']/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\nPrism.languages.css = {\n\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\n\t'string': {\n\t\tpattern: /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n\t'important': /\\B!important\\b/i,\n\t'function': /[-a-z0-9]+(?=\\()/i,\n\t'punctuation': /[(){};:]/\n};\n\nPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'style': {\n\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.css,\n\t\t\talias: 'language-css'\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'style-attr': {\n\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'language-css'\n\t\t}\n\t}, Prism.languages.markup.tag);\n}\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /(\\.|\\\\)/\n\t\t}\n\t},\n\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(true|false)\\b/,\n\t'function': /[a-z0-9_]+(?=\\()/i,\n\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*\\*?|\\/|~|\\^|%|\\.{3}/\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t\talias: 'language-javascript'\n\t\t}\n\t});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\tself.Prism.fileHighlight = function() {\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tif(Array.prototype.forEach) { // Check to prevent error in IE8\n\t\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\t\tvar language, parent = pre;\n\t\t\t\tvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n\t\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t\t}\n\n\t\t\t\tif (!language) {\n\t\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t\t}\n\n\t\t\t\tvar code = document.createElement('code');\n\t\t\t\tcode.className = 'language-' + language;\n\n\t\t\t\tpre.textContent = '';\n\n\t\t\t\tcode.textContent = 'Loading…';\n\n\t\t\t\tpre.appendChild(code);\n\n\t\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\t\txhr.open('GET', src, true);\n\n\t\t\t\txhr.onreadystatechange = function () {\n\t\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\txhr.send(null);\n\t\t\t});\n\t\t}\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/prism.js","// import 'prismjs/components/prism-abap.js';\r\n// import 'prismjs/components/prism-actionscript.js';\r\n// import 'prismjs/components/prism-ada.js';\r\nimport 'prismjs/components/prism-apacheconf.js';\r\n// import 'prismjs/components/prism-apl.js';\r\n// import 'prismjs/components/prism-applescript.js';\r\n// import 'prismjs/components/prism-asciidoc.js';\r\n// import 'prismjs/components/prism-aspnet.js';\r\n// import 'prismjs/components/prism-autohotkey.js';\r\n// import 'prismjs/components/prism-autoit.js';\r\nimport 'prismjs/components/prism-bash.js';\r\n// import 'prismjs/components/prism-basic.js';\r\n// import 'prismjs/components/prism-batch.js';\r\n// import 'prismjs/components/prism-bison.js';\r\n// import 'prismjs/components/prism-brainfuck.js';\r\n// import 'prismjs/components/prism-bro.js';\r\nimport 'prismjs/components/prism-c.js';\r\n// import 'prismjs/components/prism-clike.js';\r\nimport 'prismjs/components/prism-coffeescript.js';\r\nimport 'prismjs/components/prism-cpp.js';\r\n// import 'prismjs/components/prism-crystal.js';\r\nimport 'prismjs/components/prism-csharp.js';\r\nimport 'prismjs/components/prism-css.js';\r\n// import 'prismjs/components/prism-css-extras.js';\r\n// import 'prismjs/components/prism-d.js';\r\n// import 'prismjs/components/prism-dart.js';\r\n// import 'prismjs/components/prism-diff.js';\r\n// import 'prismjs/components/prism-docker.js';\r\n// import 'prismjs/components/prism-eiffel.js';\r\n// import 'prismjs/components/prism-elixir.js';\r\n// import 'prismjs/components/prism-erlang.js';\r\n// import 'prismjs/components/prism-fortran.js';\r\n// import 'prismjs/components/prism-fsharp.js';\r\n// import 'prismjs/components/prism-gherkin.js';\r\nimport 'prismjs/components/prism-git.js';\r\n// import 'prismjs/components/prism-glsl.js';\r\n// import 'prismjs/components/prism-go.js';\r\n// import 'prismjs/components/prism-graphql.js';\r\nimport 'prismjs/components/prism-groovy.js';\r\n// import 'prismjs/components/prism-haml.js';\r\n// import 'prismjs/components/prism-handlebars.js';\r\n// import 'prismjs/components/prism-haskell.js';\r\n// import 'prismjs/components/prism-haxe.js';\r\nimport 'prismjs/components/prism-http.js';\r\n// import 'prismjs/components/prism-icon.js';\r\n// import 'prismjs/components/prism-inform7.js';\r\n// import 'prismjs/components/prism-ini.js';\r\n// import 'prismjs/components/prism-j.js';\r\nimport 'prismjs/components/prism-jade.js';\r\nimport 'prismjs/components/prism-java.js';\r\nimport 'prismjs/components/prism-javascript.js';\r\n// import 'prismjs/components/prism-jolie.js';\r\nimport 'prismjs/components/prism-json.js';\r\n// import 'prismjs/components/prism-jsx.js';\r\n// import 'prismjs/components/prism-julia.js';\r\n// import 'prismjs/components/prism-keyman.js';\r\n// import 'prismjs/components/prism-kotlin.js';\r\nimport 'prismjs/components/prism-latex.js';\r\nimport 'prismjs/components/prism-less.js';\r\n// import 'prismjs/components/prism-livescript.js';\r\n// import 'prismjs/components/prism-lolcode.js';\r\n// import 'prismjs/components/prism-lua.js';\r\n// import 'prismjs/components/prism-makefile.js';\r\nimport 'prismjs/components/prism-markdown.js';\r\nimport 'prismjs/components/prism-markup.js';\r\n// import 'prismjs/components/prism-matlab.js';\r\n// import 'prismjs/components/prism-mel.js';\r\n// import 'prismjs/components/prism-mizar.js';\r\n// import 'prismjs/components/prism-monkey.js';\r\n// import 'prismjs/components/prism-nasm.js';\r\nimport 'prismjs/components/prism-nginx.js';\r\n// import 'prismjs/components/prism-nim.js';\r\n// import 'prismjs/components/prism-nix.js';\r\n// import 'prismjs/components/prism-nsis.js';\r\n// import 'prismjs/components/prism-objectivec.js';\r\n// import 'prismjs/components/prism-ocaml.js';\r\n// import 'prismjs/components/prism-oz.js';\r\n// import 'prismjs/components/prism-parigp.js';\r\n// import 'prismjs/components/prism-parser.js';\r\n// import 'prismjs/components/prism-pascal.js';\r\n// import 'prismjs/components/prism-perl.js';\r\nimport 'prismjs/components/prism-php.js';\r\n// import 'prismjs/components/prism-php-extras.js';\r\n// import 'prismjs/components/prism-powershell.js';\r\n// import 'prismjs/components/prism-processing.js';\r\n// import 'prismjs/components/prism-prolog.js';\r\nimport 'prismjs/components/prism-properties.js';\r\n// import 'prismjs/components/prism-protobuf.js';\r\n// import 'prismjs/components/prism-puppet.js';\r\n// import 'prismjs/components/prism-pure.js';\r\nimport 'prismjs/components/prism-python.js';\r\n// import 'prismjs/components/prism-q.js';\r\n// import 'prismjs/components/prism-qore.js';\r\n// import 'prismjs/components/prism-r.js';\r\n// import 'prismjs/components/prism-reason.js';\r\n// import 'prismjs/components/prism-rest.js';\r\n// import 'prismjs/components/prism-rip.js';\r\n// import 'prismjs/components/prism-roboconf.js';\r\n// import 'prismjs/components/prism-ruby.js';\r\n// import 'prismjs/components/prism-rust.js';\r\n// import 'prismjs/components/prism-sas.js';\r\n// import 'prismjs/components/prism-sass.js';\r\n// import 'prismjs/components/prism-scala.js';\r\n// import 'prismjs/components/prism-scheme.js';\r\nimport 'prismjs/components/prism-scss.js';\r\n// import 'prismjs/components/prism-smalltalk.js';\r\n// import 'prismjs/components/prism-smarty.js';\r\n// import 'prismjs/components/prism-sql.js';\r\nimport 'prismjs/components/prism-stylus.js';\r\n// import 'prismjs/components/prism-swift.js';\r\n// import 'prismjs/components/prism-tcl.js';\r\n// import 'prismjs/components/prism-textile.js';\r\n// import 'prismjs/components/prism-twig.js';\r\nimport 'prismjs/components/prism-typescript.js';\r\n// import 'prismjs/components/prism-verilog.js';\r\n// import 'prismjs/components/prism-vhdl.js';\r\n// import 'prismjs/components/prism-vim.js';\r\nimport 'prismjs/components/prism-wiki.js';\r\n// import 'prismjs/components/prism-xojo.js';\r\nimport 'prismjs/components/prism-yaml.js';\n\n\n// WEBPACK FOOTER //\n// ./src/js/SyntaxHighligherLanguages.js","Prism.languages.apacheconf = {\n\t'comment': /#.*/,\n\t'directive-inline': {\n\t\tpattern: /^(\\s*)\\b(AcceptFilter|AcceptPathInfo|AccessFileName|Action|AddAlt|AddAltByEncoding|AddAltByType|AddCharset|AddDefaultCharset|AddDescription|AddEncoding|AddHandler|AddIcon|AddIconByEncoding|AddIconByType|AddInputFilter|AddLanguage|AddModuleInfo|AddOutputFilter|AddOutputFilterByType|AddType|Alias|AliasMatch|Allow|AllowCONNECT|AllowEncodedSlashes|AllowMethods|AllowOverride|AllowOverrideList|Anonymous|Anonymous_LogEmail|Anonymous_MustGiveEmail|Anonymous_NoUserID|Anonymous_VerifyEmail|AsyncRequestWorkerFactor|AuthBasicAuthoritative|AuthBasicFake|AuthBasicProvider|AuthBasicUseDigestAlgorithm|AuthDBDUserPWQuery|AuthDBDUserRealmQuery|AuthDBMGroupFile|AuthDBMType|AuthDBMUserFile|AuthDigestAlgorithm|AuthDigestDomain|AuthDigestNonceLifetime|AuthDigestProvider|AuthDigestQop|AuthDigestShmemSize|AuthFormAuthoritative|AuthFormBody|AuthFormDisableNoStore|AuthFormFakeBasicAuth|AuthFormLocation|AuthFormLoginRequiredLocation|AuthFormLoginSuccessLocation|AuthFormLogoutLocation|AuthFormMethod|AuthFormMimetype|AuthFormPassword|AuthFormProvider|AuthFormSitePassphrase|AuthFormSize|AuthFormUsername|AuthGroupFile|AuthLDAPAuthorizePrefix|AuthLDAPBindAuthoritative|AuthLDAPBindDN|AuthLDAPBindPassword|AuthLDAPCharsetConfig|AuthLDAPCompareAsUser|AuthLDAPCompareDNOnServer|AuthLDAPDereferenceAliases|AuthLDAPGroupAttribute|AuthLDAPGroupAttributeIsDN|AuthLDAPInitialBindAsUser|AuthLDAPInitialBindPattern|AuthLDAPMaxSubGroupDepth|AuthLDAPRemoteUserAttribute|AuthLDAPRemoteUserIsDN|AuthLDAPSearchAsUser|AuthLDAPSubGroupAttribute|AuthLDAPSubGroupClass|AuthLDAPUrl|AuthMerging|AuthName|AuthnCacheContext|AuthnCacheEnable|AuthnCacheProvideFor|AuthnCacheSOCache|AuthnCacheTimeout|AuthnzFcgiCheckAuthnProvider|AuthnzFcgiDefineProvider|AuthType|AuthUserFile|AuthzDBDLoginToReferer|AuthzDBDQuery|AuthzDBDRedirectQuery|AuthzDBMType|AuthzSendForbiddenOnFailure|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|CacheDefaultExpire|CacheDetailHeader|CacheDirLength|CacheDirLevels|CacheDisable|CacheEnable|CacheFile|CacheHeader|CacheIgnoreCacheControl|CacheIgnoreHeaders|CacheIgnoreNoLastMod|CacheIgnoreQueryString|CacheIgnoreURLSessionIdentifiers|CacheKeyBaseURL|CacheLastModifiedFactor|CacheLock|CacheLockMaxAge|CacheLockPath|CacheMaxExpire|CacheMaxFileSize|CacheMinExpire|CacheMinFileSize|CacheNegotiatedDocs|CacheQuickHandler|CacheReadSize|CacheReadTime|CacheRoot|CacheSocache|CacheSocacheMaxSize|CacheSocacheMaxTime|CacheSocacheMinTime|CacheSocacheReadSize|CacheSocacheReadTime|CacheStaleOnError|CacheStoreExpired|CacheStoreNoStore|CacheStorePrivate|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|DeflateBufferSize|DeflateCompressionLevel|DeflateFilterNote|DeflateInflateLimitRequestBody|DeflateInflateRatioBurst|DeflateInflateRatioLimit|DeflateMemLevel|DeflateWindowSize|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|HeartbeatAddress|HeartbeatListen|HeartbeatMaxServers|HeartbeatStorage|HeartbeatStorage|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|IndexHeadInsert|IndexIgnore|IndexIgnoreReset|IndexOptions|IndexOrderDefault|IndexStyleSheet|InputSed|ISAPIAppendLogToErrors|ISAPIAppendLogToQuery|ISAPICacheFile|ISAPIFakeAsync|ISAPILogNotSupported|ISAPIReadAheadBuffer|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAPCacheEntries|LDAPCacheTTL|LDAPConnectionPoolTTL|LDAPConnectionTimeout|LDAPLibraryDebug|LDAPOpCacheEntries|LDAPOpCacheTTL|LDAPReferralHopLimit|LDAPReferrals|LDAPRetries|LDAPRetryDelay|LDAPSharedCacheFile|LDAPSharedCacheSize|LDAPTimeout|LDAPTrustedClientCert|LDAPTrustedGlobalCert|LDAPTrustedMode|LDAPVerifyServerCert|LimitInternalRecursion|LimitRequestBody|LimitRequestFields|LimitRequestFieldSize|LimitRequestLine|LimitXMLRequestBody|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|LuaHookAccessChecker|LuaHookAuthChecker|LuaHookCheckUserID|LuaHookFixups|LuaHookInsertFilter|LuaHookLog|LuaHookMapToStorage|LuaHookTranslateName|LuaHookTypeChecker|LuaInherit|LuaInputFilter|LuaMapHandler|LuaOutputFilter|LuaPackageCPath|LuaPackagePath|LuaQuickHandler|LuaRoot|LuaScope|MaxConnectionsPerChild|MaxKeepAliveRequests|MaxMemFree|MaxRangeOverlaps|MaxRangeReversals|MaxRanges|MaxRequestWorkers|MaxSpareServers|MaxSpareThreads|MaxThreads|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|ProxyAddHeaders|ProxyBadHeader|ProxyBlock|ProxyDomain|ProxyErrorOverride|ProxyExpressDBMFile|ProxyExpressDBMType|ProxyExpressEnable|ProxyFtpDirCharset|ProxyFtpEscapeWildcards|ProxyFtpListOnWildcard|ProxyHTMLBufSize|ProxyHTMLCharsetOut|ProxyHTMLDocType|ProxyHTMLEnable|ProxyHTMLEvents|ProxyHTMLExtended|ProxyHTMLFixups|ProxyHTMLInterp|ProxyHTMLLinks|ProxyHTMLMeta|ProxyHTMLStripComments|ProxyHTMLURLMap|ProxyIOBufferSize|ProxyMaxForwards|ProxyPass|ProxyPassInherit|ProxyPassInterpolateEnv|ProxyPassMatch|ProxyPassReverse|ProxyPassReverseCookieDomain|ProxyPassReverseCookiePath|ProxyPreserveHost|ProxyReceiveBufferSize|ProxyRemote|ProxyRemoteMatch|ProxyRequests|ProxySCGIInternalRedirect|ProxySCGISendfile|ProxySet|ProxySourceAddress|ProxyStatus|ProxyTimeout|ProxyVia|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIPHeader|RemoteIPInternalProxy|RemoteIPInternalProxyList|RemoteIPProxiesHeader|RemoteIPTrustedProxy|RemoteIPTrustedProxyList|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|RewriteBase|RewriteCond|RewriteEngine|RewriteMap|RewriteOptions|RewriteRule|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script|ScriptAlias|ScriptAliasMatch|ScriptInterpreterSource|ScriptLog|ScriptLogBuffer|ScriptLogLength|ScriptSock|SecureListen|SeeRequestTail|SendBufferSize|ServerAdmin|ServerAlias|ServerLimit|ServerName|ServerPath|ServerRoot|ServerSignature|ServerTokens|Session|SessionCookieName|SessionCookieName2|SessionCookieRemove|SessionCryptoCipher|SessionCryptoDriver|SessionCryptoPassphrase|SessionCryptoPassphraseFile|SessionDBDCookieName|SessionDBDCookieName2|SessionDBDCookieRemove|SessionDBDDeleteLabel|SessionDBDInsertLabel|SessionDBDPerUser|SessionDBDSelectLabel|SessionDBDUpdateLabel|SessionEnv|SessionExclude|SessionHeader|SessionInclude|SessionMaxAge|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSLCACertificateFile|SSLCACertificatePath|SSLCADNRequestFile|SSLCADNRequestPath|SSLCARevocationCheck|SSLCARevocationFile|SSLCARevocationPath|SSLCertificateChainFile|SSLCertificateFile|SSLCertificateKeyFile|SSLCipherSuite|SSLCompression|SSLCryptoDevice|SSLEngine|SSLFIPS|SSLHonorCipherOrder|SSLInsecureRenegotiation|SSLOCSPDefaultResponder|SSLOCSPEnable|SSLOCSPOverrideResponder|SSLOCSPResponderTimeout|SSLOCSPResponseMaxAge|SSLOCSPResponseTimeSkew|SSLOCSPUseRequestNonce|SSLOpenSSLConfCmd|SSLOptions|SSLPassPhraseDialog|SSLProtocol|SSLProxyCACertificateFile|SSLProxyCACertificatePath|SSLProxyCARevocationCheck|SSLProxyCARevocationFile|SSLProxyCARevocationPath|SSLProxyCheckPeerCN|SSLProxyCheckPeerExpire|SSLProxyCheckPeerName|SSLProxyCipherSuite|SSLProxyEngine|SSLProxyMachineCertificateChainFile|SSLProxyMachineCertificateFile|SSLProxyMachineCertificatePath|SSLProxyProtocol|SSLProxyVerify|SSLProxyVerifyDepth|SSLRandomSeed|SSLRenegBufferSize|SSLRequire|SSLRequireSSL|SSLSessionCache|SSLSessionCacheTimeout|SSLSessionTicketKeyFile|SSLSRPUnknownUserSeed|SSLSRPVerifierFile|SSLStaplingCache|SSLStaplingErrorCacheTimeout|SSLStaplingFakeTryLater|SSLStaplingForceURL|SSLStaplingResponderTimeout|SSLStaplingResponseMaxAge|SSLStaplingResponseTimeSkew|SSLStaplingReturnResponderErrors|SSLStaplingStandardCacheTimeout|SSLStrictSNIVHostCheck|SSLUserName|SSLUseStapling|SSLVerifyClient|SSLVerifyDepth|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|VirtualDocumentRoot|VirtualDocumentRootIP|VirtualScriptAlias|VirtualScriptAliasIP|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/mi,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n\t'directive-block': {\n\t\tpattern: /<\\/?\\b(AuthnProviderAlias|AuthzProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|RequireAll|RequireAny|RequireNone|VirtualHost)\\b *.*>/i,\n\t\tinside: {\n\t\t\t'directive-block': {\n\t\t\t\tpattern: /^<\\/?\\w+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/\n\t\t\t\t},\n\t\t\t\talias: 'tag'\n\t\t\t},\n\t\t\t'directive-block-parameter': {\n\t\t\t\tpattern: /.*[^>]/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /:/,\n\t\t\t\t\t'string': {\n\t\t\t\t\t\tpattern: /(\"|').*\\1/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'variable': /(\\$|%)\\{?(\\w\\.?(\\+|\\-|:)?)+\\}?/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'attr-value'\n\t\t\t},\n\t\t\t'punctuation': />/\n\t\t},\n\t\talias: 'tag'\n\t},\n\t'directive-flags': {\n\t\tpattern: /\\[(\\w,?)+\\]/,\n\t\talias: 'keyword'\n\t},\n\t'string': {\n\t\tpattern: /(\"|').*\\1/,\n\t\tinside: {\n\t\t\t'variable': /(\\$|%)\\{?(\\w\\.?(\\+|\\-|:)?)+\\}?/\n\t\t}\n\t},\n\t'variable': /(\\$|%)\\{?(\\w\\.?(\\+|\\-|:)?)+\\}?/,\n\t'regex': /\\^?.*\\$|\\^.*\\$?/\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-apacheconf.js","(function(Prism) {\n\tvar insideString = {\n\t\tvariable: [\n\t\t\t// Arithmetic Environment\n\t\t\t{\n\t\t\t\tpattern: /\\$?\\(\\([\\w\\W]+?\\)\\)/,\n\t\t\t\tinside: {\n\t\t\t\t\t// If there is a $ sign at the beginning highlight $(( and )) as variable\n\t\t\t\t\tvariable: [{\n\t\t\t\t\t\t\tpattern: /(^\\$\\(\\([\\w\\W]+)\\)\\)/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/^\\$\\(\\(/,\n\t\t\t\t\t],\n\t\t\t\t\tnumber: /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee]-?\\d+)?)\\b/,\n\t\t\t\t\t// Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n\t\t\t\t\toperator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n\t\t\t\t\t// If there is no $ sign at the beginning highlight (( and )) as punctuation\n\t\t\t\t\tpunctuation: /\\(\\(?|\\)\\)?|,|;/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Command Substitution\n\t\t\t{\n\t\t\t\tpattern: /\\$\\([^)]+\\)|`[^`]+`/,\n\t\t\t\tinside: {\n\t\t\t\t\tvariable: /^\\$\\(|^`|\\)$|`$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t/\\$(?:[a-z0-9_#\\?\\*!@]+|\\{[^}]+\\})/i\n\t\t],\n\t};\n\n\tPrism.languages.bash = {\n\t\t'shebang': {\n\t\t\tpattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,\n\t\t\talias: 'important'\n\t\t},\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\"{\\\\])#.*/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': [\n\t\t\t//Support for Here-Documents https://en.wikipedia.org/wiki/Here_document\n\t\t\t{\n\t\t\t\tpattern: /((?:^|[^<])<<\\s*)(?:\"|')?(\\w+?)(?:\"|')?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/g,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /([\"'])(?:\\\\\\\\|\\\\?[^\\\\])*?\\1/g,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: insideString\n\t\t\t}\n\t\t],\n\t\t'variable': insideString.variable,\n\t\t// Originally based on http://ss64.com/bash/\n\t\t'function': {\n\t\t\tpattern: /(^|\\s|;|\\||&)(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|\\s|;|\\||&)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^|\\s|;|\\||&)(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|\\s|;|\\||&)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'boolean': {\n\t\t\tpattern: /(^|\\s|;|\\||&)(?:true|false)(?=$|\\s|;|\\||&)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'operator': /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,\n\t\t'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/\n\t};\n\n\tvar inside = insideString.variable[1].inside;\n\tinside['function'] = Prism.languages.bash['function'];\n\tinside.keyword = Prism.languages.bash.keyword;\n\tinside.boolean = Prism.languages.bash.boolean;\n\tinside.operator = Prism.languages.bash.operator;\n\tinside.punctuation = Prism.languages.bash.punctuation;\n})(Prism);\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-bash.js","Prism.languages.c = Prism.languages.extend('clike', {\n\t'keyword': /\\b(asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n\t'operator': /\\-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*\\/]/,\n\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)[ful]*\\b/i\n});\n\nPrism.languages.insertBefore('c', 'string', {\n\t'macro': {\n\t\t// allow for multiline macro definitions\n\t\t// spaces after the # character compile fine with gcc\n\t\tpattern: /(^\\s*)#\\s*[a-z]+([^\\r\\n\\\\]|\\\\.|\\\\(?:\\r\\n?|\\n))*/im,\n\t\tlookbehind: true,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t// highlight the path of the include statement as a string\n\t\t\t'string': {\n\t\t\t\tpattern: /(#\\s*include\\s*)(<.+?>|(\"|')(\\\\?.)+?\\3)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t// highlight macro directives as keywords\n\t\t\t'directive': {\n\t\t\t\tpattern: /(#\\s*)\\b(define|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t}\n\t\t}\n\t},\n\t// highlight predefined macros as constants\n\t'constant': /\\b(__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|stdin|stdout|stderr)\\b/\n});\n\ndelete Prism.languages.c['class-name'];\ndelete Prism.languages.c['boolean'];\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-c.js","(function(Prism) {\n\n// Ignore comments starting with { to privilege string interpolation highlighting\nvar comment = /#(?!\\{).+/,\n    interpolation = {\n    \tpattern: /#\\{[^}]+\\}/,\n    \talias: 'variable'\n    };\n\nPrism.languages.coffeescript = Prism.languages.extend('javascript', {\n\t'comment': comment,\n\t'string': [\n\n\t\t// Strings are multiline\n\t\t{\n\t\t\tpattern: /'(?:\\\\?[^\\\\])*?'/,\n\t\t\tgreedy: true,\n\t\t},\n\n\t\t{\n\t\t\t// Strings are multiline\n\t\t\tpattern: /\"(?:\\\\?[^\\\\])*?\"/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': interpolation\n\t\t\t}\n\t\t}\n\t],\n\t'keyword': /\\b(and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n\t'class-member': {\n\t\tpattern: /@(?!\\d)\\w+/,\n\t\talias: 'variable'\n\t}\n});\n\nPrism.languages.insertBefore('coffeescript', 'comment', {\n\t'multiline-comment': {\n\t\tpattern: /###[\\s\\S]+?###/,\n\t\talias: 'comment'\n\t},\n\n\t// Block regexp can contain comments and interpolation\n\t'block-regex': {\n\t\tpattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n\t\talias: 'regex',\n\t\tinside: {\n\t\t\t'comment': comment,\n\t\t\t'interpolation': interpolation\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('coffeescript', 'string', {\n\t'inline-javascript': {\n\t\tpattern: /`(?:\\\\?[\\s\\S])*?`/,\n\t\tinside: {\n\t\t\t'delimiter': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\trest: Prism.languages.javascript\n\t\t}\n\t},\n\n\t// Block strings\n\t'multiline-string': [\n\t\t{\n\t\t\tpattern: /'''[\\s\\S]*?'''/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t{\n\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\tinterpolation: interpolation\n\t\t\t}\n\t\t}\n\t]\n\n});\n\nPrism.languages.insertBefore('coffeescript', 'keyword', {\n\t// Object property\n\t'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n});\n\ndelete Prism.languages.coffeescript['template-string'];\n\n}(Prism));\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-coffeescript.js","Prism.languages.cpp = Prism.languages.extend('c', {\n\t'keyword': /\\b(alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n\t'boolean': /\\b(true|false)\\b/,\n\t'operator': /[-+]{1,2}|!=?|<{1,2}=?|>{1,2}=?|\\->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|?\\||\\?|\\*|\\/|\\b(and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/\n});\n\nPrism.languages.insertBefore('cpp', 'keyword', {\n\t'class-name': {\n\t\tpattern: /(class\\s+)[a-z0-9_]+/i,\n\t\tlookbehind: true\n\t}\n});\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-cpp.js","Prism.languages.csharp = Prism.languages.extend('clike', {\n\t'keyword': /\\b(abstract|as|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|do|double|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|goto|if|implicit|in|int|interface|internal|is|lock|long|namespace|new|null|object|operator|out|override|params|private|protected|public|readonly|ref|return|sbyte|sealed|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|virtual|void|volatile|while|add|alias|ascending|async|await|descending|dynamic|from|get|global|group|into|join|let|orderby|partial|remove|select|set|value|var|where|yield)\\b/,\n\t'string': [\n\t\t/@(\"|')(\\1\\1|\\\\\\1|\\\\?(?!\\1)[\\s\\S])*\\1/,\n\t\t/(\"|')(\\\\?.)*?\\1/\n\t],\n\t'number': /\\b-?(0x[\\da-f]+|\\d*\\.?\\d+f?)\\b/i\n});\n\nPrism.languages.insertBefore('csharp', 'keyword', {\n\t'generic-method': {\n\t\tpattern: /[a-z0-9_]+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/i,\n\t\talias: 'function',\n\t\tinside: {\n\t\t\tkeyword: Prism.languages.csharp.keyword,\n\t\t\tpunctuation: /[<>(),.:]/\n\t\t}\n\t},\n\t'preprocessor': {\n\t\tpattern: /(^\\s*)#.*/m,\n\t\tlookbehind: true,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t// highlight preprocessor directives as keywords\n\t\t\t'directive': {\n\t\t\t\tpattern: /(\\s*#)\\b(define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t}\n\t\t}\n\t}\n});\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-csharp.js","Prism.languages.css = {\n\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\n\t'string': {\n\t\tpattern: /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n\t'important': /\\B!important\\b/i,\n\t'function': /[-a-z0-9]+(?=\\()/i,\n\t'punctuation': /[(){};:]/\n};\n\nPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'style': {\n\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.css,\n\t\t\talias: 'language-css'\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'style-attr': {\n\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'language-css'\n\t\t}\n\t}, Prism.languages.markup.tag);\n}\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-css.js","Prism.languages.git = {\n\t/*\n\t * A simple one line comment like in a git status command\n\t * For instance:\n\t * $ git status\n\t * # On branch infinite-scroll\n\t * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n\t * # and have 1 and 2 different commits each, respectively.\n\t * nothing to commit (working directory clean)\n\t */\n\t'comment': /^#.*/m,\n\n\t/*\n\t * Regexp to match the changed lines in a git diff output. Check the example below.\n\t */\n\t'deleted': /^[-–].*/m,\n\t'inserted': /^\\+.*/m,\n\n\t/*\n\t * a string (double and simple quote)\n\t */\n\t'string': /(\"|')(\\\\?.)*?\\1/m,\n\n\t/*\n\t * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n\t * For instance:\n\t * $ git add file.txt\n\t */\n\t'command': {\n\t\tpattern: /^.*\\$ git .*$/m,\n\t\tinside: {\n\t\t\t/*\n\t\t\t * A git command can contain a parameter starting by a single or a double dash followed by a string\n\t\t\t * For instance:\n\t\t\t * $ git diff --cached\n\t\t\t * $ git log -p\n\t\t\t */\n\t\t\t'parameter': /\\s(--|-)\\w+/m\n\t\t}\n\t},\n\n\t/*\n\t * Coordinates displayed in a git diff command\n\t * For instance:\n\t * $ git diff\n\t * diff --git file.txt file.txt\n\t * index 6214953..1d54a52 100644\n\t * --- file.txt\n\t * +++ file.txt\n\t * @@ -1 +1,2 @@\n\t * -Here's my tetx file\n\t * +Here's my text file\n\t * +And this is the second line\n\t */\n\t'coord': /^@@.*@@$/m,\n\n\t/*\n\t * Match a \"commit [SHA1]\" line in a git log output.\n\t * For instance:\n\t * $ git log\n\t * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n\t * Author: lgiraudel\n\t * Date:   Mon Feb 17 11:18:34 2014 +0100\n\t *\n\t *     Add of a new line\n\t */\n\t'commit_sha1': /^commit \\w{40}$/m\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-git.js","Prism.languages.groovy = Prism.languages.extend('clike', {\n\t'keyword': /\\b(as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n\t'string': [\n\t\t{\n\t\t\tpattern: /(\"\"\"|''')[\\W\\w]*?\\1|(\\$\\/)(\\$\\/\\$|[\\W\\w])*?\\/\\$/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(\"|'|\\/)(?:\\\\?.)*?\\1/,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'number': /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,\n\t'operator': {\n\t\tpattern: /(^|[^.])(~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n\t\tlookbehind: true\n\t},\n\t'punctuation': /\\.+|[{}[\\];(),:$]/\n});\n\nPrism.languages.insertBefore('groovy', 'string', {\n\t'shebang': {\n\t\tpattern: /#!.+/,\n\t\talias: 'comment'\n\t}\n});\n\nPrism.languages.insertBefore('groovy', 'punctuation', {\n\t'spock-block': /\\b(setup|given|when|then|and|cleanup|expect|where):/\n});\n\nPrism.languages.insertBefore('groovy', 'function', {\n\t'annotation': {\n\t\talias: 'punctuation',\n\t\tpattern: /(^|[^.])@\\w+/,\n\t\tlookbehind: true\n\t}\n});\n\n// Handle string interpolation\nPrism.hooks.add('wrap', function(env) {\n\tif (env.language === 'groovy' && env.type === 'string') {\n\t\tvar delimiter = env.content[0];\n\n\t\tif (delimiter != \"'\") {\n\t\t\tvar pattern = /([^\\\\])(\\$(\\{.*?\\}|[\\w\\.]+))/;\n\t\t\tif (delimiter === '$') {\n\t\t\t\tpattern = /([^\\$])(\\$(\\{.*?\\}|[\\w\\.]+))/;\n\t\t\t}\n\n\t\t\t// To prevent double HTML-encoding we have to decode env.content first\n\t\t\tenv.content = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n\n\t\t\tenv.content = Prism.highlight(env.content, {\n\t\t\t\t'expression': {\n\t\t\t\t\tpattern: pattern,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: Prism.languages.groovy\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tenv.classes.push(delimiter === '/' ? 'regex' : 'gstring');\n\t\t}\n\t}\n});\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-groovy.js","Prism.languages.http = {\n\t'request-line': {\n\t\tpattern: /^(POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b\\shttps?:\\/\\/\\S+\\sHTTP\\/[0-9.]+/m,\n\t\tinside: {\n\t\t\t// HTTP Verb\n\t\t\tproperty: /^(POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,\n\t\t\t// Path or query argument\n\t\t\t'attr-name': /:\\w+/\n\t\t}\n\t},\n\t'response-status': {\n\t\tpattern: /^HTTP\\/1.[01] [0-9]+.*/m,\n\t\tinside: {\n\t\t\t// Status, e.g. 200 OK\n\t\t\tproperty: {\n                pattern: /(^HTTP\\/1.[01] )[0-9]+.*/i,\n                lookbehind: true\n            }\n\t\t}\n\t},\n\t// HTTP header name\n\t'header-name': {\n        pattern: /^[\\w-]+:(?=.)/m,\n        alias: 'keyword'\n    }\n};\n\n// Create a mapping of Content-Type headers to language definitions\nvar httpLanguages = {\n\t'application/json': Prism.languages.javascript,\n\t'application/xml': Prism.languages.markup,\n\t'text/xml': Prism.languages.markup,\n\t'text/html': Prism.languages.markup\n};\n\n// Insert each content type parser that has its associated language\n// currently loaded.\nfor (var contentType in httpLanguages) {\n\tif (httpLanguages[contentType]) {\n\t\tvar options = {};\n\t\toptions[contentType] = {\n\t\t\tpattern: new RegExp('(content-type:\\\\s*' + contentType + '[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*', 'i'),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: httpLanguages[contentType]\n\t\t\t}\n\t\t};\n\t\tPrism.languages.insertBefore('http', 'header-name', options);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-http.js","(function(Prism) {\n\t// TODO:\n\t// - Add CSS highlighting inside <style> tags\n\t// - Add support for multi-line code blocks\n\t// - Add support for interpolation #{} and !{}\n\t// - Add support for tag interpolation #[]\n\t// - Add explicit support for plain text using |\n\t// - Add support for markup embedded in plain text\n\n\tPrism.languages.jade = {\n\n\t\t// Multiline stuff should appear before the rest\n\n\t\t// This handles both single-line and multi-line comments\n\t\t'comment': {\n\t\t\tpattern: /(^([\\t ]*))\\/\\/.*((?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t// All the tag-related part is in lookbehind\n\t\t// so that it can be highlighted by the \"tag\" pattern\n\t\t'multiline-script': {\n\t\t\tpattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\n\t\t// See at the end of the file for known filters\n\t\t'filter': {\n\t\t\tpattern: /(^([\\t ]*)):.+((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'filter-name': {\n\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'multiline-plain-text': {\n\t\t\tpattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'markup': {\n\t\t\tpattern: /(^[\\t ]*)<.+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.markup\n\t\t\t}\n\t\t},\n\t\t'doctype': {\n\t\t\tpattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t// This handle all conditional and loop keywords\n\t\t'flow-control': {\n\t\t\tpattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'each': {\n\t\t\t\t\tpattern: /^each .+? in\\b/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'keyword': /\\b(?:each|in)\\b/,\n\t\t\t\t\t\t'punctuation': /,/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'branch': {\n\t\t\t\t\tpattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n\t\t\t\t\talias: 'keyword'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'mixin': [\n\t\t\t// Declaration\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*)mixin .+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'keyword': /^mixin/,\n\t\t\t\t\t'function': /\\w+(?=\\s*\\(|\\s*$)/,\n\t\t\t\t\t'punctuation': /[(),.]/\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Usage\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*)\\+.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'name': {\n\t\t\t\t\t\tpattern: /^\\+\\w+/,\n\t\t\t\t\t\talias: 'function'\n\t\t\t\t\t},\n\t\t\t\t\t'rest': Prism.languages.javascript\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'script': {\n\t\t\tpattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\trest: Prism.languages.javascript\n\t\t\t}\n\t\t},\n\n\t\t'plain-text': {\n\t\t\tpattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'tag': {\n\t\t\tpattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attributes': [\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /&[^(]+\\([^)]+\\)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /\\([^)]+\\)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n\t\t\t\t\t\t\t'punctuation': /[!=(),]+/\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'punctuation': /:/\n\t\t\t}\n\t\t},\n\t\t'code': [\n\t\t\t{\n\t\t\t\tpattern: /(^[\\t ]*(?:-|!?=)).+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'punctuation': /[.\\-!=|]+/\n\t};\n\n\tvar filter_pattern = '(^([\\\\t ]*)):{{filter_name}}((?:\\\\r?\\\\n|\\\\r(?!\\\\n))(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';\n\n\t// Non exhaustive list of available filters and associated languages\n\tvar filters = [\n\t\t{filter:'atpl',language:'twig'},\n\t\t{filter:'coffee',language:'coffeescript'},\n\t\t'ejs',\n\t\t'handlebars',\n\t\t'hogan',\n\t\t'less',\n\t\t'livescript',\n\t\t'markdown',\n\t\t'mustache',\n\t\t'plates',\n\t\t{filter:'sass',language:'scss'},\n\t\t'stylus',\n\t\t'swig'\n\n\t];\n\tvar all_filters = {};\n\tfor (var i = 0, l = filters.length; i < l; i++) {\n\t\tvar filter = filters[i];\n\t\tfilter = typeof filter === 'string' ? {filter: filter, language: filter} : filter;\n\t\tif (Prism.languages[filter.language]) {\n\t\t\tall_filters['filter-' + filter.filter] = {\n\t\t\t\tpattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter), 'm'),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'filter-name': {\n\t\t\t\t\t\tpattern: /^:[\\w-]+/,\n\t\t\t\t\t\talias: 'variable'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages[filter.language]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tPrism.languages.insertBefore('jade', 'filter', all_filters);\n\n}(Prism));\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-jade.js","Prism.languages.java = Prism.languages.extend('clike', {\n\t'keyword': /\\b(abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,\n\t'number': /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp\\-]+\\b|\\b\\d*\\.?\\d+(?:e[+-]?\\d+)?[df]?\\b/i,\n\t'operator': {\n\t\tpattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.insertBefore('java','function', {\n\t'annotation': {\n\t\talias: 'punctuation',\n\t\tpattern: /(^|[^.])@\\w+/,\n\t\tlookbehind: true\n\t}\n});\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-java.js","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*\\*?|\\/|~|\\^|%|\\.{3}/\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t\talias: 'language-javascript'\n\t\t}\n\t});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-javascript.js","Prism.languages.json = {\n    'property': /\"(?:\\\\.|[^|\"])*\"(?=\\s*:)/ig,\n    'string': /\"(?!:)(?:\\\\.|[^|\"])*\"(?!:)/g,\n    'number': /\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?)\\b/g,\n    'punctuation': /[{}[\\]);,]/g,\n    'operator': /:/g,\n    'boolean': /\\b(true|false)\\b/gi,\n    'null': /\\bnull\\b/gi\n};\n\nPrism.languages.jsonp = Prism.languages.json;\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-json.js","(function(Prism) {\n\tvar funcPattern = /\\\\([^a-z()[\\]]|[a-z\\*]+)/i,\n\t    insideEqu = {\n\t\t    'equation-command': {\n\t\t\t    pattern: funcPattern,\n\t\t\t    alias: 'regex'\n\t\t    }\n\t    };\n\n\tPrism.languages.latex = {\n\t\t'comment': /%.*/m,\n\t\t// the verbatim environment prints whitespace to the document\n\t\t'cdata':  {\n\t\t\tpattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})([\\w\\W]*?)(?=\\\\end\\{\\2\\})/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t/*\n\t\t * equations can be between $ $ or \\( \\) or \\[ \\]\n\t\t * (all are multiline)\n\t\t */\n\t\t'equation': [\n\t\t\t{\n\t\t\t\tpattern: /\\$(?:\\\\?[\\w\\W])*?\\$|\\\\\\((?:\\\\?[\\w\\W])*?\\\\\\)|\\\\\\[(?:\\\\?[\\w\\W])*?\\\\\\]/,\n\t\t\t\tinside: insideEqu,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})([\\w\\W]*?)(?=\\\\end\\{\\2\\})/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: insideEqu,\n\t\t\t\talias: 'string'\n\t\t\t}\n\t\t],\n\t\t/*\n\t\t * arguments which are keywords or references are highlighted\n\t\t * as keywords\n\t\t */\n\t\t'keyword': {\n\t\t\tpattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'url': {\n\t\t\tpattern: /(\\\\url\\{)[^}]+(?=\\})/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t/*\n\t\t * section or chapter headlines are highlighted as bold so that\n\t\t * they stand out more\n\t\t */\n\t\t'headline': {\n\t\t\tpattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'class-name'\n\t\t},\n\t\t'function': {\n\t\t\tpattern: funcPattern,\n\t\t\talias: 'selector'\n\t\t},\n\t\t'punctuation': /[[\\]{}&]/\n\t};\n})(Prism);\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-latex.js","/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n\t'comment': [\n\t\t/\\/\\*[\\w\\W]*?\\*\\//,\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n\t\tinside: {\n\t\t\t'punctuation': /[:()]/\n\t\t}\n\t},\n\t// selectors and mixins are considered the same\n\t'selector': {\n\t\tpattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n\t\tinside: {\n\t\t\t// mixin parameters\n\t\t\t'variable': /@+[\\w-]+/\n\t\t}\n\t},\n\n\t'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n\t'punctuation': /[{}();:,]/,\n\t'operator': /[+\\-*\\/]/\n});\n\n// Invert function and punctuation positions\nPrism.languages.insertBefore('less', 'punctuation', {\n\t'function': Prism.languages.less.function\n});\n\nPrism.languages.insertBefore('less', 'property', {\n\t'variable': [\n\t\t// Variable declaration (the colon must be consumed!)\n\t\t{\n\t\t\tpattern: /@[\\w-]+\\s*:/,\n\t\t\tinside: {\n\t\t\t\t\"punctuation\": /:/\n\t\t\t}\n\t\t},\n\n\t\t// Variable usage\n\t\t/@@?[\\w-]+/\n\t],\n\t'mixin-usage': {\n\t\tpattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n\t\tlookbehind: true,\n\t\talias: 'function'\n\t}\n});\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-less.js","Prism.languages.markdown = Prism.languages.extend('markup', {});\nPrism.languages.insertBefore('markdown', 'prolog', {\n\t'blockquote': {\n\t\t// > ...\n\t\tpattern: /^>(?:[\\t ]*>)*/m,\n\t\talias: 'punctuation'\n\t},\n\t'code': [\n\t\t{\n\t\t\t// Prefixed by 4 spaces or 1 tab\n\t\t\tpattern: /^(?: {4}|\\t).+/m,\n\t\t\talias: 'keyword'\n\t\t},\n\t\t{\n\t\t\t// `code`\n\t\t\t// ``code``\n\t\t\tpattern: /``.+?``|`[^`\\n]+`/,\n\t\t\talias: 'keyword'\n\t\t}\n\t],\n\t'title': [\n\t\t{\n\t\t\t// title 1\n\t\t\t// =======\n\n\t\t\t// title 2\n\t\t\t// -------\n\t\t\tpattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,\n\t\t\talias: 'important',\n\t\t\tinside: {\n\t\t\t\tpunctuation: /==+$|--+$/\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// # title 1\n\t\t\t// ###### title 6\n\t\t\tpattern: /(^\\s*)#+.+/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'important',\n\t\t\tinside: {\n\t\t\t\tpunctuation: /^#+|#+$/\n\t\t\t}\n\t\t}\n\t],\n\t'hr': {\n\t\t// ***\n\t\t// ---\n\t\t// * * *\n\t\t// -----------\n\t\tpattern: /(^\\s*)([*-])([\\t ]*\\2){2,}(?=\\s*$)/m,\n\t\tlookbehind: true,\n\t\talias: 'punctuation'\n\t},\n\t'list': {\n\t\t// * item\n\t\t// + item\n\t\t// - item\n\t\t// 1. item\n\t\tpattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n\t\tlookbehind: true,\n\t\talias: 'punctuation'\n\t},\n\t'url-reference': {\n\t\t// [id]: http://example.com \"Optional title\"\n\t\t// [id]: http://example.com 'Optional title'\n\t\t// [id]: http://example.com (Optional title)\n\t\t// [id]: <http://example.com> \"Optional title\"\n\t\tpattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n\t\tinside: {\n\t\t\t'variable': {\n\t\t\t\tpattern: /^(!?\\[)[^\\]]+/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n\t\t\t'punctuation': /^[\\[\\]!:]|[<>]/\n\t\t},\n\t\talias: 'url'\n\t},\n\t'bold': {\n\t\t// **strong**\n\t\t// __strong__\n\n\t\t// Allow only one line break\n\t\tpattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /^\\*\\*|^__|\\*\\*$|__$/\n\t\t}\n\t},\n\t'italic': {\n\t\t// *em*\n\t\t// _em_\n\n\t\t// Allow only one line break\n\t\tpattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /^[*_]|[*_]$/\n\t\t}\n\t},\n\t'url': {\n\t\t// [example](http://example.com \"Optional title\")\n\t\t// [example] [id]\n\t\tpattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,\n\t\tinside: {\n\t\t\t'variable': {\n\t\t\t\tpattern: /(!?\\[)[^\\]]+(?=\\]$)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n\t\t\t}\n\t\t}\n\t}\n});\n\nPrism.languages.markdown['bold'].inside['url'] = Prism.util.clone(Prism.languages.markdown['url']);\nPrism.languages.markdown['italic'].inside['url'] = Prism.util.clone(Prism.languages.markdown['url']);\nPrism.languages.markdown['bold'].inside['italic'] = Prism.util.clone(Prism.languages.markdown['italic']);\nPrism.languages.markdown['italic'].inside['bold'] = Prism.util.clone(Prism.languages.markdown['bold']);\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-markdown.js","Prism.languages.markup = {\n\t'comment': /<!--[\\w\\W]*?-->/,\n\t'prolog': /<\\?[\\w\\W]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\w\\W]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[=>\"']/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-markup.js","Prism.languages.nginx = Prism.languages.extend('clike', {\n        'comment': {\n                pattern: /(^|[^\"{\\\\])#.*/,\n                lookbehind: true\n        },\n        'keyword': /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|server|events|location|include|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types)\\b/i,\n});\n\nPrism.languages.insertBefore('nginx', 'keyword', {\n        'variable': /\\$[a-z_]+/i\n});\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-nginx.js","/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n\nPrism.languages.php = Prism.languages.extend('clike', {\n\t'keyword': /\\b(and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,\n\t'constant': /\\b[A-Z0-9_]{2,}\\b/,\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t}\n});\n\n// Shell-like comments are matched after strings, because they are less\n// common than strings containing hashes...\nPrism.languages.insertBefore('php', 'class-name', {\n\t'shell-comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true,\n\t\talias: 'comment'\n\t}\n});\n\nPrism.languages.insertBefore('php', 'keyword', {\n\t'delimiter': /\\?>|<\\?(?:php)?/i,\n\t'variable': /\\$\\w+\\b/i,\n\t'package': {\n\t\tpattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /\\\\/\n\t\t}\n\t}\n});\n\n// Must be defined after the function pattern\nPrism.languages.insertBefore('php', 'operator', {\n\t'property': {\n\t\tpattern: /(->)[\\w]+/,\n\t\tlookbehind: true\n\t}\n});\n\n// Add HTML support of the markup language exists\nif (Prism.languages.markup) {\n\n\t// Tokenize all inline PHP blocks that are wrapped in <?php ?>\n\t// This allows for easy PHP + markup highlighting\n\tPrism.hooks.add('before-highlight', function(env) {\n\t\tif (env.language !== 'php') {\n\t\t\treturn;\n\t\t}\n\n\t\tenv.tokenStack = [];\n\n\t\tenv.backupCode = env.code;\n\t\tenv.code = env.code.replace(/(?:<\\?php|<\\?)[\\w\\W]*?(?:\\?>)/ig, function(match) {\n\t\t\tenv.tokenStack.push(match);\n\n\t\t\treturn '{{{PHP' + env.tokenStack.length + '}}}';\n\t\t});\n\t});\n\n\t// Restore env.code for other plugins (e.g. line-numbers)\n\tPrism.hooks.add('before-insert', function(env) {\n\t\tif (env.language === 'php') {\n\t\t\tenv.code = env.backupCode;\n\t\t\tdelete env.backupCode;\n\t\t}\n\t});\n\n\t// Re-insert the tokens after highlighting\n\tPrism.hooks.add('after-highlight', function(env) {\n\t\tif (env.language !== 'php') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, t; t = env.tokenStack[i]; i++) {\n\t\t\t// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns\n\t\t\tenv.highlightedCode = env.highlightedCode.replace('{{{PHP' + (i + 1) + '}}}', Prism.highlight(t, env.grammar, 'php').replace(/\\$/g, '$$$$'));\n\t\t}\n\n\t\tenv.element.innerHTML = env.highlightedCode;\n\t});\n\n\t// Wrap tokens in classes that are missing them\n\tPrism.hooks.add('wrap', function(env) {\n\t\tif (env.language === 'php' && env.type === 'markup') {\n\t\t\tenv.content = env.content.replace(/(\\{\\{\\{PHP[0-9]+\\}\\}\\})/g, \"<span class=\\\"token php\\\">$1</span>\");\n\t\t}\n\t});\n\n\t// Add the rules before all others\n\tPrism.languages.insertBefore('php', 'comment', {\n\t\t'markup': {\n\t\t\tpattern: /<[^?]\\/?(.*?)>/,\n\t\t\tinside: Prism.languages.markup\n\t\t},\n\t\t'php': /\\{\\{\\{PHP[0-9]+\\}\\}\\}/\n\t});\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-php.js","Prism.languages.properties = {\n\t'comment': /^[ \\t]*[#!].*$/m,\n\t'attr-value': {\n\t\tpattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|.)+/m,\n\t\tlookbehind: true\n\t},\n\t'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[ =:]| )/m,\n\t'punctuation': /[=:]/\n};\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-properties.js","Prism.languages.python= {\n\t'triple-quoted-string': {\n\t\tpattern: /\"\"\"[\\s\\S]+?\"\"\"|'''[\\s\\S]+?'''/,\n\t\talias: 'string'\n\t},\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true\n\t},\n\t'string': {\n\t\tpattern: /(\"|')(?:\\\\\\\\|\\\\?[^\\\\\\r\\n])*?\\1/,\n\t\tgreedy: true\n\t},\n\t'function' : {\n\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_][a-zA-Z0-9_]*(?=\\()/g,\n\t\tlookbehind: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\bclass\\s+)[a-z0-9_]+/i,\n\t\tlookbehind: true\n\t},\n\t'keyword' : /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|with|yield)\\b/,\n\t'boolean' : /\\b(?:True|False)\\b/,\n\t'number' : /\\b-?(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n\t'operator' : /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,\n\t'punctuation' : /[{}[\\];(),.:]/\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-python.js","Prism.languages.scss = Prism.languages.extend('css', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,\n\t\tlookbehind: true\n\t},\n\t'atrule': {\n\t\tpattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t// url, compassified\n\t'url': /(?:[-a-z]+-)*url(?=\\()/i,\n\t// CSS selector regex is not appropriate for Sass\n\t// since there can be lot more things (var, @ directive, nesting..)\n\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\n\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n\t// can \"pass\" as a selector- e.g: proper#{$erty})\n\t// this one was hard to do, so please be careful if you edit this one :)\n\t'selector': {\n\t\t// Initial look-ahead is used to prevent matching of blank selectors\n\t\tpattern: /(?=\\S)[^@;\\{\\}\\(\\)]?([^@;\\{\\}\\(\\)]|&|#\\{\\$[-_\\w]+\\})+(?=\\s*\\{(\\}|\\s|[^\\}]+(:|\\{)[^\\}]+))/m,\n\t\tinside: {\n\t\t\t'parent': {\n\t\t\t\tpattern: /&/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'placeholder': /%[-_\\w]+/,\n\t\t\t'variable': /\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('scss', 'atrule', {\n\t'keyword': [\n\t\t/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,\n\t\t{\n\t\t\tpattern: /( +)(?:from|through)(?= )/,\n\t\t\tlookbehind: true\n\t\t}\n\t]\n});\n\nPrism.languages.scss.property = {\n\tpattern: /(?:[\\w-]|\\$[-_\\w]+|#\\{\\$[-_\\w]+\\})+(?=\\s*:)/i,\n\tinside: {\n\t\t'variable': /\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/\n\t}\n};\n\nPrism.languages.insertBefore('scss', 'important', {\n\t// var and interpolated vars\n\t'variable': /\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/\n});\n\nPrism.languages.insertBefore('scss', 'function', {\n\t'placeholder': {\n\t\tpattern: /%[-_\\w]+/,\n\t\talias: 'selector'\n\t},\n\t'statement': {\n\t\tpattern: /\\B!(?:default|optional)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'null': /\\bnull\\b/,\n\t'operator': {\n\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.scss['atrule'].inside.rest = Prism.util.clone(Prism.languages.scss);\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-scss.js","(function (Prism) {\n\tvar inside = {\n\t\t'url': /url\\(([\"']?).*?\\1\\)/i,\n\t\t'string': /(\"|')(?:[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*?\\1/,\n\t\t'interpolation': null, // See below\n\t\t'func': null, // See below\n\t\t'important': /\\B!(?:important|optional)\\b/i,\n\t\t'keyword': {\n\t\t\tpattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'hexcode': /#[\\da-f]{3,6}/i,\n\t\t'number': /\\b\\d+(?:\\.\\d+)?%?/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'operator': [\n\t\t\t// We want non-word chars around \"-\" because it is\n\t\t\t// accepted in property names.\n\t\t\t/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n\t\t],\n\t\t'punctuation': /[{}()\\[\\];:,]/\n\t};\n\n\tinside['interpolation'] = {\n\t\tpattern: /\\{[^\\r\\n}:]+\\}/,\n\t\talias: 'variable',\n\t\tinside: Prism.util.clone(inside)\n\t};\n\tinside['func'] = {\n\t\tpattern: /[\\w-]+\\([^)]*\\).*/,\n\t\tinside: {\n\t\t\t'function': /^[^(]+/,\n\t\t\trest: Prism.util.clone(inside)\n\t\t}\n\t};\n\n\tPrism.languages.stylus = {\n\t\t'comment': {\n\t\t\tpattern: /(^|[^\\\\])(\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'atrule-declaration': {\n\t\t\tpattern: /(^\\s*)@.+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'atrule': /^@[\\w-]+/,\n\t\t\t\trest: inside\n\t\t\t}\n\t\t},\n\t\t'variable-declaration': {\n\t\t\tpattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'variable': /^\\S+/,\n\t\t\t\trest: inside\n\t\t\t}\n\t\t},\n\n\t\t'statement': {\n\t\t\tpattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tkeyword: /^\\S+/,\n\t\t\t\trest: inside\n\t\t\t}\n\t\t},\n\n\t\t// A property/value pair cannot end with a comma or a brace\n\t\t// It cannot have indented content unless it ended with a semicolon\n\t\t'property-declaration': {\n\t\t\tpattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'property': {\n\t\t\t\t\tpattern: /^[^\\s:]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'interpolation': inside.interpolation\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trest: inside\n\t\t\t}\n\t\t},\n\n\n\n\t\t// A selector can contain parentheses only as part of a pseudo-element\n\t\t// It can span multiple lines.\n\t\t// It must end with a comma or an accolade or have indented content.\n\t\t'selector': {\n\t\t\tpattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': inside.interpolation,\n\t\t\t\t'punctuation': /[{},]/\n\t\t\t}\n\t\t},\n\n\t\t'func': inside.func,\n\t\t'string': inside.string,\n\t\t'interpolation': inside.interpolation,\n\t\t'punctuation': /[{}()\\[\\];:.]/\n\t};\n}(Prism));\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-stylus.js","Prism.languages.typescript = Prism.languages.extend('javascript', {\n\t'keyword': /\\b(break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|package|private|protected|public|return|set|static|super|switch|this|throw|true|try|typeof|var|void|while|with|yield|module|declare|constructor|string|Function|any|number|boolean|Array|enum)\\b/\n});\n\nPrism.languages.ts = Prism.languages.typescript;\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-typescript.js","Prism.languages.wiki = Prism.languages.extend('markup', {\n\t'block-comment': {\n\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\tlookbehind: true,\n\t\talias: 'comment'\n\t},\n\t'heading': {\n\t\tpattern: /^(=+).+?\\1/m,\n\t\tinside: {\n\t\t\t'punctuation': /^=+|=+$/,\n\t\t\t'important': /.+/\n\t\t}\n\t},\n\t'emphasis': {\n\t\t// TODO Multi-line\n\t\tpattern: /('{2,5}).+?\\1/,\n\t\tinside: {\n\t\t\t'bold italic': {\n\t\t\t\tpattern: /(''''').+?(?=\\1)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'bold': {\n\t\t\t\tpattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'italic': {\n\t\t\t\tpattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t'punctuation': /^''+|''+$/\n\t\t}\n\t},\n\t'hr': {\n\t\tpattern: /^-{4,}/m,\n\t\talias: 'punctuation'\n\t},\n\t'url': [\n\t\t/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i,\n\t\t/\\[\\[.+?\\]\\]|\\[.+?\\]/\n\t],\n\t'variable': [\n\t\t/__[A-Z]+__/,\n\t\t// FIXME Nested structures should be handled\n\t\t// {{formatnum:{{#expr:{{{3}}}}}}}\n\t\t/\\{{3}.+?\\}{3}/,\n\t\t/\\{\\{.+?}}/\n\t],\n\t'symbol': [\n\t\t/^#redirect/im,\n\t\t/~{3,5}/\n\t],\n\t// Handle table attrs:\n\t// {|\n\t// ! style=\"text-align:left;\"| Item\n\t// |}\n\t'table-tag': {\n\t\tpattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'table-bar': {\n\t\t\t\tpattern: /\\|$/,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\trest: Prism.languages.markup['tag'].inside\n\t\t}\n\t},\n\t'punctuation': /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n});\n\nPrism.languages.insertBefore('wiki', 'tag', {\n\t// Prevent highlighting inside <nowiki>, <source> and <pre> tags\n\t'nowiki': {\n\t\tpattern: /<(nowiki|pre|source)\\b[\\w\\W]*?>[\\w\\W]*?<\\/\\1>/i,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /<(?:nowiki|pre|source)\\b[\\w\\W]*?>|<\\/(?:nowiki|pre|source)>/i,\n\t\t\t\tinside: Prism.languages.markup['tag'].inside\n\t\t\t}\n\t\t}\n\t}\n});\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-wiki.js","Prism.languages.yaml = {\n\t'scalar': {\n\t\tpattern: /([\\-:]\\s*(![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\3[^\\r\\n]+)*)/,\n\t\tlookbehind: true,\n\t\talias: 'string'\n\t},\n\t'comment': /#.*/,\n\t'key': {\n\t\tpattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n\t\tlookbehind: true,\n\t\talias: 'atrule'\n\t},\n\t'directive': {\n\t\tpattern: /(^[ \\t]*)%.+/m,\n\t\tlookbehind: true,\n\t\talias: 'important'\n\t},\n\t'datetime': {\n\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(\\d{4}-\\d\\d?-\\d\\d?([tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(\\.\\d*)?[ \\t]*(Z|[-+]\\d\\d?(:\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(:\\d{2}(\\.\\d*)?)?)(?=[ \\t]*($|,|]|}))/m,\n\t\tlookbehind: true,\n\t\talias: 'number'\n\t},\n\t'boolean': {\n\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(true|false)[ \\t]*(?=$|,|]|})/im,\n\t\tlookbehind: true,\n\t\talias: 'important'\n\t},\n\t'null': {\n\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(null|~)[ \\t]*(?=$|,|]|})/im,\n\t\tlookbehind: true,\n\t\talias: 'important'\n\t},\n\t'string': {\n\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')(?=[ \\t]*($|,|]|}))/m,\n\t\tlookbehind: true\n\t},\n\t'number': {\n\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)[+\\-]?(0x[\\da-f]+|0o[0-7]+|(\\d+\\.?\\d*|\\.?\\d+)(e[\\+\\-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n\t\tlookbehind: true\n\t},\n\t'tag': /![^\\s]+/,\n\t'important': /[&*][\\w]+/,\n\t'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/components/prism-yaml.js","import { HTMLElement } from './HTMLElement';\r\n\r\nexport class TextareaEditor extends HTMLElement{\r\n\r\n\t/**\r\n\t * Represents TextareaEditor\r\n\t *\r\n\t * @constructor\r\n\t * @param {String} className\r\n\t * @param {Element} parent\r\n\t */\r\n\tconstructor(className,parent){\r\n\t\tsuper('textarea',className,parent);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the initialized editor element\r\n\t *\r\n\t * @returns {Element} - element of the editor\r\n\t */\r\n\tget getEditor(){\r\n\t\treturn this._element;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the content of the editor\r\n\t *\r\n\t * @returns {String} - the content of editor\r\n\t */\r\n\tgetContent(){\r\n\t\treturn this._element.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the content of the editor\r\n\t *\r\n\t * @param {String} content - content for the editor\r\n\t */\r\n\tsetContent(content){\r\n\t\tthis._element.value = content;\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative for getContent()\r\n\t * @see getContent\r\n\t *\r\n\t * @returns {String} - the content of editor\r\n\t */\r\n\tgetMarkdown(){\r\n\t\treturn this.getContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative for setContent()\r\n\t * @see setContent\r\n\t *\r\n\t * @param {String} markdown - content for the editor\r\n\t */\r\n\tsetMarkdown(markdown){\r\n\t\tthis.setContent(markdown);\r\n\t}\r\n\r\n\t/**\r\n\t * Append the given value to the content of the editor\r\n\t *\r\n\t * @param {String} content - additional content for the editor\r\n\t */\r\n\tappendContent(content){\r\n\t\tthis._element.value = this._editor.value + content;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepend the given value to the content of the editor\r\n\t *\r\n\t * @param {String} content - additional content for the editor\r\n\t */\r\n\tprependContent(content){\r\n\t\tthis._element.value = content + this._editor.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Refresh preview automatically if the editor content is changed\r\n\t *\r\n\t * @param {Element|Array} element - the element or array of elements that will contain the compiled html content\r\n\t * @param {Converter} converter - the converter that converts the markdown to html\r\n\t */\r\n\tconvertMarkdownToHtmlEventListener(element, converter){\r\n\t\tthis.addEventListener('input',()=>{\r\n\t\t\tlet html = converter.makeHtml(this.getContent());\r\n\t\t\tif(element instanceof Array) {\r\n\t\t\t\tfor(let e of element) {\r\n\t\t\t\t\te.innerHTML = html;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\telement.innerHTML = html;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Copy content of editor to hidden input automatically\r\n\t *\r\n\t * @param {Element} element - this element gets the content of the editor\r\n\t */\r\n\tcopyMarkdownContentToHiddenInputEventListener(element){\r\n\t\tthis.addEventListener('input',() => element.innerHTML = this.getContent());\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {string}\r\n\t */\r\n\tgetSelectedContent(){\r\n\t\tlet start = this._element.selectionStart;\r\n\t\tlet end = this._element.selectionEnd;\r\n\t\treturn this._element.value.substring(start,end);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param content\r\n\t */\r\n\tsetSelectedContent(content){\r\n\t\tlet start = this._element.selectionStart;\r\n\t\tlet end = this._element.selectionEnd;\r\n\t\tthis._element.value = this._element.value.substring(0,start) + content +  this._element.value.substring(end);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @returns {Number}\r\n\t */\r\n\tgetCursorPosition(){\r\n\t\treturn this._element.selectionStart;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Number} position\r\n\t */\r\n\tsetCursorPosition(position){\r\n\t\tthis._element.selectionStart = position;\r\n\t\tthis._element.selectionEnd = position;\r\n\t}\r\n\r\n\t/**\r\n\t * Process the content by triggering the input event\r\n\t */\r\n\tprocessContent(){\r\n\t\tlet e = new Event('input');\r\n\t\tthis._element.dispatchEvent(e);\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/TextareaEditor.js","export class HTMLElement{\r\n\r\n\t/**\r\n\t * Represents a HTMLElement\r\n\t *\r\n\t * @constructor\r\n\t * @param {String} type - the string value of the html tag\r\n\t * @param {String} className - the name of the html element\r\n\t * @param {Element} parent - the parent element of the created element\r\n\t * @param {Object} params - additional parameters for the created element\r\n\t */\r\n\tconstructor(type, className, parent, params = {}){\r\n\t\tthis.init(type, className, parent, params);\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize HTML element\r\n\t * Get a type, a className and additional params to create a html element\r\n\t * and append the created element to the parent\r\n\t *\r\n\t * @param {String} type - the string value of the html tag\r\n\t * @param {String} className - the name of the html element\r\n\t * @param {Element} parent - the parent element of the created element\r\n\t * @param {Object} params - additional parameters for the created element\r\n\t */\r\n\tinit(type, className, parent, params){\r\n\t\t// Create element\r\n\t\tlet element = HTMLElement.createElement(type,className,params);\r\n\r\n\t\t// Append element to parent\r\n\t\tHTMLElement.appendElementToParent(element,parent);\r\n\r\n\t\t// Get the element from the dom\r\n\t\tthis.setElementByClassName(className);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the element\r\n\t *\r\n\t * @returns {Element} - the element\r\n\t */\r\n\tget getElement(){\r\n\t\treturn this._element;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the element\r\n\t *\r\n\t * @param {Element} element - the new value of the element\r\n\t */\r\n\tset setElement(element){\r\n\t\tthis._element = element;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the element by the class name with querySelector\r\n\t *\r\n\t * @param {String} className - the string value of the class name without dot\r\n\t */\r\n\tsetElementByClassName(className){\r\n\t\tthis._element = document.querySelector(`.${className}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Create an eventListener for the html element\r\n\t *\r\n\t * @param {String} event - the string value of the event name\r\n\t * @param {Function} callback - the function that should be run when the event is fired\r\n\t */\r\n\taddEventListener(event,callback){\r\n\t\tthis._element.addEventListener(event,callback);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new element of given type with class name and parameters\r\n\t *\r\n\t * @param {String} type - the string value of type of the new element\r\n\t * @param {String} className - the string value of the class attribute of the element without dot\r\n\t * @param {Object} params - parameter object to set attribute of the element\r\n\t * @returns {Element} - return a new element\r\n\t */\r\n\tstatic createElement(type,className,params){\r\n\t\tlet element = document.createElement(type);\r\n\t\telement.className = className;\r\n\r\n\t\tfor(let key of Object.keys(params)) {\r\n\t\t\telement[key] = params[key];\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Append the element to the parent element as a child\r\n\t *\r\n\t * @param {Element} element - the element that will be appended to the parent\r\n\t * @param {Element} parent - the parent element that will contain the given element\r\n\t */\r\n\tstatic appendElementToParent(element,parent){\r\n\t\tparent.appendChild(element);\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/HTMLElement.js","import { HTMLElement } from './HTMLElement';\r\n\r\nexport class Preview extends HTMLElement{\r\n\r\n\t/**\r\n\t * Represents Preview\r\n\t *\r\n\t * @constructor\r\n\t * @param className\r\n\t * @param parent\r\n\t */\r\n\tconstructor(className,parent){\r\n\t\tsuper('div',className,parent);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the preview element\r\n\t *\r\n\t * @returns {Element} - the preview element\r\n\t */\r\n\tget getPreview(){\r\n\t\treturn this._element;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Preview.js","import * as Mousetrap from 'mousetrap';\r\nimport 'mousetrap/plugins/global-bind/mousetrap-global-bind';\r\n\r\nexport class UserInteraction{\r\n\r\n\t/**\r\n\t * Represents UserInteraction\r\n\t *\r\n\t * @constructor\r\n\t * @param {Element} element\r\n\t */\r\n\tconstructor(element = null){\r\n\t\tthis._mousetrap = new Mousetrap.default(element);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param key\r\n\t * @param callback\r\n\t */\r\n\tkeyboardEvent(key,callback){\r\n\t\tthis._mousetrap.bind(key,callback);\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param key\r\n\t * @param callback\r\n\t */\r\n\tkeyboardEventGlobal(key,callback){\r\n\t\tthis._mousetrap.bindGlobal(key,callback);\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/UserInteraction.js","/*global define:false */\n/**\n * Copyright 2016 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.0\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n        _MAP[i + 96] = i;\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n\n\n\n// WEBPACK FOOTER //\n// ./~/mousetrap/mousetrap.js","/**\n * adds a bindGlobal method to Mousetrap that allows you to\n * bind specific keyboard shortcuts that will still work\n * inside a text input field\n *\n * usage:\n * Mousetrap.bindGlobal('ctrl+s', _saveChanges);\n */\n/* global Mousetrap:true */\n(function(Mousetrap) {\n    var _globalCallbacks = {};\n    var _originalStopCallback = Mousetrap.prototype.stopCallback;\n\n    Mousetrap.prototype.stopCallback = function(e, element, combo, sequence) {\n        var self = this;\n\n        if (self.paused) {\n            return true;\n        }\n\n        if (_globalCallbacks[combo] || _globalCallbacks[sequence]) {\n            return false;\n        }\n\n        return _originalStopCallback.call(self, e, element, combo);\n    };\n\n    Mousetrap.prototype.bindGlobal = function(keys, callback, action) {\n        var self = this;\n        self.bind(keys, callback, action);\n\n        if (keys instanceof Array) {\n            for (var i = 0; i < keys.length; i++) {\n                _globalCallbacks[keys[i]] = true;\n            }\n            return;\n        }\n\n        _globalCallbacks[keys] = true;\n    };\n\n    Mousetrap.init();\n}) (Mousetrap);\n\n\n\n// WEBPACK FOOTER //\n// ./~/mousetrap/plugins/global-bind/mousetrap-global-bind.js","import { UserInteraction } from'./UserInteraction';\r\n\r\nexport class EditorUserInteraction extends UserInteraction{\r\n\r\n\t/**\r\n\t * Represents EditorUserInteraction\r\n\t *\r\n\t * @constructor\r\n\t * @param {TextareaEditor} editor\r\n\t */\r\n\tconstructor(editor){\r\n\t\tsuper(editor.getEditor);\r\n\t\tthis._editor = editor;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param key\r\n\t * @param prefix\r\n\t * @param suffix\r\n\t */\r\n\tinsertKeyboardEvent(key, prefix = '', suffix = ''){\r\n\t\tthis.keyboardEvent(key, (e,combo) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tlet actualPosition = this._editor.getCursorPosition();\r\n\t\t\tlet value = this._editor.getSelectedContent();\r\n\t\t\tthis._editor.setSelectedContent(prefix+value+suffix);\r\n\r\n\t\t\tlet position = value.length == 0 ? actualPosition+prefix.length : actualPosition+(prefix+value+suffix).length;\r\n\t\t\tthis._editor.setCursorPosition(position);\r\n\r\n\t\t\tthis._editor.processContent();\r\n\t\t});\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/EditorUserInteraction.js"],"sourceRoot":""}