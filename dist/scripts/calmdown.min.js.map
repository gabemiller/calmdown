{"version":3,"sources":["webpack:///Calmdown.min.js","webpack:///webpack/bootstrap 9442687fa6a6b257018a","webpack:///./src/js/Calmdown.js","webpack:///./src/js/Config.js","webpack:///./src/js/ShowdownConverter.js","webpack:///./~/showdown/dist/showdown.js","webpack:///./src/js/TextareaEditor.js","webpack:///./src/js/HTMLElement.js","webpack:///./src/js/Preview.js","webpack:///./~/prismjs/prism.js"],"names":["Calmdown","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","default","_classCallCheck","instance","Constructor","TypeError","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","protoProps","staticProps","_Config","_ShowdownConverter","_TextareaEditor","_Preview","_HTMLElement","_prismjs","Prism","arguments","undefined","this","setDefaults","init","settings","assign","CONFIG","calmdown","document","querySelector","selector","codeHighlighter","initCodeHightlight","initConverter","initEditor","initPreview","initHiddenHtmlInput","initHiddenMarkdownInput","initEventListeners","triggerEvents","className","codeHighlightStyle","htmlInputSelector","htmlInputElement","HTMLElement","name","getElement","markdownInputSelector","markdownInputElement","converter","ShowdownConverter","editor","TextareaEditor","editorSelector","getEditor","preview","Preview","previewSelector","convertMarkdownToHtmlEventListener","getPreview","processContent","getContent","content","setContent","editorType","_showdown","showdown","flavor","_converter","Converter","setFlavor","_codeHighlighter","markdown","html","makeHtml","addCodeHighlighting","div","createElement","innerHTML","codeList","getElementsByTagName","highlightElement","get","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","constructor","getDefaultOpts","simple","defaultOptions","omitExtraWLInCodeBlocks","defaultValue","describe","type","noHeaderId","prefixHeaderId","ghCompatibleHeaderId","headerLevelStart","parseImgDimensions","simplifiedAutoLink","excludeTrailingPunctuationFromURLs","literalMidWordUnderscores","strikethrough","tables","tablesHeaderId","ghCodeBlocks","tasklists","smoothLivePreview","smartIndentationFix","description","disableForced4SpacesIndentedSublists","simpleLineBreaks","requireSpaceBeforeHeadingText","ghMentions","JSON","parse","stringify","ret","opt","allOptionsOn","options","validate","extension","errMsg","valid","error","helper","isArray","baseMsg","ext","isString","toLowerCase","isUndefined","listeners","filter","regex","ln","RegExp","replace","escapeCharactersCallback","wholeMatch","m1","charCodeToEscape","charCodeAt","parsers","extensions","globalOptions","github","vanilla","allOn","setOption","getOption","getOptions","resetOptions","Error","preset","option","getFlavor","getFlavorOptions","getDefaultOptions","subParser","func","stdExtName","validExtension","getAllExtensions","removeExtension","resetExtensions","validateExtension","console","warn","a","String","isFunction","getType","toString","forEach","callback","Array","s","escapeCharacters","text","charsToEscape","afterBackslash","regexString","rgxFindMatchPos","str","left","right","flags","t","start","end","f","g","indexOf","x","l","pos","exec","test","lastIndex","index","match","push","matchRecursiveRegExp","matchPos","results","slice","replaceRecursiveRegExp","replacement","repStr","finalStr","lng","bits","join","msg","alert","log","converterOptions","_constructor","gOpt","_parseExtension","legacyExtensionLoading","validExt","langExtensions","outputModifiers","listen","rTrimInputText","rsp","rgx","setConvFlavor","_dispatch","evtName","globals","ei","nText","gHtmlBlocks","gHtmlMdBlocks","gHtmlSpans","gUrls","gTitles","gDimensions","gListLevel","hashLinkCounts","addExtension","useExtension","extensionName","splice","ii","language","output","writeAnchorTag","m2","m3","m4","m5","m6","m7","linkText","linkId","url","title","search","result","wm","st","escape","mentions","username","replaceLink","link","trailingPunctuation","lnkTxt","append","replaceMail","mail","unescapedStr","simpleURLRegex","simpleURLRegex2","delimUrlRegex","simpleMailRegex","delimMailRegex","bq","pre","pattern","codeblock","nextChar","leadingText","numSpaces","addr","encode","ch","Math","floor","random","r","tag","blockText","blockTags","repFunc","txt","config","matches","headerId","escapedId","ghHeaderId","prefixHeader","isNaN","parseInt","setextRegexH1","setextRegexH2","spanGamut","hID","hLevel","hashBlock","matchFound","atxStyle","span","header","writeImageTag","altText","width","height","gDims","inlineRegExp","referenceRegExp","processListItems","listStr","trimTrailing","isParagraphed","taskbtn","checked","trim","item","bulletStyle","otp","wm2","parseConsecutiveLists","list","listType","olRgx","ulRgx","counterRxg","parseCL","grafs","split","grafsOut","grafsOutIt","codeFlag","delim","$1","num","$2","re","blankLines","parseStyles","sLine","parseHeaders","style","tableHeaderId","parseCells","cell","subText","buildTable","headers","cells","tb","tblLgn","tableRgx","rawTable","tableLines","rawHeaders","map","rawStyles","rawCells","styles","shift","row","charCodeToReplace","fromCharCode","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_HTMLElement2","parent","getPrototypeOf","_element","_editor","element","_this2","addEventListener","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","e","err","return","_this3","Event","dispatchEvent","params","appendElementToParent","setElementByClassName","event","closure","set","keys","appendChild","global","_self","window","WorkerGlobalScope","lang","uniqueId","_","util","tokens","Token","alias","o","objId","clone","v","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","newToken","token","DFS","visited","plugins","highlightAll","async","env","hooks","run","elements","querySelectorAll","parentNode","nodeName","code","textContent","Worker","worker","filename","onmessage","evt","highlightedCode","data","postMessage","immediateClose","highlight","tokenize","strarr","rest","tokenloop","patterns","j","lookbehind","greedy","lookbehindLength","source","delNum","from","to","k","len","after","args","wrapped","apply","all","add","callbacks","matchedStr","classes","attributes","aliases","message","close","script","currentScript","pop","src","hasAttribute","readyState","requestAnimationFrame","setTimeout","markup","comment","prolog","doctype","cdata","punctuation","namespace","attr-value","attr-name","entity","xml","mathml","svg","css","atrule","rule","string","property","important","function","style-attr","clike","class-name","keyword","boolean","number","operator","javascript","template-string","interpolation","interpolation-punctuation","js","fileHighlight","Extensions","py","rb","ps1","psm1","sh","bat","h","tex","getAttribute","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send"],"mappings":"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","file":"Calmdown.min.js","sourcesContent":["var Calmdown =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t//import * as hljs from 'highlight.js';\n\t\n\t\n\tvar _Config = __webpack_require__(2);\n\t\n\tvar _ShowdownConverter = __webpack_require__(3);\n\t\n\tvar _TextareaEditor = __webpack_require__(5);\n\t\n\tvar _Preview = __webpack_require__(7);\n\t\n\tvar _HTMLElement = __webpack_require__(6);\n\t\n\tvar _prismjs = __webpack_require__(8);\n\t\n\tvar Prism = _interopRequireWildcard(_prismjs);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Calmdown = function () {\n\t\n\t\t/**\r\n\t  * Represents Calmdown\r\n\t  *\r\n\t  * @constructor\r\n\t  * @param {Object} settings\r\n\t  */\n\t\tfunction Calmdown() {\n\t\t\tvar settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t\t\t_classCallCheck(this, Calmdown);\n\t\n\t\t\tthis.setDefaults();\n\t\t\tthis.init();\n\t\t}\n\t\n\t\t/**\r\n\t  * Set the default values for the Calmdown properties\r\n\t  *\r\n\t  * @param {Object} settings\r\n\t  */\n\t\n\t\n\t\t_createClass(Calmdown, [{\n\t\t\tkey: 'setDefaults',\n\t\t\tvalue: function setDefaults(settings) {\n\t\t\t\tthis.settings = Object.assign(_Config.CONFIG, settings);\n\t\t\t\tthis.calmdown = document.querySelector('.' + this.settings.selector);\n\t\t\t\t//this.codeHighlighter = hljs;\n\t\t\t\tthis.codeHighlighter = Prism;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize Calmdown\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'init',\n\t\t\tvalue: function init() {\n\t\t\t\tthis.initCodeHightlight();\n\t\t\t\tthis.initConverter();\n\t\t\t\tthis.initEditor();\n\t\t\t\tthis.initPreview();\n\t\t\t\tthis.initHiddenHtmlInput();\n\t\t\t\tthis.initHiddenMarkdownInput();\n\t\t\t\tthis.initEventListeners();\n\t\t\t\tthis.triggerEvents();\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize code higlighting\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initCodeHightlight',\n\t\t\tvalue: function initCodeHightlight() {\n\t\t\t\tthis.calmdown.className += ' ' + this.settings.codeHighlightStyle;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize hidden html input\r\n\t   *\r\n\t   * This textarea value can be sent through some http methods\r\n\t   * to the server for further processing.\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initHiddenHtmlInput',\n\t\t\tvalue: function initHiddenHtmlInput() {\n\t\t\t\tif (this.settings.htmlInputSelector != null) {\n\t\t\t\t\tthis.htmlInputElement = new _HTMLElement.HTMLElement('textarea', this.settings.htmlInputSelector, this.calmdown, {\n\t\t\t\t\t\tname: this.settings.htmlInputSelector\n\t\t\t\t\t}).getElement;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize hidden markdown input\r\n\t   *\r\n\t   * This textarea value can be sent through some http methods\r\n\t   * to the server for further processing.\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initHiddenMarkdownInput',\n\t\t\tvalue: function initHiddenMarkdownInput() {\n\t\t\t\tif (this.settings.markdownInputSelector != null) {\n\t\t\t\t\tthis.markdownInputElement = new _HTMLElement.HTMLElement('textarea', this.settings.markdownInputSelector, this.calmdown, {\n\t\t\t\t\t\tname: this.settings.markdownInputSelector\n\t\t\t\t\t}).getElement;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize markdown converter\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initConverter',\n\t\t\tvalue: function initConverter() {\n\t\t\t\tthis.converter = new _ShowdownConverter.ShowdownConverter(this.codeHighlighter);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize editor area\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initEditor',\n\t\t\tvalue: function initEditor() {\n\t\t\t\tthis.editor = new _TextareaEditor.TextareaEditor(this.settings.editorSelector, this.calmdown);\n\t\t\t\tthis.editor.getEditor.value = '```html \\n<div class=\"hello\">Hello, World!</div> \\n```\\n';\n\t\t\t\tthis.editor.getEditor.value += '```javascript \\nconsole.log(\"Hello, World!\"); \\n```\\n';\n\t\t\t\tthis.editor.getEditor.value += '```java \\npublic void static main(){\\t\\t\\n\\tSystem.out.println(\"Hello, World!\");\\n}\\n```\\n';\n\t\t\t\tthis.editor.getEditor.value += '```php\\n<?php\\t\\t\\n\\techo \"Hello, World!\";\\n```\\n';\n\t\t\t\tthis.editor.getEditor.value += '```css \\n.hello {\\n\\tcontent: \"world\";\\n\\tfont-size: 1rem;\\n\\tcolor: #000;\\n} \\n```\\n';\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize preview area\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initPreview',\n\t\t\tvalue: function initPreview() {\n\t\t\t\tthis.preview = new _Preview.Preview(this.settings.previewSelector, this.calmdown);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Initialize event listeners\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'initEventListeners',\n\t\t\tvalue: function initEventListeners() {\n\t\t\t\tthis.editor.convertMarkdownToHtmlEventListener([this.preview.getPreview, this.htmlInputElement], this.converter);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'triggerEvents',\n\t\t\tvalue: function triggerEvents() {\n\t\t\t\tthis.editor.processContent();\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Get the editor content\r\n\t   *\r\n\t   * @returns {String} -  the string value of the editor content\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'getContent',\n\t\t\tvalue: function getContent() {\n\t\t\t\treturn this.editor.getContent();\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   *  Set the editor content\r\n\t   *\r\n\t   * @param {String} content - the new value of the editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'setContent',\n\t\t\tvalue: function setContent(content) {\n\t\t\t\tthis.editor.setContent(content);\n\t\t\t\tthis.editor.processContent();\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Calmdown;\n\t}();\n\t\n\texports.default = Calmdown;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\tvar CONFIG = exports.CONFIG = {\n\t\t/**\r\n\t  * @type {String}\r\n\t  */\n\t\t'selector': 'calmdown',\n\t\n\t\t/**\r\n\t  * @type {String}\r\n\t  */\n\t\t'editorSelector': 'cd-editor',\n\t\n\t\t/**\r\n\t  * @type {String|null}\r\n\t  */\n\t\t'previewSelector': 'cd-preview',\n\t\n\t\t/**\r\n\t  * @type {String|null}\r\n\t  */\n\t\t'markdownInputSelector': 'cd-markdown-input',\n\t\n\t\t/**\r\n\t  * @type {String|null}\r\n\t  */\n\t\t'htmlInputSelector': 'cd-html-input',\n\t\n\t\t/**\r\n\t  * @type {String}\r\n\t  */\n\t\t'codeHighlightStyle': 'cd-highlight-default',\n\t\n\t\t/**\r\n\t  * @type {String}\r\n\t  */\n\t\t'editorType': 'textarea'\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.ShowdownConverter = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _showdown = __webpack_require__(4);\n\t\n\tvar showdown = _interopRequireWildcard(_showdown);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ShowdownConverter = exports.ShowdownConverter = function () {\n\t\n\t\t/**\r\n\t  * Represents ShowdownConverter\r\n\t  *\r\n\t  * @param {highlight|null} codeHighlighter - highlights the syntax in the code tags\r\n\t  * @param {String} flavor - flavor of the converter\r\n\t  * @default 'github'\r\n\t \t */\n\t\tfunction ShowdownConverter() {\n\t\t\tvar codeHighlighter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\t\tvar flavor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'github';\n\t\n\t\t\t_classCallCheck(this, ShowdownConverter);\n\t\n\t\t\tthis._converter = new showdown.Converter();\n\t\t\tthis.setFlavor(flavor);\n\t\t\tthis._codeHighlighter = codeHighlighter;\n\t\t}\n\t\n\t\t/**\r\n\t  * Get the showdown converter\r\n\t  *\r\n\t  * @returns {showdown.Converter} - showdown markdown converter\r\n\t  */\n\t\n\t\n\t\t_createClass(ShowdownConverter, [{\n\t\t\tkey: 'setFlavor',\n\t\n\t\n\t\t\t/**\r\n\t   * Set the flavor of the showdown converter\r\n\t   *\r\n\t   * @param {String} flavor - flavor of the converter\r\n\t   */\n\t\t\tvalue: function setFlavor(flavor) {\n\t\t\t\tthis._converter.setFlavor(flavor);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Generate html from the markdown\r\n\t   *\r\n\t   * @param {String} markdown - markdown from the editor\r\n\t   * @returns {String} - the generated html\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'makeHtml',\n\t\t\tvalue: function makeHtml(markdown) {\n\t\t\t\tvar html = this._converter.makeHtml(markdown);\n\t\t\t\treturn this._codeHighlighter == null ? html : this.addCodeHighlighting(html);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Get a syntax highlighted version of the given html code tags\r\n\t   *\r\n\t   * @param {String} html - the generated html\r\n\t   * @returns {String} - the generated html with syntax highlight\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'addCodeHighlighting',\n\t\t\tvalue: function addCodeHighlighting(html) {\n\t\t\t\tvar div = document.createElement('div');\n\t\t\t\tdiv.innerHTML = html;\n\t\t\t\tvar codeList = div.getElementsByTagName('code');\n\t\t\t\tfor (var i = 0; i < codeList.length; i++) {\n\t\t\t\t\tthis._codeHighlighter.highlightElement(codeList[i]);\n\t\t\t\t}\n\t\t\t\treturn div.innerHTML;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getConverter',\n\t\t\tget: function get() {\n\t\t\t\treturn this._converter;\n\t\t\t}\n\t\t}]);\n\n\t\treturn ShowdownConverter;\n\t}();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t; /*! showdown 09-01-2017 */\n\t(function () {\n\t  /**\n\t   * Created by Tivie on 13-07-2015.\n\t   */\n\t\n\t  function getDefaultOpts(simple) {\n\t    'use strict';\n\t\n\t    var defaultOptions = {\n\t      omitExtraWLInCodeBlocks: {\n\t        defaultValue: false,\n\t        describe: 'Omit the default extra whiteline added to code blocks',\n\t        type: 'boolean'\n\t      },\n\t      noHeaderId: {\n\t        defaultValue: false,\n\t        describe: 'Turn on/off generated header id',\n\t        type: 'boolean'\n\t      },\n\t      prefixHeaderId: {\n\t        defaultValue: false,\n\t        describe: 'Specify a prefix to generated header ids',\n\t        type: 'string'\n\t      },\n\t      ghCompatibleHeaderId: {\n\t        defaultValue: false,\n\t        describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\n\t        type: 'boolean'\n\t      },\n\t      headerLevelStart: {\n\t        defaultValue: false,\n\t        describe: 'The header blocks level start',\n\t        type: 'integer'\n\t      },\n\t      parseImgDimensions: {\n\t        defaultValue: false,\n\t        describe: 'Turn on/off image dimension parsing',\n\t        type: 'boolean'\n\t      },\n\t      simplifiedAutoLink: {\n\t        defaultValue: false,\n\t        describe: 'Turn on/off GFM autolink style',\n\t        type: 'boolean'\n\t      },\n\t      excludeTrailingPunctuationFromURLs: {\n\t        defaultValue: false,\n\t        describe: 'Excludes trailing punctuation from links generated with autoLinking',\n\t        type: 'boolean'\n\t      },\n\t      literalMidWordUnderscores: {\n\t        defaultValue: false,\n\t        describe: 'Parse midword underscores as literal underscores',\n\t        type: 'boolean'\n\t      },\n\t      strikethrough: {\n\t        defaultValue: false,\n\t        describe: 'Turn on/off strikethrough support',\n\t        type: 'boolean'\n\t      },\n\t      tables: {\n\t        defaultValue: false,\n\t        describe: 'Turn on/off tables support',\n\t        type: 'boolean'\n\t      },\n\t      tablesHeaderId: {\n\t        defaultValue: false,\n\t        describe: 'Add an id to table headers',\n\t        type: 'boolean'\n\t      },\n\t      ghCodeBlocks: {\n\t        defaultValue: true,\n\t        describe: 'Turn on/off GFM fenced code blocks support',\n\t        type: 'boolean'\n\t      },\n\t      tasklists: {\n\t        defaultValue: false,\n\t        describe: 'Turn on/off GFM tasklist support',\n\t        type: 'boolean'\n\t      },\n\t      smoothLivePreview: {\n\t        defaultValue: false,\n\t        describe: 'Prevents weird effects in live previews due to incomplete input',\n\t        type: 'boolean'\n\t      },\n\t      smartIndentationFix: {\n\t        defaultValue: false,\n\t        description: 'Tries to smartly fix indentation in es6 strings',\n\t        type: 'boolean'\n\t      },\n\t      disableForced4SpacesIndentedSublists: {\n\t        defaultValue: false,\n\t        description: 'Disables the requirement of indenting nested sublists by 4 spaces',\n\t        type: 'boolean'\n\t      },\n\t      simpleLineBreaks: {\n\t        defaultValue: false,\n\t        description: 'Parses simple line breaks as <br> (GFM Style)',\n\t        type: 'boolean'\n\t      },\n\t      requireSpaceBeforeHeadingText: {\n\t        defaultValue: false,\n\t        description: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\n\t        type: 'boolean'\n\t      },\n\t      ghMentions: {\n\t        defaultValue: false,\n\t        description: 'Enables github @mentions',\n\t        type: 'boolean'\n\t      }\n\t    };\n\t    if (simple === false) {\n\t      return JSON.parse(JSON.stringify(defaultOptions));\n\t    }\n\t    var ret = {};\n\t    for (var opt in defaultOptions) {\n\t      if (defaultOptions.hasOwnProperty(opt)) {\n\t        ret[opt] = defaultOptions[opt].defaultValue;\n\t      }\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  function allOptionsOn() {\n\t    'use strict';\n\t\n\t    var options = getDefaultOpts(true),\n\t        ret = {};\n\t    for (var opt in options) {\n\t      if (options.hasOwnProperty(opt)) {\n\t        ret[opt] = true;\n\t      }\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  /**\n\t   * Created by Tivie on 06-01-2015.\n\t   */\n\t\n\t  // Private properties\n\t  var showdown = {},\n\t      parsers = {},\n\t      extensions = {},\n\t      globalOptions = getDefaultOpts(true),\n\t      setFlavor = 'vanilla',\n\t      flavor = {\n\t    github: {\n\t      omitExtraWLInCodeBlocks: true,\n\t      prefixHeaderId: 'user-content-',\n\t      simplifiedAutoLink: true,\n\t      excludeTrailingPunctuationFromURLs: true,\n\t      literalMidWordUnderscores: true,\n\t      strikethrough: true,\n\t      tables: true,\n\t      tablesHeaderId: true,\n\t      ghCodeBlocks: true,\n\t      tasklists: true,\n\t      disableForced4SpacesIndentedSublists: true,\n\t      simpleLineBreaks: true,\n\t      requireSpaceBeforeHeadingText: true,\n\t      ghCompatibleHeaderId: true,\n\t      ghMentions: true\n\t    },\n\t    vanilla: getDefaultOpts(true),\n\t    allOn: allOptionsOn()\n\t  };\n\t\n\t  /**\n\t   * helper namespace\n\t   * @type {{}}\n\t   */\n\t  showdown.helper = {};\n\t\n\t  /**\n\t   * TODO LEGACY SUPPORT CODE\n\t   * @type {{}}\n\t   */\n\t  showdown.extensions = {};\n\t\n\t  /**\n\t   * Set a global option\n\t   * @static\n\t   * @param {string} key\n\t   * @param {*} value\n\t   * @returns {showdown}\n\t   */\n\t  showdown.setOption = function (key, value) {\n\t    'use strict';\n\t\n\t    globalOptions[key] = value;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Get a global option\n\t   * @static\n\t   * @param {string} key\n\t   * @returns {*}\n\t   */\n\t  showdown.getOption = function (key) {\n\t    'use strict';\n\t\n\t    return globalOptions[key];\n\t  };\n\t\n\t  /**\n\t   * Get the global options\n\t   * @static\n\t   * @returns {{}}\n\t   */\n\t  showdown.getOptions = function () {\n\t    'use strict';\n\t\n\t    return globalOptions;\n\t  };\n\t\n\t  /**\n\t   * Reset global options to the default values\n\t   * @static\n\t   */\n\t  showdown.resetOptions = function () {\n\t    'use strict';\n\t\n\t    globalOptions = getDefaultOpts(true);\n\t  };\n\t\n\t  /**\n\t   * Set the flavor showdown should use as default\n\t   * @param {string} name\n\t   */\n\t  showdown.setFlavor = function (name) {\n\t    'use strict';\n\t\n\t    if (!flavor.hasOwnProperty(name)) {\n\t      throw Error(name + ' flavor was not found');\n\t    }\n\t    var preset = flavor[name];\n\t    setFlavor = name;\n\t    for (var option in preset) {\n\t      if (preset.hasOwnProperty(option)) {\n\t        globalOptions[option] = preset[option];\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the currently set flavor\n\t   * @returns {string}\n\t   */\n\t  showdown.getFlavor = function () {\n\t    'use strict';\n\t\n\t    return setFlavor;\n\t  };\n\t\n\t  /**\n\t   * Get the options of a specified flavor. Returns undefined if the flavor was not found\n\t   * @param {string} name Name of the flavor\n\t   * @returns {{}|undefined}\n\t   */\n\t  showdown.getFlavorOptions = function (name) {\n\t    'use strict';\n\t\n\t    if (flavor.hasOwnProperty(name)) {\n\t      return flavor[name];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Get the default options\n\t   * @static\n\t   * @param {boolean} [simple=true]\n\t   * @returns {{}}\n\t   */\n\t  showdown.getDefaultOptions = function (simple) {\n\t    'use strict';\n\t\n\t    return getDefaultOpts(simple);\n\t  };\n\t\n\t  /**\n\t   * Get or set a subParser\n\t   *\n\t   * subParser(name)       - Get a registered subParser\n\t   * subParser(name, func) - Register a subParser\n\t   * @static\n\t   * @param {string} name\n\t   * @param {function} [func]\n\t   * @returns {*}\n\t   */\n\t  showdown.subParser = function (name, func) {\n\t    'use strict';\n\t\n\t    if (showdown.helper.isString(name)) {\n\t      if (typeof func !== 'undefined') {\n\t        parsers[name] = func;\n\t      } else {\n\t        if (parsers.hasOwnProperty(name)) {\n\t          return parsers[name];\n\t        } else {\n\t          throw Error('SubParser named ' + name + ' not registered!');\n\t        }\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Gets or registers an extension\n\t   * @static\n\t   * @param {string} name\n\t   * @param {object|function=} ext\n\t   * @returns {*}\n\t   */\n\t  showdown.extension = function (name, ext) {\n\t    'use strict';\n\t\n\t    if (!showdown.helper.isString(name)) {\n\t      throw Error('Extension \\'name\\' must be a string');\n\t    }\n\t\n\t    name = showdown.helper.stdExtName(name);\n\t\n\t    // Getter\n\t    if (showdown.helper.isUndefined(ext)) {\n\t      if (!extensions.hasOwnProperty(name)) {\n\t        throw Error('Extension named ' + name + ' is not registered!');\n\t      }\n\t      return extensions[name];\n\t\n\t      // Setter\n\t    } else {\n\t      // Expand extension if it's wrapped in a function\n\t      if (typeof ext === 'function') {\n\t        ext = ext();\n\t      }\n\t\n\t      // Ensure extension is an array\n\t      if (!showdown.helper.isArray(ext)) {\n\t        ext = [ext];\n\t      }\n\t\n\t      var validExtension = validate(ext, name);\n\t\n\t      if (validExtension.valid) {\n\t        extensions[name] = ext;\n\t      } else {\n\t        throw Error(validExtension.error);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Gets all extensions registered\n\t   * @returns {{}}\n\t   */\n\t  showdown.getAllExtensions = function () {\n\t    'use strict';\n\t\n\t    return extensions;\n\t  };\n\t\n\t  /**\n\t   * Remove an extension\n\t   * @param {string} name\n\t   */\n\t  showdown.removeExtension = function (name) {\n\t    'use strict';\n\t\n\t    delete extensions[name];\n\t  };\n\t\n\t  /**\n\t   * Removes all extensions\n\t   */\n\t  showdown.resetExtensions = function () {\n\t    'use strict';\n\t\n\t    extensions = {};\n\t  };\n\t\n\t  /**\n\t   * Validate extension\n\t   * @param {array} extension\n\t   * @param {string} name\n\t   * @returns {{valid: boolean, error: string}}\n\t   */\n\t  function validate(extension, name) {\n\t    'use strict';\n\t\n\t    var errMsg = name ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n\t        ret = {\n\t      valid: true,\n\t      error: ''\n\t    };\n\t\n\t    if (!showdown.helper.isArray(extension)) {\n\t      extension = [extension];\n\t    }\n\t\n\t    for (var i = 0; i < extension.length; ++i) {\n\t      var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n\t          ext = extension[i];\n\t      if ((typeof ext === 'undefined' ? 'undefined' : _typeof(ext)) !== 'object') {\n\t        ret.valid = false;\n\t        ret.error = baseMsg + 'must be an object, but ' + (typeof ext === 'undefined' ? 'undefined' : _typeof(ext)) + ' given';\n\t        return ret;\n\t      }\n\t\n\t      if (!showdown.helper.isString(ext.type)) {\n\t        ret.valid = false;\n\t        ret.error = baseMsg + 'property \"type\" must be a string, but ' + _typeof(ext.type) + ' given';\n\t        return ret;\n\t      }\n\t\n\t      var type = ext.type = ext.type.toLowerCase();\n\t\n\t      // normalize extension type\n\t      if (type === 'language') {\n\t        type = ext.type = 'lang';\n\t      }\n\t\n\t      if (type === 'html') {\n\t        type = ext.type = 'output';\n\t      }\n\t\n\t      if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n\t        ret.valid = false;\n\t        ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n\t        return ret;\n\t      }\n\t\n\t      if (type === 'listener') {\n\t        if (showdown.helper.isUndefined(ext.listeners)) {\n\t          ret.valid = false;\n\t          ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n\t          return ret;\n\t        }\n\t      } else {\n\t        if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n\t          ret.valid = false;\n\t          ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n\t          return ret;\n\t        }\n\t      }\n\t\n\t      if (ext.listeners) {\n\t        if (_typeof(ext.listeners) !== 'object') {\n\t          ret.valid = false;\n\t          ret.error = baseMsg + '\"listeners\" property must be an object but ' + _typeof(ext.listeners) + ' given';\n\t          return ret;\n\t        }\n\t        for (var ln in ext.listeners) {\n\t          if (ext.listeners.hasOwnProperty(ln)) {\n\t            if (typeof ext.listeners[ln] !== 'function') {\n\t              ret.valid = false;\n\t              ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln + ' must be a function but ' + _typeof(ext.listeners[ln]) + ' given';\n\t              return ret;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      if (ext.filter) {\n\t        if (typeof ext.filter !== 'function') {\n\t          ret.valid = false;\n\t          ret.error = baseMsg + '\"filter\" must be a function, but ' + _typeof(ext.filter) + ' given';\n\t          return ret;\n\t        }\n\t      } else if (ext.regex) {\n\t        if (showdown.helper.isString(ext.regex)) {\n\t          ext.regex = new RegExp(ext.regex, 'g');\n\t        }\n\t        if (!ext.regex instanceof RegExp) {\n\t          ret.valid = false;\n\t          ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + _typeof(ext.regex) + ' given';\n\t          return ret;\n\t        }\n\t        if (showdown.helper.isUndefined(ext.replace)) {\n\t          ret.valid = false;\n\t          ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n\t          return ret;\n\t        }\n\t      }\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  /**\n\t   * Validate extension\n\t   * @param {object} ext\n\t   * @returns {boolean}\n\t   */\n\t  showdown.validateExtension = function (ext) {\n\t    'use strict';\n\t\n\t    var validateExtension = validate(ext, null);\n\t    if (!validateExtension.valid) {\n\t      console.warn(validateExtension.error);\n\t      return false;\n\t    }\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * showdownjs helper functions\n\t   */\n\t\n\t  if (!showdown.hasOwnProperty('helper')) {\n\t    showdown.helper = {};\n\t  }\n\t\n\t  /**\n\t   * Check if var is string\n\t   * @static\n\t   * @param {string} a\n\t   * @returns {boolean}\n\t   */\n\t  showdown.helper.isString = function isString(a) {\n\t    'use strict';\n\t\n\t    return typeof a === 'string' || a instanceof String;\n\t  };\n\t\n\t  /**\n\t   * Check if var is a function\n\t   * @static\n\t   * @param {string} a\n\t   * @returns {boolean}\n\t   */\n\t  showdown.helper.isFunction = function isFunction(a) {\n\t    'use strict';\n\t\n\t    var getType = {};\n\t    return a && getType.toString.call(a) === '[object Function]';\n\t  };\n\t\n\t  /**\n\t   * ForEach helper function\n\t   * @static\n\t   * @param {*} obj\n\t   * @param {function} callback\n\t   */\n\t  showdown.helper.forEach = function forEach(obj, callback) {\n\t    'use strict';\n\t\n\t    if (typeof obj.forEach === 'function') {\n\t      obj.forEach(callback);\n\t    } else {\n\t      for (var i = 0; i < obj.length; i++) {\n\t        callback(obj[i], i, obj);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * isArray helper function\n\t   * @static\n\t   * @param {*} a\n\t   * @returns {boolean}\n\t   */\n\t  showdown.helper.isArray = function isArray(a) {\n\t    'use strict';\n\t\n\t    return a.constructor === Array;\n\t  };\n\t\n\t  /**\n\t   * Check if value is undefined\n\t   * @static\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t   */\n\t  showdown.helper.isUndefined = function isUndefined(value) {\n\t    'use strict';\n\t\n\t    return typeof value === 'undefined';\n\t  };\n\t\n\t  /**\n\t   * Standardidize extension name\n\t   * @static\n\t   * @param {string} s extension name\n\t   * @returns {string}\n\t   */\n\t  showdown.helper.stdExtName = function (s) {\n\t    'use strict';\n\t\n\t    return s.replace(/[_-]||\\s/g, '').toLowerCase();\n\t  };\n\t\n\t  function escapeCharactersCallback(wholeMatch, m1) {\n\t    'use strict';\n\t\n\t    var charCodeToEscape = m1.charCodeAt(0);\n\t    return '~E' + charCodeToEscape + 'E';\n\t  }\n\t\n\t  /**\n\t   * Callback used to escape characters when passing through String.replace\n\t   * @static\n\t   * @param {string} wholeMatch\n\t   * @param {string} m1\n\t   * @returns {string}\n\t   */\n\t  showdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\t\n\t  /**\n\t   * Escape characters in a string\n\t   * @static\n\t   * @param {string} text\n\t   * @param {string} charsToEscape\n\t   * @param {boolean} afterBackslash\n\t   * @returns {XML|string|void|*}\n\t   */\n\t  showdown.helper.escapeCharacters = function escapeCharacters(text, charsToEscape, afterBackslash) {\n\t    'use strict';\n\t    // First we have to escape the escape characters so that\n\t    // we can build a character class out of them\n\t\n\t    var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\t\n\t    if (afterBackslash) {\n\t      regexString = '\\\\\\\\' + regexString;\n\t    }\n\t\n\t    var regex = new RegExp(regexString, 'g');\n\t    text = text.replace(regex, escapeCharactersCallback);\n\t\n\t    return text;\n\t  };\n\t\n\t  var rgxFindMatchPos = function rgxFindMatchPos(str, left, right, flags) {\n\t    'use strict';\n\t\n\t    var f = flags || '',\n\t        g = f.indexOf('g') > -1,\n\t        x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n\t        l = new RegExp(left, f.replace(/g/g, '')),\n\t        pos = [],\n\t        t,\n\t        s,\n\t        m,\n\t        start,\n\t        end;\n\t\n\t    do {\n\t      t = 0;\n\t      while (m = x.exec(str)) {\n\t        if (l.test(m[0])) {\n\t          if (!t++) {\n\t            s = x.lastIndex;\n\t            start = s - m[0].length;\n\t          }\n\t        } else if (t) {\n\t          if (! --t) {\n\t            end = m.index + m[0].length;\n\t            var obj = {\n\t              left: { start: start, end: s },\n\t              match: { start: s, end: m.index },\n\t              right: { start: m.index, end: end },\n\t              wholeMatch: { start: start, end: end }\n\t            };\n\t            pos.push(obj);\n\t            if (!g) {\n\t              return pos;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    } while (t && (x.lastIndex = s));\n\t\n\t    return pos;\n\t  };\n\t\n\t  /**\n\t   * matchRecursiveRegExp\n\t   *\n\t   * (c) 2007 Steven Levithan <stevenlevithan.com>\n\t   * MIT License\n\t   *\n\t   * Accepts a string to search, a left and right format delimiter\n\t   * as regex patterns, and optional regex flags. Returns an array\n\t   * of matches, allowing nested instances of left/right delimiters.\n\t   * Use the \"g\" flag to return all matches, otherwise only the\n\t   * first is returned. Be careful to ensure that the left and\n\t   * right format delimiters produce mutually exclusive matches.\n\t   * Backreferences are not supported within the right delimiter\n\t   * due to how it is internally combined with the left delimiter.\n\t   * When matching strings whose format delimiters are unbalanced\n\t   * to the left or right, the output is intentionally as a\n\t   * conventional regex library with recursion support would\n\t   * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n\t   * \"<\" and \">\" as the delimiters (both strings contain a single,\n\t   * balanced instance of \"<x>\").\n\t   *\n\t   * examples:\n\t   * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n\t   * returns: []\n\t   * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n\t   * returns: [\"t<<e>><s>\", \"\"]\n\t   * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n\t   * returns: [\"test\"]\n\t   */\n\t  showdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n\t    'use strict';\n\t\n\t    var matchPos = rgxFindMatchPos(str, left, right, flags),\n\t        results = [];\n\t\n\t    for (var i = 0; i < matchPos.length; ++i) {\n\t      results.push([str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end), str.slice(matchPos[i].match.start, matchPos[i].match.end), str.slice(matchPos[i].left.start, matchPos[i].left.end), str.slice(matchPos[i].right.start, matchPos[i].right.end)]);\n\t    }\n\t    return results;\n\t  };\n\t\n\t  /**\n\t   *\n\t   * @param {string} str\n\t   * @param {string|function} replacement\n\t   * @param {string} left\n\t   * @param {string} right\n\t   * @param {string} flags\n\t   * @returns {string}\n\t   */\n\t  showdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n\t    'use strict';\n\t\n\t    if (!showdown.helper.isFunction(replacement)) {\n\t      var repStr = replacement;\n\t      replacement = function replacement() {\n\t        return repStr;\n\t      };\n\t    }\n\t\n\t    var matchPos = rgxFindMatchPos(str, left, right, flags),\n\t        finalStr = str,\n\t        lng = matchPos.length;\n\t\n\t    if (lng > 0) {\n\t      var bits = [];\n\t      if (matchPos[0].wholeMatch.start !== 0) {\n\t        bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n\t      }\n\t      for (var i = 0; i < lng; ++i) {\n\t        bits.push(replacement(str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end), str.slice(matchPos[i].match.start, matchPos[i].match.end), str.slice(matchPos[i].left.start, matchPos[i].left.end), str.slice(matchPos[i].right.start, matchPos[i].right.end)));\n\t        if (i < lng - 1) {\n\t          bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n\t        }\n\t      }\n\t      if (matchPos[lng - 1].wholeMatch.end < str.length) {\n\t        bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n\t      }\n\t      finalStr = bits.join('');\n\t    }\n\t    return finalStr;\n\t  };\n\t\n\t  /**\n\t   * POLYFILLS\n\t   */\n\t  // use this instead of builtin is undefined for IE8 compatibility\n\t  if (typeof console === 'undefined') {\n\t    console = {\n\t      warn: function warn(msg) {\n\t        'use strict';\n\t\n\t        alert(msg);\n\t      },\n\t      log: function log(msg) {\n\t        'use strict';\n\t\n\t        alert(msg);\n\t      },\n\t      error: function error(msg) {\n\t        'use strict';\n\t\n\t        throw msg;\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Created by Estevao on 31-05-2015.\n\t   */\n\t\n\t  /**\n\t   * Showdown Converter class\n\t   * @class\n\t   * @param {object} [converterOptions]\n\t   * @returns {Converter}\n\t   */\n\t  showdown.Converter = function (converterOptions) {\n\t    'use strict';\n\t\n\t    var\n\t    /**\n\t     * Options used by this converter\n\t     * @private\n\t     * @type {{}}\n\t     */\n\t    options = {},\n\t\n\t\n\t    /**\n\t     * Language extensions used by this converter\n\t     * @private\n\t     * @type {Array}\n\t     */\n\t    langExtensions = [],\n\t\n\t\n\t    /**\n\t     * Output modifiers extensions used by this converter\n\t     * @private\n\t     * @type {Array}\n\t     */\n\t    outputModifiers = [],\n\t\n\t\n\t    /**\n\t     * Event listeners\n\t     * @private\n\t     * @type {{}}\n\t     */\n\t    listeners = {},\n\t\n\t\n\t    /**\n\t     * The flavor set in this converter\n\t     */\n\t    setConvFlavor = setFlavor;\n\t\n\t    _constructor();\n\t\n\t    /**\n\t     * Converter constructor\n\t     * @private\n\t     */\n\t    function _constructor() {\n\t      converterOptions = converterOptions || {};\n\t\n\t      for (var gOpt in globalOptions) {\n\t        if (globalOptions.hasOwnProperty(gOpt)) {\n\t          options[gOpt] = globalOptions[gOpt];\n\t        }\n\t      }\n\t\n\t      // Merge options\n\t      if ((typeof converterOptions === 'undefined' ? 'undefined' : _typeof(converterOptions)) === 'object') {\n\t        for (var opt in converterOptions) {\n\t          if (converterOptions.hasOwnProperty(opt)) {\n\t            options[opt] = converterOptions[opt];\n\t          }\n\t        }\n\t      } else {\n\t        throw Error('Converter expects the passed parameter to be an object, but ' + (typeof converterOptions === 'undefined' ? 'undefined' : _typeof(converterOptions)) + ' was passed instead.');\n\t      }\n\t\n\t      if (options.extensions) {\n\t        showdown.helper.forEach(options.extensions, _parseExtension);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Parse extension\n\t     * @param {*} ext\n\t     * @param {string} [name='']\n\t     * @private\n\t     */\n\t    function _parseExtension(ext, name) {\n\t\n\t      name = name || null;\n\t      // If it's a string, the extension was previously loaded\n\t      if (showdown.helper.isString(ext)) {\n\t        ext = showdown.helper.stdExtName(ext);\n\t        name = ext;\n\t\n\t        // LEGACY_SUPPORT CODE\n\t        if (showdown.extensions[ext]) {\n\t          console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' + 'Please inform the developer that the extension should be updated!');\n\t          legacyExtensionLoading(showdown.extensions[ext], ext);\n\t          return;\n\t          // END LEGACY SUPPORT CODE\n\t        } else if (!showdown.helper.isUndefined(extensions[ext])) {\n\t          ext = extensions[ext];\n\t        } else {\n\t          throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n\t        }\n\t      }\n\t\n\t      if (typeof ext === 'function') {\n\t        ext = ext();\n\t      }\n\t\n\t      if (!showdown.helper.isArray(ext)) {\n\t        ext = [ext];\n\t      }\n\t\n\t      var validExt = validate(ext, name);\n\t      if (!validExt.valid) {\n\t        throw Error(validExt.error);\n\t      }\n\t\n\t      for (var i = 0; i < ext.length; ++i) {\n\t        switch (ext[i].type) {\n\t\n\t          case 'lang':\n\t            langExtensions.push(ext[i]);\n\t            break;\n\t\n\t          case 'output':\n\t            outputModifiers.push(ext[i]);\n\t            break;\n\t        }\n\t        if (ext[i].hasOwnProperty('listeners')) {\n\t          for (var ln in ext[i].listeners) {\n\t            if (ext[i].listeners.hasOwnProperty(ln)) {\n\t              listen(ln, ext[i].listeners[ln]);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * LEGACY_SUPPORT\n\t     * @param {*} ext\n\t     * @param {string} name\n\t     */\n\t    function legacyExtensionLoading(ext, name) {\n\t      if (typeof ext === 'function') {\n\t        ext = ext(new showdown.Converter());\n\t      }\n\t      if (!showdown.helper.isArray(ext)) {\n\t        ext = [ext];\n\t      }\n\t      var valid = validate(ext, name);\n\t\n\t      if (!valid.valid) {\n\t        throw Error(valid.error);\n\t      }\n\t\n\t      for (var i = 0; i < ext.length; ++i) {\n\t        switch (ext[i].type) {\n\t          case 'lang':\n\t            langExtensions.push(ext[i]);\n\t            break;\n\t          case 'output':\n\t            outputModifiers.push(ext[i]);\n\t            break;\n\t          default:\n\t            // should never reach here\n\t            throw Error('Extension loader error: Type unrecognized!!!');\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Listen to an event\n\t     * @param {string} name\n\t     * @param {function} callback\n\t     */\n\t    function listen(name, callback) {\n\t      if (!showdown.helper.isString(name)) {\n\t        throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + ' given');\n\t      }\n\t\n\t      if (typeof callback !== 'function') {\n\t        throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + (typeof callback === 'undefined' ? 'undefined' : _typeof(callback)) + ' given');\n\t      }\n\t\n\t      if (!listeners.hasOwnProperty(name)) {\n\t        listeners[name] = [];\n\t      }\n\t      listeners[name].push(callback);\n\t    }\n\t\n\t    function rTrimInputText(text) {\n\t      var rsp = text.match(/^\\s*/)[0].length,\n\t          rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n\t      return text.replace(rgx, '');\n\t    }\n\t\n\t    /**\n\t     * Dispatch an event\n\t     * @private\n\t     * @param {string} evtName Event name\n\t     * @param {string} text Text\n\t     * @param {{}} options Converter Options\n\t     * @param {{}} globals\n\t     * @returns {string}\n\t     */\n\t    this._dispatch = function dispatch(evtName, text, options, globals) {\n\t      if (listeners.hasOwnProperty(evtName)) {\n\t        for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n\t          var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n\t          if (nText && typeof nText !== 'undefined') {\n\t            text = nText;\n\t          }\n\t        }\n\t      }\n\t      return text;\n\t    };\n\t\n\t    /**\n\t     * Listen to an event\n\t     * @param {string} name\n\t     * @param {function} callback\n\t     * @returns {showdown.Converter}\n\t     */\n\t    this.listen = function (name, callback) {\n\t      listen(name, callback);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Converts a markdown string into HTML\n\t     * @param {string} text\n\t     * @returns {*}\n\t     */\n\t    this.makeHtml = function (text) {\n\t      //check if text is not falsy\n\t      if (!text) {\n\t        return text;\n\t      }\n\t\n\t      var globals = {\n\t        gHtmlBlocks: [],\n\t        gHtmlMdBlocks: [],\n\t        gHtmlSpans: [],\n\t        gUrls: {},\n\t        gTitles: {},\n\t        gDimensions: {},\n\t        gListLevel: 0,\n\t        hashLinkCounts: {},\n\t        langExtensions: langExtensions,\n\t        outputModifiers: outputModifiers,\n\t        converter: this,\n\t        ghCodeBlocks: []\n\t      };\n\t\n\t      // attacklab: Replace ~ with ~T\n\t      // This lets us use tilde as an escape char to avoid md5 hashes\n\t      // The choice of character is arbitrary; anything that isn't\n\t      // magic in Markdown will work.\n\t      text = text.replace(/~/g, '~T');\n\t\n\t      // attacklab: Replace $ with ~D\n\t      // RegExp interprets $ as a special character\n\t      // when it's in a replacement string\n\t      text = text.replace(/\\$/g, '~D');\n\t\n\t      // Standardize line endings\n\t      text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n\t      text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\t\n\t      // Stardardize line spaces (nbsp causes trouble in older browsers and some regex flavors)\n\t      text = text.replace(/\\u00A0/g, ' ');\n\t\n\t      if (options.smartIndentationFix) {\n\t        text = rTrimInputText(text);\n\t      }\n\t\n\t      // Make sure text begins and ends with a couple of newlines:\n\t      text = '\\n\\n' + text + '\\n\\n';\n\t\n\t      // detab\n\t      text = showdown.subParser('detab')(text, options, globals);\n\t\n\t      // stripBlankLines\n\t      text = showdown.subParser('stripBlankLines')(text, options, globals);\n\t\n\t      //run languageExtensions\n\t      showdown.helper.forEach(langExtensions, function (ext) {\n\t        text = showdown.subParser('runExtension')(ext, text, options, globals);\n\t      });\n\t\n\t      // run the sub parsers\n\t      text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n\t      text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n\t      text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n\t      text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n\t      text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n\t      text = showdown.subParser('blockGamut')(text, options, globals);\n\t      text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n\t      text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\t\n\t      // attacklab: Restore dollar signs\n\t      text = text.replace(/~D/g, '$$');\n\t\n\t      // attacklab: Restore tildes\n\t      text = text.replace(/~T/g, '~');\n\t\n\t      // Run output modifiers\n\t      showdown.helper.forEach(outputModifiers, function (ext) {\n\t        text = showdown.subParser('runExtension')(ext, text, options, globals);\n\t      });\n\t\n\t      return text;\n\t    };\n\t\n\t    /**\n\t     * Set an option of this Converter instance\n\t     * @param {string} key\n\t     * @param {*} value\n\t     */\n\t    this.setOption = function (key, value) {\n\t      options[key] = value;\n\t    };\n\t\n\t    /**\n\t     * Get the option of this Converter instance\n\t     * @param {string} key\n\t     * @returns {*}\n\t     */\n\t    this.getOption = function (key) {\n\t      return options[key];\n\t    };\n\t\n\t    /**\n\t     * Get the options of this Converter instance\n\t     * @returns {{}}\n\t     */\n\t    this.getOptions = function () {\n\t      return options;\n\t    };\n\t\n\t    /**\n\t     * Add extension to THIS converter\n\t     * @param {{}} extension\n\t     * @param {string} [name=null]\n\t     */\n\t    this.addExtension = function (extension, name) {\n\t      name = name || null;\n\t      _parseExtension(extension, name);\n\t    };\n\t\n\t    /**\n\t     * Use a global registered extension with THIS converter\n\t     * @param {string} extensionName Name of the previously registered extension\n\t     */\n\t    this.useExtension = function (extensionName) {\n\t      _parseExtension(extensionName);\n\t    };\n\t\n\t    /**\n\t     * Set the flavor THIS converter should use\n\t     * @param {string} name\n\t     */\n\t    this.setFlavor = function (name) {\n\t      if (!flavor.hasOwnProperty(name)) {\n\t        throw Error(name + ' flavor was not found');\n\t      }\n\t      var preset = flavor[name];\n\t      setConvFlavor = name;\n\t      for (var option in preset) {\n\t        if (preset.hasOwnProperty(option)) {\n\t          options[option] = preset[option];\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Get the currently set flavor of this converter\n\t     * @returns {string}\n\t     */\n\t    this.getFlavor = function () {\n\t      return setConvFlavor;\n\t    };\n\t\n\t    /**\n\t     * Remove an extension from THIS converter.\n\t     * Note: This is a costly operation. It's better to initialize a new converter\n\t     * and specify the extensions you wish to use\n\t     * @param {Array} extension\n\t     */\n\t    this.removeExtension = function (extension) {\n\t      if (!showdown.helper.isArray(extension)) {\n\t        extension = [extension];\n\t      }\n\t      for (var a = 0; a < extension.length; ++a) {\n\t        var ext = extension[a];\n\t        for (var i = 0; i < langExtensions.length; ++i) {\n\t          if (langExtensions[i] === ext) {\n\t            langExtensions[i].splice(i, 1);\n\t          }\n\t        }\n\t        for (var ii = 0; ii < outputModifiers.length; ++i) {\n\t          if (outputModifiers[ii] === ext) {\n\t            outputModifiers[ii].splice(i, 1);\n\t          }\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Get all extension of THIS converter\n\t     * @returns {{language: Array, output: Array}}\n\t     */\n\t    this.getAllExtensions = function () {\n\t      return {\n\t        language: langExtensions,\n\t        output: outputModifiers\n\t      };\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Turn Markdown link shortcuts into XHTML <a> tags.\n\t   */\n\t  showdown.subParser('anchors', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('anchors.before', text, options, globals);\n\t\n\t    var writeAnchorTag = function writeAnchorTag(wholeMatch, m1, m2, m3, m4, m5, m6, m7) {\n\t      if (showdown.helper.isUndefined(m7)) {\n\t        m7 = '';\n\t      }\n\t      wholeMatch = m1;\n\t      var linkText = m2,\n\t          linkId = m3.toLowerCase(),\n\t          url = m4,\n\t          title = m7;\n\t\n\t      if (!url) {\n\t        if (!linkId) {\n\t          // lower-case and turn embedded newlines into spaces\n\t          linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n\t        }\n\t        url = '#' + linkId;\n\t\n\t        if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n\t          url = globals.gUrls[linkId];\n\t          if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n\t            title = globals.gTitles[linkId];\n\t          }\n\t        } else {\n\t          if (wholeMatch.search(/\\(\\s*\\)$/m) > -1) {\n\t            // Special case for explicit empty url\n\t            url = '';\n\t          } else {\n\t            return wholeMatch;\n\t          }\n\t        }\n\t      }\n\t\n\t      url = showdown.helper.escapeCharacters(url, '*_', false);\n\t      var result = '<a href=\"' + url + '\"';\n\t\n\t      if (title !== '' && title !== null) {\n\t        title = title.replace(/\"/g, '&quot;');\n\t        title = showdown.helper.escapeCharacters(title, '*_', false);\n\t        result += ' title=\"' + title + '\"';\n\t      }\n\t\n\t      result += '>' + linkText + '</a>';\n\t\n\t      return result;\n\t    };\n\t\n\t    // First, handle reference-style links: [link text] [id]\n\t    text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)][ ]?(?:\\n[ ]*)?\\[(.*?)])()()()()/g, writeAnchorTag);\n\t\n\t    // Next, inline-style links: [link text](url \"optional title\")\n\t    text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g, writeAnchorTag);\n\t\n\t    // handle reference-style shortcuts: [link text]\n\t    // These must come last in case you've also got [link test][1]\n\t    // or [link test](/foo)\n\t    text = text.replace(/(\\[([^\\[\\]]+)])()()()()()/g, writeAnchorTag);\n\t\n\t    // Lastly handle GithubMentions if option is enabled\n\t    if (options.ghMentions) {\n\t      text = text.replace(/(^|\\s)(\\\\)?(@([a-z\\d\\-]+))(?=[.!?;,[\\]()]|\\s|$)/gmi, function (wm, st, escape, mentions, username) {\n\t        if (escape === '\\\\') {\n\t          return st + mentions;\n\t        }\n\t        return st + '<a href=\"https://www.github.com/' + username + '\">' + mentions + '</a>';\n\t      });\n\t    }\n\t\n\t    text = globals.converter._dispatch('anchors.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  showdown.subParser('autoLinks', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\t\n\t    var simpleURLRegex = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+)()(?=\\s|$)(?![\"<>])/gi,\n\t        simpleURLRegex2 = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?()]?)(?=\\s|$)(?![\"<>])/gi,\n\t        delimUrlRegex = /<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)>/gi,\n\t        simpleMailRegex = /(?:^|\\s)([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?:$|\\s)/gi,\n\t        delimMailRegex = /<(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi;\n\t\n\t    text = text.replace(delimUrlRegex, replaceLink);\n\t    text = text.replace(delimMailRegex, replaceMail);\n\t    // simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[-.+~:?#@!$&'()*,;=[\\]\\w]+)\\b/gi,\n\t    // Email addresses: <address@domain.foo>\n\t\n\t    if (options.simplifiedAutoLink) {\n\t      if (options.excludeTrailingPunctuationFromURLs) {\n\t        text = text.replace(simpleURLRegex2, replaceLink);\n\t      } else {\n\t        text = text.replace(simpleURLRegex, replaceLink);\n\t      }\n\t      text = text.replace(simpleMailRegex, replaceMail);\n\t    }\n\t\n\t    function replaceLink(wm, link, m2, m3, trailingPunctuation) {\n\t      var lnkTxt = link,\n\t          append = '';\n\t      if (/^www\\./i.test(link)) {\n\t        link = link.replace(/^www\\./i, 'http://www.');\n\t      }\n\t      if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\n\t        append = trailingPunctuation;\n\t      }\n\t      return '<a href=\"' + link + '\">' + lnkTxt + '</a>' + append;\n\t    }\n\t\n\t    function replaceMail(wholeMatch, mail) {\n\t      var unescapedStr = showdown.subParser('unescapeSpecialChars')(mail);\n\t      return showdown.subParser('encodeEmailAddress')(unescapedStr);\n\t    }\n\t\n\t    text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * These are all the transformations that form block-level\n\t   * tags like paragraphs, headers, and list items.\n\t   */\n\t  showdown.subParser('blockGamut', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\t\n\t    // we parse blockquotes first so that we can have headings and hrs\n\t    // inside blockquotes\n\t    text = showdown.subParser('blockQuotes')(text, options, globals);\n\t    text = showdown.subParser('headers')(text, options, globals);\n\t\n\t    // Do Horizontal Rules:\n\t    var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n\t    text = text.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm, key);\n\t    text = text.replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm, key);\n\t    text = text.replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm, key);\n\t\n\t    text = showdown.subParser('lists')(text, options, globals);\n\t    text = showdown.subParser('codeBlocks')(text, options, globals);\n\t    text = showdown.subParser('tables')(text, options, globals);\n\t\n\t    // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n\t    // was to escape raw HTML in the original Markdown source. This time,\n\t    // we're escaping the markup we've just created, so that we don't wrap\n\t    // <p> tags around block-level tags.\n\t    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n\t    text = showdown.subParser('paragraphs')(text, options, globals);\n\t\n\t    text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\t\n\t    return text;\n\t  });\n\t\n\t  showdown.subParser('blockQuotes', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\t\n\t    text = text.replace(/((^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+)/gm, function (wholeMatch, m1) {\n\t      var bq = m1;\n\t\n\t      // attacklab: hack around Konqueror 3.5.4 bug:\n\t      // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n\t      bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, '~0'); // trim one level of quoting\n\t\n\t      // attacklab: clean up hack\n\t      bq = bq.replace(/~0/g, '');\n\t\n\t      bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n\t      bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n\t      bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\t\n\t      bq = bq.replace(/(^|\\n)/g, '$1  ');\n\t      // These leading spaces screw with <pre> content, so we need to fix that:\n\t      bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n\t        var pre = m1;\n\t        // attacklab: hack around Konqueror 3.5.4 bug:\n\t        pre = pre.replace(/^  /mg, '~0');\n\t        pre = pre.replace(/~0/g, '');\n\t        return pre;\n\t      });\n\t\n\t      return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n\t    });\n\t\n\t    text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Process Markdown `<pre><code>` blocks.\n\t   */\n\t  showdown.subParser('codeBlocks', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\t\n\t    // sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n\t    text += '~0';\n\t\n\t    var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))/g;\n\t    text = text.replace(pattern, function (wholeMatch, m1, m2) {\n\t      var codeblock = m1,\n\t          nextChar = m2,\n\t          end = '\\n';\n\t\n\t      codeblock = showdown.subParser('outdent')(codeblock);\n\t      codeblock = showdown.subParser('encodeCode')(codeblock);\n\t      codeblock = showdown.subParser('detab')(codeblock);\n\t      codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n\t      codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\t\n\t      if (options.omitExtraWLInCodeBlocks) {\n\t        end = '';\n\t      }\n\t\n\t      codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\t\n\t      return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n\t    });\n\t\n\t    // strip sentinel\n\t    text = text.replace(/~0/, '');\n\t\n\t    text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   *\n\t   *   *  Backtick quotes are used for <code></code> spans.\n\t   *\n\t   *   *  You can use multiple backticks as the delimiters if you want to\n\t   *     include literal backticks in the code span. So, this input:\n\t   *\n\t   *         Just type ``foo `bar` baz`` at the prompt.\n\t   *\n\t   *       Will translate to:\n\t   *\n\t   *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n\t   *\n\t   *    There's no arbitrary limit to the number of backticks you\n\t   *    can use as delimters. If you need three consecutive backticks\n\t   *    in your code, use four for delimiters, etc.\n\t   *\n\t   *  *  You can use spaces to get literal backticks at the edges:\n\t   *\n\t   *         ... type `` `bar` `` ...\n\t   *\n\t   *       Turns to:\n\t   *\n\t   *         ... type <code>`bar`</code> ...\n\t   */\n\t  showdown.subParser('codeSpans', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\t\n\t    /*\n\t     text = text.replace(/\n\t     (^|[^\\\\])\t\t\t\t\t// Character before opening ` can't be a backslash\n\t     (`+)\t\t\t\t\t\t// $2 = Opening run of `\n\t     (\t\t\t\t\t\t\t// $3 = The code block\n\t     [^\\r]*?\n\t     [^`]\t\t\t\t\t// attacklab: work around lack of lookbehind\n\t     )\n\t     \\2\t\t\t\t\t\t\t// Matching closer\n\t     (?!`)\n\t     /gm, function(){...});\n\t     */\n\t\n\t    if (typeof text === 'undefined') {\n\t      text = '';\n\t    }\n\t    text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm, function (wholeMatch, m1, m2, m3) {\n\t      var c = m3;\n\t      c = c.replace(/^([ \\t]*)/g, ''); // leading whitespace\n\t      c = c.replace(/[ \\t]*$/g, ''); // trailing whitespace\n\t      c = showdown.subParser('encodeCode')(c);\n\t      return m1 + '<code>' + c + '</code>';\n\t    });\n\t\n\t    text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Convert all tabs to spaces\n\t   */\n\t  showdown.subParser('detab', function (text) {\n\t    'use strict';\n\t\n\t    // expand first n-1 tabs\n\t\n\t    text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\t\n\t    // replace the nth with two sentinels\n\t    text = text.replace(/\\t/g, '~A~B');\n\t\n\t    // use the sentinel to anchor our regex so it doesn't explode\n\t    text = text.replace(/~B(.+?)~A/g, function (wholeMatch, m1) {\n\t      var leadingText = m1,\n\t          numSpaces = 4 - leadingText.length % 4; // g_tab_width\n\t\n\t      // there *must* be a better way to do this:\n\t      for (var i = 0; i < numSpaces; i++) {\n\t        leadingText += ' ';\n\t      }\n\t\n\t      return leadingText;\n\t    });\n\t\n\t    // clean up sentinels\n\t    text = text.replace(/~A/g, '    '); // g_tab_width\n\t    text = text.replace(/~B/g, '');\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Smart processing for ampersands and angle brackets that need to be encoded.\n\t   */\n\t  showdown.subParser('encodeAmpsAndAngles', function (text) {\n\t    'use strict';\n\t    // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n\t    // http://bumppo.net/projects/amputator/\n\t\n\t    text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\t\n\t    // Encode naked <'s\n\t    text = text.replace(/<(?![a-z\\/?\\$!])/gi, '&lt;');\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Returns the string, with after processing the following backslash escape sequences.\n\t   *\n\t   * attacklab: The polite way to do this is with the new escapeCharacters() function:\n\t   *\n\t   *    text = escapeCharacters(text,\"\\\\\",true);\n\t   *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n\t   *\n\t   * ...but we're sidestepping its use of the (slow) RegExp constructor\n\t   * as an optimization for Firefox.  This function gets called a LOT.\n\t   */\n\t  showdown.subParser('encodeBackslashEscapes', function (text) {\n\t    'use strict';\n\t\n\t    text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n\t    text = text.replace(/\\\\([`*_{}\\[\\]()>#+-.!])/g, showdown.helper.escapeCharactersCallback);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Encode/escape certain characters inside Markdown code runs.\n\t   * The point is that in code, these characters are literals,\n\t   * and lose their special Markdown meanings.\n\t   */\n\t  showdown.subParser('encodeCode', function (text) {\n\t    'use strict';\n\t\n\t    // Encode all ampersands; HTML entities are not\n\t    // entities within a Markdown code span.\n\t\n\t    text = text.replace(/&/g, '&amp;');\n\t\n\t    // Do the angle bracket song and dance:\n\t    text = text.replace(/</g, '&lt;');\n\t    text = text.replace(/>/g, '&gt;');\n\t\n\t    // Now, escape characters that are magic in Markdown:\n\t    text = showdown.helper.escapeCharacters(text, '*_{}[]\\\\', false);\n\t\n\t    // jj the line above breaks this:\n\t    //---\n\t    //* Item\n\t    //   1. Subitem\n\t    //            special char: *\n\t    // ---\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   *  Input: an email address, e.g. \"foo@example.com\"\n\t   *\n\t   *  Output: the email address as a mailto link, with each character\n\t   *    of the address encoded as either a decimal or hex entity, in\n\t   *    the hopes of foiling most address harvesting spam bots. E.g.:\n\t   *\n\t   *    <a href=\"&#x6D;&#97;&#105;&#108;&#x74;&#111;:&#102;&#111;&#111;&#64;&#101;\n\t   *       x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;\">&#102;&#111;&#111;\n\t   *       &#64;&#101;x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;</a>\n\t   *\n\t   *  Based on a filter by Matthew Wickline, posted to the BBEdit-Talk\n\t   *  mailing list: <http://tinyurl.com/yu7ue>\n\t   *\n\t   */\n\t  showdown.subParser('encodeEmailAddress', function (addr) {\n\t    'use strict';\n\t\n\t    var encode = [function (ch) {\n\t      return '&#' + ch.charCodeAt(0) + ';';\n\t    }, function (ch) {\n\t      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n\t    }, function (ch) {\n\t      return ch;\n\t    }];\n\t\n\t    addr = 'mailto:' + addr;\n\t\n\t    addr = addr.replace(/./g, function (ch) {\n\t      if (ch === '@') {\n\t        // this *must* be encoded. I insist.\n\t        ch = encode[Math.floor(Math.random() * 2)](ch);\n\t      } else if (ch !== ':') {\n\t        // leave ':' alone (to spot mailto: later)\n\t        var r = Math.random();\n\t        // roughly 10% raw, 45% hex, 45% dec\n\t        ch = r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch);\n\t      }\n\t      return ch;\n\t    });\n\t\n\t    addr = '<a href=\"' + addr + '\">' + addr + '</a>';\n\t    addr = addr.replace(/\">.+:/g, '\">'); // strip the mailto: from the visible part\n\t\n\t    return addr;\n\t  });\n\t\n\t  /**\n\t   * Within tags -- meaning between < and > -- encode [\\ ` * _] so they\n\t   * don't conflict with their use in Markdown for code, italics and strong.\n\t   */\n\t  showdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text) {\n\t    'use strict';\n\t\n\t    // Build a regex to find HTML tags and comments.  See Friedl's\n\t    // \"Mastering Regular Expressions\", 2nd Ed., pp. 200-201.\n\t\n\t    var regex = /(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)/gi;\n\t\n\t    text = text.replace(regex, function (wholeMatch) {\n\t      var tag = wholeMatch.replace(/(.)<\\/?code>(?=.)/g, '$1`');\n\t      tag = showdown.helper.escapeCharacters(tag, '\\\\`*_', false);\n\t      return tag;\n\t    });\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Handle github codeblocks prior to running HashHTML so that\n\t   * HTML contained within the codeblock gets escaped properly\n\t   * Example:\n\t   * ```ruby\n\t   *     def hello_world(x)\n\t   *       puts \"Hello, #{x}\"\n\t   *     end\n\t   * ```\n\t   */\n\t  showdown.subParser('githubCodeBlocks', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    // early exit if option is not enabled\n\t\n\t    if (!options.ghCodeBlocks) {\n\t      return text;\n\t    }\n\t\n\t    text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\t\n\t    text += '~0';\n\t\n\t    text = text.replace(/(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g, function (wholeMatch, language, codeblock) {\n\t      var end = options.omitExtraWLInCodeBlocks ? '' : '\\n';\n\t\n\t      // First parse the github code block\n\t      codeblock = showdown.subParser('encodeCode')(codeblock);\n\t      codeblock = showdown.subParser('detab')(codeblock);\n\t      codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n\t      codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\t\n\t      codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\t\n\t      codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\t\n\t      // Since GHCodeblocks can be false positives, we need to\n\t      // store the primitive text and the parsed text in a global var,\n\t      // and then return a token\n\t      return '\\n\\n~G' + (globals.ghCodeBlocks.push({ text: wholeMatch, codeblock: codeblock }) - 1) + 'G\\n\\n';\n\t    });\n\t\n\t    // attacklab: strip sentinel\n\t    text = text.replace(/~0/, '');\n\t\n\t    return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n\t  });\n\t\n\t  showdown.subParser('hashBlock', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = text.replace(/(^\\n+|\\n+$)/g, '');\n\t    return '\\n\\n~K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n\t  });\n\t\n\t  showdown.subParser('hashElement', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    return function (wholeMatch, m1) {\n\t      var blockText = m1;\n\t\n\t      // Undo double lines\n\t      blockText = blockText.replace(/\\n\\n/g, '\\n');\n\t      blockText = blockText.replace(/^\\n/, '');\n\t\n\t      // strip trailing blank lines\n\t      blockText = blockText.replace(/\\n+$/g, '');\n\t\n\t      // Replace the element text with a marker (\"~KxK\" where x is its key)\n\t      blockText = '\\n\\n~K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\t\n\t      return blockText;\n\t    };\n\t  });\n\t\n\t  showdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    var blockTags = ['pre', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'table', 'dl', 'ol', 'ul', 'script', 'noscript', 'form', 'fieldset', 'iframe', 'math', 'style', 'section', 'header', 'footer', 'nav', 'article', 'aside', 'address', 'audio', 'canvas', 'figure', 'hgroup', 'output', 'video', 'p'],\n\t        repFunc = function repFunc(wholeMatch, match, left, right) {\n\t      var txt = wholeMatch;\n\t      // check if this html element is marked as markdown\n\t      // if so, it's contents should be parsed as markdown\n\t      if (left.search(/\\bmarkdown\\b/) !== -1) {\n\t        txt = left + globals.converter.makeHtml(match) + right;\n\t      }\n\t      return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n\t    };\n\t\n\t    for (var i = 0; i < blockTags.length; ++i) {\n\t      text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<' + blockTags[i] + '\\\\b[^>]*>', '</' + blockTags[i] + '>', 'gim');\n\t    }\n\t\n\t    // HR SPECIAL CASE\n\t    text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g, showdown.subParser('hashElement')(text, options, globals));\n\t\n\t    // Special case for standalone HTML comments\n\t    text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\n\t      return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n\t    }, '^ {0,3}<!--', '-->', 'gm');\n\t\n\t    // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n\t    text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g, showdown.subParser('hashElement')(text, options, globals));\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Hash span elements that should not be parsed as markdown\n\t   */\n\t  showdown.subParser('hashHTMLSpans', function (text, config, globals) {\n\t    'use strict';\n\t\n\t    var matches = showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');\n\t\n\t    for (var i = 0; i < matches.length; ++i) {\n\t      text = text.replace(matches[i][0], '~C' + (globals.gHtmlSpans.push(matches[i][0]) - 1) + 'C');\n\t    }\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Unhash HTML spans\n\t   */\n\t  showdown.subParser('unhashHTMLSpans', function (text, config, globals) {\n\t    'use strict';\n\t\n\t    for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n\t      text = text.replace('~C' + i + 'C', globals.gHtmlSpans[i]);\n\t    }\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Hash span elements that should not be parsed as markdown\n\t   */\n\t  showdown.subParser('hashPreCodeTags', function (text, config, globals) {\n\t    'use strict';\n\t\n\t    var repFunc = function repFunc(wholeMatch, match, left, right) {\n\t      // encode html entities\n\t      var codeblock = left + showdown.subParser('encodeCode')(match) + right;\n\t      return '\\n\\n~G' + (globals.ghCodeBlocks.push({ text: wholeMatch, codeblock: codeblock }) - 1) + 'G\\n\\n';\n\t    };\n\t\n\t    text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^ {0,3}</code>\\\\s*</pre>', 'gim');\n\t    return text;\n\t  });\n\t\n\t  showdown.subParser('headers', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('headers.before', text, options, globals);\n\t\n\t    var prefixHeader = options.prefixHeaderId,\n\t        headerLevelStart = isNaN(parseInt(options.headerLevelStart)) ? 1 : parseInt(options.headerLevelStart),\n\t        ghHeaderId = options.ghCompatibleHeaderId,\n\t\n\t\n\t    // Set text-style headers:\n\t    //\tHeader 1\n\t    //\t========\n\t    //\n\t    //\tHeader 2\n\t    //\t--------\n\t    //\n\t    setextRegexH1 = options.smoothLivePreview ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n\t        setextRegexH2 = options.smoothLivePreview ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\t\n\t    text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\t\n\t      var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n\t          hID = options.noHeaderId ? '' : ' id=\"' + headerId(m1) + '\"',\n\t          hLevel = headerLevelStart,\n\t          hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n\t      return showdown.subParser('hashBlock')(hashBlock, options, globals);\n\t    });\n\t\n\t    text = text.replace(setextRegexH2, function (matchFound, m1) {\n\t      var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n\t          hID = options.noHeaderId ? '' : ' id=\"' + headerId(m1) + '\"',\n\t          hLevel = headerLevelStart + 1,\n\t          hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n\t      return showdown.subParser('hashBlock')(hashBlock, options, globals);\n\t    });\n\t\n\t    // atx-style headers:\n\t    //  # Header 1\n\t    //  ## Header 2\n\t    //  ## Header 2 with closing hashes ##\n\t    //  ...\n\t    //  ###### Header 6\n\t    //\n\t    var atxStyle = options.requireSpaceBeforeHeadingText ? /^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm : /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm;\n\t\n\t    text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\n\t      var span = showdown.subParser('spanGamut')(m2, options, globals),\n\t          hID = options.noHeaderId ? '' : ' id=\"' + headerId(m2) + '\"',\n\t          hLevel = headerLevelStart - 1 + m1.length,\n\t          header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\t\n\t      return showdown.subParser('hashBlock')(header, options, globals);\n\t    });\n\t\n\t    function headerId(m) {\n\t      var title, escapedId;\n\t\n\t      if (ghHeaderId) {\n\t        escapedId = m.replace(/ /g, '-')\n\t        //replace previously escaped chars (&, ~ and $)\n\t        .replace(/&amp;/g, '').replace(/~T/g, '').replace(/~D/g, '')\n\t        //replace rest of the chars (&~$ are repeated as they might have been escaped)\n\t        // borrowed from github's redcarpet (some they should produce similar results)\n\t        .replace(/[&+$,\\/:;=?@\"#{}|^~\\[\\]`\\\\*)(%.!'<>]/g, '').toLowerCase();\n\t      } else {\n\t        escapedId = m.replace(/[^\\w]/g, '').toLowerCase();\n\t      }\n\t\n\t      if (globals.hashLinkCounts[escapedId]) {\n\t        title = escapedId + '-' + globals.hashLinkCounts[escapedId]++;\n\t      } else {\n\t        title = escapedId;\n\t        globals.hashLinkCounts[escapedId] = 1;\n\t      }\n\t\n\t      // Prefix id to prevent causing inadvertent pre-existing style matches.\n\t      if (prefixHeader === true) {\n\t        prefixHeader = 'section';\n\t      }\n\t\n\t      if (showdown.helper.isString(prefixHeader)) {\n\t        return prefixHeader + title;\n\t      }\n\t      return title;\n\t    }\n\t\n\t    text = globals.converter._dispatch('headers.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Turn Markdown image shortcuts into <img> tags.\n\t   */\n\t  showdown.subParser('images', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('images.before', text, options, globals);\n\t\n\t    var inlineRegExp = /!\\[(.*?)]\\s?\\([ \\t]*()<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(['\"])(.*?)\\6[ \\t]*)?\\)/g,\n\t        referenceRegExp = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[(.*?)]()()()()()/g;\n\t\n\t    function writeImageTag(wholeMatch, altText, linkId, url, width, height, m5, title) {\n\t\n\t      var gUrls = globals.gUrls,\n\t          gTitles = globals.gTitles,\n\t          gDims = globals.gDimensions;\n\t\n\t      linkId = linkId.toLowerCase();\n\t\n\t      if (!title) {\n\t        title = '';\n\t      }\n\t\n\t      if (url === '' || url === null) {\n\t        if (linkId === '' || linkId === null) {\n\t          // lower-case and turn embedded newlines into spaces\n\t          linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n\t        }\n\t        url = '#' + linkId;\n\t\n\t        if (!showdown.helper.isUndefined(gUrls[linkId])) {\n\t          url = gUrls[linkId];\n\t          if (!showdown.helper.isUndefined(gTitles[linkId])) {\n\t            title = gTitles[linkId];\n\t          }\n\t          if (!showdown.helper.isUndefined(gDims[linkId])) {\n\t            width = gDims[linkId].width;\n\t            height = gDims[linkId].height;\n\t          }\n\t        } else {\n\t          return wholeMatch;\n\t        }\n\t      }\n\t\n\t      altText = altText.replace(/\"/g, '&quot;');\n\t      altText = showdown.helper.escapeCharacters(altText, '*_', false);\n\t      url = showdown.helper.escapeCharacters(url, '*_', false);\n\t      var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\t\n\t      if (title) {\n\t        title = title.replace(/\"/g, '&quot;');\n\t        title = showdown.helper.escapeCharacters(title, '*_', false);\n\t        result += ' title=\"' + title + '\"';\n\t      }\n\t\n\t      if (width && height) {\n\t        width = width === '*' ? 'auto' : width;\n\t        height = height === '*' ? 'auto' : height;\n\t\n\t        result += ' width=\"' + width + '\"';\n\t        result += ' height=\"' + height + '\"';\n\t      }\n\t\n\t      result += ' />';\n\t\n\t      return result;\n\t    }\n\t\n\t    // First, handle reference-style labeled images: ![alt text][id]\n\t    text = text.replace(referenceRegExp, writeImageTag);\n\t\n\t    // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n\t    text = text.replace(inlineRegExp, writeImageTag);\n\t\n\t    text = globals.converter._dispatch('images.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  showdown.subParser('italicsAndBold', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\t\n\t    if (options.literalMidWordUnderscores) {\n\t      //underscores\n\t      // Since we are consuming a \\s character, we need to add it\n\t      text = text.replace(/(^|\\s|>|\\b)__(?=\\S)([\\s\\S]+?)__(?=\\b|<|\\s|$)/gm, '$1<strong>$2</strong>');\n\t      text = text.replace(/(^|\\s|>|\\b)_(?=\\S)([\\s\\S]+?)_(?=\\b|<|\\s|$)/gm, '$1<em>$2</em>');\n\t      //asterisks\n\t      text = text.replace(/(\\*\\*)(?=\\S)([^\\r]*?\\S[*]*)\\1/g, '<strong>$2</strong>');\n\t      text = text.replace(/(\\*)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n\t    } else {\n\t      // <strong> must go first:\n\t      text = text.replace(/(\\*\\*|__)(?=\\S)([^\\r]*?\\S[*_]*)\\1/g, '<strong>$2</strong>');\n\t      text = text.replace(/(\\*|_)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n\t    }\n\t\n\t    text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Form HTML ordered (numbered) and unordered (bulleted) lists.\n\t   */\n\t  showdown.subParser('lists', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('lists.before', text, options, globals);\n\t\n\t    /**\n\t     * Process the contents of a single ordered or unordered list, splitting it\n\t     * into individual list items.\n\t     * @param {string} listStr\n\t     * @param {boolean} trimTrailing\n\t     * @returns {string}\n\t     */\n\t    function processListItems(listStr, trimTrailing) {\n\t      // The $g_list_level global keeps track of when we're inside a list.\n\t      // Each time we enter a list, we increment it; when we leave a list,\n\t      // we decrement. If it's zero, we're not in a list anymore.\n\t      //\n\t      // We do this because when we're not inside a list, we want to treat\n\t      // something like this:\n\t      //\n\t      //    I recommend upgrading to version\n\t      //    8. Oops, now this line is treated\n\t      //    as a sub-list.\n\t      //\n\t      // As a single paragraph, despite the fact that the second line starts\n\t      // with a digit-period-space sequence.\n\t      //\n\t      // Whereas when we're inside a list (or sub-list), that line will be\n\t      // treated as the start of a sub-list. What a kludge, huh? This is\n\t      // an aspect of Markdown's syntax that's hard to parse perfectly\n\t      // without resorting to mind-reading. Perhaps the solution is to\n\t      // change the syntax rules such that sub-lists must start with a\n\t      // starting cardinal number; e.g. \"1.\" or \"a.\".\n\t      globals.gListLevel++;\n\t\n\t      // trim trailing blank lines:\n\t      listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\t\n\t      // attacklab: add sentinel to emulate \\z\n\t      listStr += '~0';\n\t\n\t      var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,\n\t          isParagraphed = /\\n[ \\t]*\\n(?!~0)/.test(listStr);\n\t\n\t      // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\n\t      // which is a syntax breaking change\n\t      // activating this option reverts to old behavior\n\t      if (options.disableForced4SpacesIndentedSublists) {\n\t        rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0|\\2([*+-]|\\d+[.])[ \\t]+))/gm;\n\t      }\n\t\n\t      listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n\t        checked = checked && checked.trim() !== '';\n\t\n\t        var item = showdown.subParser('outdent')(m4, options, globals),\n\t            bulletStyle = '';\n\t\n\t        // Support for github tasklists\n\t        if (taskbtn && options.tasklists) {\n\t          bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n\t          item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n\t            var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n\t            if (checked) {\n\t              otp += ' checked';\n\t            }\n\t            otp += '>';\n\t            return otp;\n\t          });\n\t        }\n\t\n\t        // ISSUE #312\n\t        // This input: - - - a\n\t        // causes trouble to the parser, since it interprets it as:\n\t        // <ul><li><li><li>a</li></li></li></ul>\n\t        // instead of:\n\t        // <ul><li>- - a</li></ul>\n\t        // So, to prevent it, we will put a marker (~A)in the beginning of the line\n\t        // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\n\t        item = item.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g, function (wm2) {\n\t          return '~A' + wm2;\n\t        });\n\t\n\t        // m1 - Leading line or\n\t        // Has a double return (multi paragraph) or\n\t        // Has sublist\n\t        if (m1 || item.search(/\\n{2,}/) > -1) {\n\t          item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n\t          item = showdown.subParser('blockGamut')(item, options, globals);\n\t        } else {\n\t          // Recursion for sub-lists:\n\t          item = showdown.subParser('lists')(item, options, globals);\n\t          item = item.replace(/\\n$/, ''); // chomp(item)\n\t          item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\n\t          // Colapse double linebreaks\n\t          item = item.replace(/\\n\\n+/g, '\\n\\n');\n\t          // replace double linebreaks with a placeholder\n\t          item = item.replace(/\\n\\n/g, '~B');\n\t          if (isParagraphed) {\n\t            item = showdown.subParser('paragraphs')(item, options, globals);\n\t          } else {\n\t            item = showdown.subParser('spanGamut')(item, options, globals);\n\t          }\n\t          item = item.replace(/~B/g, '\\n\\n');\n\t        }\n\t\n\t        // now we need to remove the marker (~A)\n\t        item = item.replace('~A', '');\n\t        // we can finally wrap the line in list item tags\n\t        item = '<li' + bulletStyle + '>' + item + '</li>\\n';\n\t\n\t        return item;\n\t      });\n\t\n\t      // attacklab: strip sentinel\n\t      listStr = listStr.replace(/~0/g, '');\n\t\n\t      globals.gListLevel--;\n\t\n\t      if (trimTrailing) {\n\t        listStr = listStr.replace(/\\s+$/, '');\n\t      }\n\t\n\t      return listStr;\n\t    }\n\t\n\t    /**\n\t     * Check and parse consecutive lists (better fix for issue #142)\n\t     * @param {string} list\n\t     * @param {string} listType\n\t     * @param {boolean} trimTrailing\n\t     * @returns {string}\n\t     */\n\t    function parseConsecutiveLists(list, listType, trimTrailing) {\n\t      // check if we caught 2 or more consecutive lists by mistake\n\t      // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\n\t      var olRgx = options.disableForced4SpacesIndentedSublists ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm,\n\t          ulRgx = options.disableForced4SpacesIndentedSublists ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm,\n\t          counterRxg = listType === 'ul' ? olRgx : ulRgx,\n\t          result = '';\n\t\n\t      if (list.search(counterRxg) !== -1) {\n\t        (function parseCL(txt) {\n\t          var pos = txt.search(counterRxg);\n\t          if (pos !== -1) {\n\t            // slice\n\t            result += '\\n<' + listType + '>\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n';\n\t\n\t            // invert counterType and listType\n\t            listType = listType === 'ul' ? 'ol' : 'ul';\n\t            counterRxg = listType === 'ul' ? olRgx : ulRgx;\n\t\n\t            //recurse\n\t            parseCL(txt.slice(pos));\n\t          } else {\n\t            result += '\\n<' + listType + '>\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n';\n\t          }\n\t        })(list);\n\t      } else {\n\t        result = '\\n<' + listType + '>\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n';\n\t      }\n\t\n\t      return result;\n\t    }\n\t\n\t    // add sentinel to hack around khtml/safari bug:\n\t    // http://bugs.webkit.org/show_bug.cgi?id=11231\n\t    text += '~0';\n\t\n\t    if (globals.gListLevel) {\n\t      text = text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm, function (wholeMatch, list, m2) {\n\t        var listType = m2.search(/[*+-]/g) > -1 ? 'ul' : 'ol';\n\t        return parseConsecutiveLists(list, listType, true);\n\t      });\n\t    } else {\n\t      text = text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm, function (wholeMatch, m1, list, m3) {\n\t        var listType = m3.search(/[*+-]/g) > -1 ? 'ul' : 'ol';\n\t        return parseConsecutiveLists(list, listType, false);\n\t      });\n\t    }\n\t\n\t    // strip sentinel\n\t    text = text.replace(/~0/, '');\n\t    text = globals.converter._dispatch('lists.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Remove one level of line-leading tabs or spaces\n\t   */\n\t  showdown.subParser('outdent', function (text) {\n\t    'use strict';\n\t\n\t    // attacklab: hack around Konqueror 3.5.4 bug:\n\t    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n\t\n\t    text = text.replace(/^(\\t|[ ]{1,4})/gm, '~0'); // attacklab: g_tab_width\n\t\n\t    // attacklab: clean up hack\n\t    text = text.replace(/~0/g, '');\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   *\n\t   */\n\t  showdown.subParser('paragraphs', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n\t    // Strip leading and trailing lines:\n\t    text = text.replace(/^\\n+/g, '');\n\t    text = text.replace(/\\n+$/g, '');\n\t\n\t    var grafs = text.split(/\\n{2,}/g),\n\t        grafsOut = [],\n\t        end = grafs.length; // Wrap <p> tags\n\t\n\t    for (var i = 0; i < end; i++) {\n\t      var str = grafs[i];\n\t      // if this is an HTML marker, copy it\n\t      if (str.search(/~(K|G)(\\d+)\\1/g) >= 0) {\n\t        grafsOut.push(str);\n\t      } else {\n\t        str = showdown.subParser('spanGamut')(str, options, globals);\n\t        str = str.replace(/^([ \\t]*)/g, '<p>');\n\t        str += '</p>';\n\t        grafsOut.push(str);\n\t      }\n\t    }\n\t\n\t    /** Unhashify HTML blocks */\n\t    end = grafsOut.length;\n\t    for (i = 0; i < end; i++) {\n\t      var blockText = '',\n\t          grafsOutIt = grafsOut[i],\n\t          codeFlag = false;\n\t      // if this is a marker for an html block...\n\t      while (grafsOutIt.search(/~(K|G)(\\d+)\\1/) >= 0) {\n\t        var delim = RegExp.$1,\n\t            num = RegExp.$2;\n\t\n\t        if (delim === 'K') {\n\t          blockText = globals.gHtmlBlocks[num];\n\t        } else {\n\t          // we need to check if ghBlock is a false positive\n\t          if (codeFlag) {\n\t            // use encoded version of all text\n\t            blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text);\n\t          } else {\n\t            blockText = globals.ghCodeBlocks[num].codeblock;\n\t          }\n\t        }\n\t        blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\t\n\t        grafsOutIt = grafsOutIt.replace(/(\\n\\n)?~(K|G)\\d+\\2(\\n\\n)?/, blockText);\n\t        // Check if grafsOutIt is a pre->code\n\t        if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n\t          codeFlag = true;\n\t        }\n\t      }\n\t      grafsOut[i] = grafsOutIt;\n\t    }\n\t    text = grafsOut.join('\\n');\n\t    // Strip leading and trailing lines:\n\t    text = text.replace(/^\\n+/g, '');\n\t    text = text.replace(/\\n+$/g, '');\n\t    return globals.converter._dispatch('paragraphs.after', text, options, globals);\n\t  });\n\t\n\t  /**\n\t   * Run extension\n\t   */\n\t  showdown.subParser('runExtension', function (ext, text, options, globals) {\n\t    'use strict';\n\t\n\t    if (ext.filter) {\n\t      text = ext.filter(text, globals.converter, options);\n\t    } else if (ext.regex) {\n\t      // TODO remove this when old extension loading mechanism is deprecated\n\t      var re = ext.regex;\n\t      if (!re instanceof RegExp) {\n\t        re = new RegExp(re, 'g');\n\t      }\n\t      text = text.replace(re, ext.replace);\n\t    }\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * These are all the transformations that occur *within* block-level\n\t   * tags like paragraphs, headers, and list items.\n\t   */\n\t  showdown.subParser('spanGamut', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n\t    text = showdown.subParser('codeSpans')(text, options, globals);\n\t    text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n\t    text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\t\n\t    // Process anchor and image tags. Images must come first,\n\t    // because ![foo][f] looks like an anchor.\n\t    text = showdown.subParser('images')(text, options, globals);\n\t    text = showdown.subParser('anchors')(text, options, globals);\n\t\n\t    // Make links out of things like `<http://example.com/>`\n\t    // Must come after _DoAnchors(), because you can use < and >\n\t    // delimiters in inline links like [this](<url>).\n\t    text = showdown.subParser('autoLinks')(text, options, globals);\n\t    text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n\t    text = showdown.subParser('italicsAndBold')(text, options, globals);\n\t    text = showdown.subParser('strikethrough')(text, options, globals);\n\t\n\t    // Do hard breaks\n\t    if (options.simpleLineBreaks) {\n\t      // GFM style hard breaks\n\t      text = text.replace(/\\n/g, '<br />\\n');\n\t    } else {\n\t      // Vanilla hard breaks\n\t      text = text.replace(/  +\\n/g, '<br />\\n');\n\t    }\n\t\n\t    text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n\t    return text;\n\t  });\n\t\n\t  showdown.subParser('strikethrough', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    if (options.strikethrough) {\n\t      text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n\t      text = text.replace(/(?:~T){2}([\\s\\S]+?)(?:~T){2}/g, '<del>$1</del>');\n\t      text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n\t    }\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Strip any lines consisting only of spaces and tabs.\n\t   * This makes subsequent regexs easier to write, because we can\n\t   * match consecutive blank lines with /\\n+/ instead of something\n\t   * contorted like /[ \\t]*\\n+/\n\t   */\n\t  showdown.subParser('stripBlankLines', function (text) {\n\t    'use strict';\n\t\n\t    return text.replace(/^[ \\t]+$/mg, '');\n\t  });\n\t\n\t  /**\n\t   * Strips link definitions from text, stores the URLs and titles in\n\t   * hash references.\n\t   * Link defs are in the form: ^[id]: url \"optional title\"\n\t   */\n\t  showdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    var regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=~0))/gm;\n\t\n\t    // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n\t    text += '~0';\n\t\n\t    text = text.replace(regex, function (wholeMatch, linkId, url, width, height, blankLines, title) {\n\t      linkId = linkId.toLowerCase();\n\t      globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url); // Link IDs are case-insensitive\n\t\n\t      if (blankLines) {\n\t        // Oops, found blank lines, so it's not a title.\n\t        // Put back the parenthetical statement we stole.\n\t        return blankLines + title;\n\t      } else {\n\t        if (title) {\n\t          globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n\t        }\n\t        if (options.parseImgDimensions && width && height) {\n\t          globals.gDimensions[linkId] = {\n\t            width: width,\n\t            height: height\n\t          };\n\t        }\n\t      }\n\t      // Completely remove the definition from the text\n\t      return '';\n\t    });\n\t\n\t    // attacklab: strip sentinel\n\t    text = text.replace(/~0/, '');\n\t\n\t    return text;\n\t  });\n\t\n\t  showdown.subParser('tables', function (text, options, globals) {\n\t    'use strict';\n\t\n\t    if (!options.tables) {\n\t      return text;\n\t    }\n\t\n\t    var tableRgx = /^ {0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[\\s\\S]+?(?:\\n\\n|~0)/gm;\n\t\n\t    function parseStyles(sLine) {\n\t      if (/^:[ \\t]*--*$/.test(sLine)) {\n\t        return ' style=\"text-align:left;\"';\n\t      } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n\t        return ' style=\"text-align:right;\"';\n\t      } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n\t        return ' style=\"text-align:center;\"';\n\t      } else {\n\t        return '';\n\t      }\n\t    }\n\t\n\t    function parseHeaders(header, style) {\n\t      var id = '';\n\t      header = header.trim();\n\t      if (options.tableHeaderId) {\n\t        id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n\t      }\n\t      header = showdown.subParser('spanGamut')(header, options, globals);\n\t\n\t      return '<th' + id + style + '>' + header + '</th>\\n';\n\t    }\n\t\n\t    function parseCells(cell, style) {\n\t      var subText = showdown.subParser('spanGamut')(cell, options, globals);\n\t      return '<td' + style + '>' + subText + '</td>\\n';\n\t    }\n\t\n\t    function buildTable(headers, cells) {\n\t      var tb = '<table>\\n<thead>\\n<tr>\\n',\n\t          tblLgn = headers.length;\n\t\n\t      for (var i = 0; i < tblLgn; ++i) {\n\t        tb += headers[i];\n\t      }\n\t      tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\t\n\t      for (i = 0; i < cells.length; ++i) {\n\t        tb += '<tr>\\n';\n\t        for (var ii = 0; ii < tblLgn; ++ii) {\n\t          tb += cells[i][ii];\n\t        }\n\t        tb += '</tr>\\n';\n\t      }\n\t      tb += '</tbody>\\n</table>\\n';\n\t      return tb;\n\t    }\n\t\n\t    text = globals.converter._dispatch('tables.before', text, options, globals);\n\t\n\t    text = text.replace(tableRgx, function (rawTable) {\n\t\n\t      var i,\n\t          tableLines = rawTable.split('\\n');\n\t\n\t      // strip wrong first and last column if wrapped tables are used\n\t      for (i = 0; i < tableLines.length; ++i) {\n\t        if (/^ {0,3}\\|/.test(tableLines[i])) {\n\t          tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, '');\n\t        }\n\t        if (/\\|[ \\t]*$/.test(tableLines[i])) {\n\t          tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n\t        }\n\t      }\n\t\n\t      var rawHeaders = tableLines[0].split('|').map(function (s) {\n\t        return s.trim();\n\t      }),\n\t          rawStyles = tableLines[1].split('|').map(function (s) {\n\t        return s.trim();\n\t      }),\n\t          rawCells = [],\n\t          headers = [],\n\t          styles = [],\n\t          cells = [];\n\t\n\t      tableLines.shift();\n\t      tableLines.shift();\n\t\n\t      for (i = 0; i < tableLines.length; ++i) {\n\t        if (tableLines[i].trim() === '') {\n\t          continue;\n\t        }\n\t        rawCells.push(tableLines[i].split('|').map(function (s) {\n\t          return s.trim();\n\t        }));\n\t      }\n\t\n\t      if (rawHeaders.length < rawStyles.length) {\n\t        return rawTable;\n\t      }\n\t\n\t      for (i = 0; i < rawStyles.length; ++i) {\n\t        styles.push(parseStyles(rawStyles[i]));\n\t      }\n\t\n\t      for (i = 0; i < rawHeaders.length; ++i) {\n\t        if (showdown.helper.isUndefined(styles[i])) {\n\t          styles[i] = '';\n\t        }\n\t        headers.push(parseHeaders(rawHeaders[i], styles[i]));\n\t      }\n\t\n\t      for (i = 0; i < rawCells.length; ++i) {\n\t        var row = [];\n\t        for (var ii = 0; ii < headers.length; ++ii) {\n\t          if (showdown.helper.isUndefined(rawCells[i][ii])) {}\n\t          row.push(parseCells(rawCells[i][ii], styles[ii]));\n\t        }\n\t        cells.push(row);\n\t      }\n\t\n\t      return buildTable(headers, cells);\n\t    });\n\t\n\t    text = globals.converter._dispatch('tables.after', text, options, globals);\n\t\n\t    return text;\n\t  });\n\t\n\t  /**\n\t   * Swap back in all the special characters we've hidden.\n\t   */\n\t  showdown.subParser('unescapeSpecialChars', function (text) {\n\t    'use strict';\n\t\n\t    text = text.replace(/~E(\\d+)E/g, function (wholeMatch, m1) {\n\t      var charCodeToReplace = parseInt(m1);\n\t      return String.fromCharCode(charCodeToReplace);\n\t    });\n\t    return text;\n\t  });\n\t\n\t  var root = this;\n\t\n\t  // CommonJS/nodeJS Loader\n\t  if (typeof module !== 'undefined' && module.exports) {\n\t    module.exports = showdown;\n\t\n\t    // AMD Loader\n\t  } else if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t      'use strict';\n\t\n\t      return showdown;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\n\t    // Regular Browser loader\n\t  } else {\n\t    root.showdown = showdown;\n\t  }\n\t}).call(undefined);\n\t\n\t//# sourceMappingURL=showdown.js.map\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.TextareaEditor = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _HTMLElement2 = __webpack_require__(6);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar TextareaEditor = exports.TextareaEditor = function (_HTMLElement) {\n\t\t_inherits(TextareaEditor, _HTMLElement);\n\t\n\t\t/**\r\n\t  * Represents TextareaEditor\r\n\t  *\r\n\t  * @constructor\r\n\t  * @param {String} className\r\n\t  * @param {Element} parent\r\n\t  */\n\t\tfunction TextareaEditor(className, parent) {\n\t\t\t_classCallCheck(this, TextareaEditor);\n\t\n\t\t\treturn _possibleConstructorReturn(this, (TextareaEditor.__proto__ || Object.getPrototypeOf(TextareaEditor)).call(this, 'textarea', className, parent));\n\t\t}\n\t\n\t\t/**\r\n\t  * Get the initialized editor element\r\n\t  *\r\n\t  * @returns {Element} - element of the editor\r\n\t  */\n\t\n\t\n\t\t_createClass(TextareaEditor, [{\n\t\t\tkey: 'getContent',\n\t\n\t\n\t\t\t/**\r\n\t   * Get the content of the editor\r\n\t   *\r\n\t   * @returns {String} - the content of editor\r\n\t   */\n\t\t\tvalue: function getContent() {\n\t\t\t\treturn this._element.value;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Set the content of the editor\r\n\t   *\r\n\t   * @param {String} content - content for the editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'setContent',\n\t\t\tvalue: function setContent(content) {\n\t\t\t\tthis._element.value = content;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Alternative for getContent()\r\n\t   * @see getContent\r\n\t   *\r\n\t   * @returns {String} - the content of editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'getMarkdown',\n\t\t\tvalue: function getMarkdown() {\n\t\t\t\treturn this.getContent();\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Alternative for setContent()\r\n\t   * @see setContent\r\n\t   *\r\n\t   * @param {String} markdown - content for the editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'setMarkdown',\n\t\t\tvalue: function setMarkdown(markdown) {\n\t\t\t\tthis.setContent(markdown);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Append the given value to the content of the editor\r\n\t   *\r\n\t   * @param {String} content - additional content for the editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'appendContent',\n\t\t\tvalue: function appendContent(content) {\n\t\t\t\tthis._element.value = this._editor.value + content;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Prepend the given value to the content of the editor\r\n\t   *\r\n\t   * @param {String} content - additional content for the editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'prependContent',\n\t\t\tvalue: function prependContent(content) {\n\t\t\t\tthis._element.value = content + this._editor.value;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Refresh preview automatically if the editor content is changed\r\n\t   *\r\n\t   * @param {Element|Array} element - the element or array of elements that will contain the compiled html content\r\n\t   * @param {Converter} converter - the converter that converts the markdown to html\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'convertMarkdownToHtmlEventListener',\n\t\t\tvalue: function convertMarkdownToHtmlEventListener(element, converter) {\n\t\t\t\tvar _this2 = this;\n\t\n\t\t\t\tthis.addEventListener('input', function () {\n\t\t\t\t\tvar html = converter.makeHtml(_this2.getContent());\n\t\t\t\t\tif (element instanceof Array) {\n\t\t\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\t\t\tvar _didIteratorError = false;\n\t\t\t\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tfor (var _iterator = element[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\t\t\tvar e = _step.value;\n\t\n\t\t\t\t\t\t\t\te.innerHTML = html;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t\t\t_iteratorError = err;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.innerHTML = html;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Copy content of editor to hidden input automatically\r\n\t   *\r\n\t   * @param {Element} element - this element gets the content of the editor\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'copyMarkdownContentToHiddenInputEventListener',\n\t\t\tvalue: function copyMarkdownContentToHiddenInputEventListener(element) {\n\t\t\t\tvar _this3 = this;\n\t\n\t\t\t\tthis.addEventListener('input', function () {\n\t\t\t\t\treturn element.innerHTML = _this3.getContent();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Process the content by triggering the input event\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: 'processContent',\n\t\t\tvalue: function processContent() {\n\t\t\t\tvar e = new Event('input');\n\t\t\t\tthis._element.dispatchEvent(e);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getEditor',\n\t\t\tget: function get() {\n\t\t\t\treturn this._element;\n\t\t\t}\n\t\t}]);\n\n\t\treturn TextareaEditor;\n\t}(_HTMLElement2.HTMLElement);\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar HTMLElement = exports.HTMLElement = function () {\n\t\n\t\t/**\r\n\t  * Represents a HTMLElement\r\n\t  *\r\n\t  * @constructor\r\n\t  * @param {String} type - the string value of the html tag\r\n\t  * @param {String} className - the name of the html element\r\n\t  * @param {Element} parent - the parent element of the created element\r\n\t  * @param {Object} params - additional parameters for the created element\r\n\t  */\n\t\tfunction HTMLElement(type, className, parent) {\n\t\t\tvar params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\t\n\t\t\t_classCallCheck(this, HTMLElement);\n\t\n\t\t\tthis.init(type, className, parent, params);\n\t\t}\n\t\n\t\t/**\r\n\t  * Initialize HTML element\r\n\t  * Get a type, a className and additional params to create a html element\r\n\t  * and append the created element to the parent\r\n\t  *\r\n\t  * @param {String} type - the string value of the html tag\r\n\t  * @param {String} className - the name of the html element\r\n\t  * @param {Element} parent - the parent element of the created element\r\n\t  * @param {Object} params - additional parameters for the created element\r\n\t  */\n\t\n\t\n\t\t_createClass(HTMLElement, [{\n\t\t\tkey: \"init\",\n\t\t\tvalue: function init(type, className, parent, params) {\n\t\t\t\t// Create element\n\t\t\t\tvar element = HTMLElement.createElement(type, className, params);\n\t\n\t\t\t\t// Append element to parent\n\t\t\t\tHTMLElement.appendElementToParent(element, parent);\n\t\n\t\t\t\t// Get the element from the dom\n\t\t\t\tthis.setElementByClassName(className);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Get the element\r\n\t   *\r\n\t   * @returns {Element} - the element\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"setElementByClassName\",\n\t\n\t\n\t\t\t/**\r\n\t   * Get the element by the class name with querySelector\r\n\t   *\r\n\t   * @param {String} className - the string value of the class name without dot\r\n\t   */\n\t\t\tvalue: function setElementByClassName(className) {\n\t\t\t\tthis._element = document.querySelector(\".\" + className);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Create an eventListener for the html element\r\n\t   *\r\n\t   * @param {String} event - the string value of the event name\r\n\t   * @param {Function} closure - the function that should be run when the event is fired\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"addEventListener\",\n\t\t\tvalue: function addEventListener(event, closure) {\n\t\t\t\tthis._element.addEventListener(event, closure);\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Create a new element of given type with class name and parameters\r\n\t   *\r\n\t   * @param {String} type - the string value of type of the new element\r\n\t   * @param {String} className - the string value of the class attribute of the element without dot\r\n\t   * @param {Object} params - parameter object to set attribute of the element\r\n\t   * @returns {Element} - return a new element\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"getElement\",\n\t\t\tget: function get() {\n\t\t\t\treturn this._element;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Set the element\r\n\t   *\r\n\t   * @param {Element} element - the new value of the element\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"setElement\",\n\t\t\tset: function set(element) {\n\t\t\t\tthis._element = element;\n\t\t\t}\n\t\t}], [{\n\t\t\tkey: \"createElement\",\n\t\t\tvalue: function createElement(type, className, params) {\n\t\t\t\tvar element = document.createElement(type);\n\t\t\t\telement.className = className;\n\t\n\t\t\t\tvar _iteratorNormalCompletion = true;\n\t\t\t\tvar _didIteratorError = false;\n\t\t\t\tvar _iteratorError = undefined;\n\t\n\t\t\t\ttry {\n\t\t\t\t\tfor (var _iterator = Object.keys(params)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\t\t\t\t\tvar key = _step.value;\n\t\n\t\t\t\t\t\telement[key] = params[key];\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\t_didIteratorError = true;\n\t\t\t\t\t_iteratorError = err;\n\t\t\t\t} finally {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t\t\t\t\t_iterator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif (_didIteratorError) {\n\t\t\t\t\t\t\tthrow _iteratorError;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn element;\n\t\t\t}\n\t\n\t\t\t/**\r\n\t   * Append the element to the parent element as a child\r\n\t   *\r\n\t   * @param {Element} element - the element that will be appended to the parent\r\n\t   * @param {Element} parent - the parent element that will contain the given element\r\n\t   */\n\t\n\t\t}, {\n\t\t\tkey: \"appendElementToParent\",\n\t\t\tvalue: function appendElementToParent(element, parent) {\n\t\t\t\tparent.appendChild(element);\n\t\t\t}\n\t\t}]);\n\n\t\treturn HTMLElement;\n\t}();\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\texports.Preview = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _HTMLElement2 = __webpack_require__(6);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Preview = exports.Preview = function (_HTMLElement) {\n\t\t_inherits(Preview, _HTMLElement);\n\t\n\t\t/**\r\n\t  * Represents Preview\r\n\t  *\r\n\t  * @constructor\r\n\t  * @param className\r\n\t  * @param parent\r\n\t  */\n\t\tfunction Preview(className, parent) {\n\t\t\t_classCallCheck(this, Preview);\n\t\n\t\t\treturn _possibleConstructorReturn(this, (Preview.__proto__ || Object.getPrototypeOf(Preview)).call(this, 'div', className, parent));\n\t\t}\n\t\n\t\t/**\r\n\t  * Get the preview element\r\n\t  *\r\n\t  * @returns {Element} - the preview element\r\n\t  */\n\t\n\t\n\t\t_createClass(Preview, [{\n\t\t\tkey: 'getPreview',\n\t\t\tget: function get() {\n\t\t\t\treturn this._element;\n\t\t\t}\n\t\t}]);\n\n\t\treturn Preview;\n\t}(_HTMLElement2.HTMLElement);\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t/* **********************************************\n\t     Begin prism-core.js\n\t********************************************** */\n\t\n\tvar _self = typeof window !== 'undefined' ? window // if in browser\n\t: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n\t: {} // if in node js\n\t;\n\t\n\t/**\n\t * Prism: Lightweight, robust, elegant syntax highlighting\n\t * MIT license http://www.opensource.org/licenses/mit-license.php/\n\t * @author Lea Verou http://lea.verou.me\n\t */\n\t\n\tvar Prism = function () {\n\t\n\t\t// Private helper vars\n\t\tvar lang = /\\blang(?:uage)?-(\\w+)\\b/i;\n\t\tvar uniqueId = 0;\n\t\n\t\tvar _ = _self.Prism = {\n\t\t\tutil: {\n\t\t\t\tencode: function encode(tokens) {\n\t\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\n\t\t\t\ttype: function type(o) {\n\t\t\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t\t\t},\n\t\n\t\t\t\tobjId: function objId(obj) {\n\t\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t\t}\n\t\t\t\t\treturn obj['__id'];\n\t\t\t\t},\n\t\n\t\t\t\t// Deep clone a language definition (e.g. to extend it)\n\t\t\t\tclone: function clone(o) {\n\t\t\t\t\tvar type = _.util.type(o);\n\t\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\t\tvar clone = {};\n\t\n\t\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\treturn clone;\n\t\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\t\t// Check for existence for IE8\n\t\t\t\t\t\t\treturn o.map && o.map(function (v) {\n\t\t\t\t\t\t\t\treturn _.util.clone(v);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tlanguages: {\n\t\t\t\textend: function extend(id, redef) {\n\t\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\t\n\t\t\t\t\tfor (var key in redef) {\n\t\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn lang;\n\t\t\t\t},\n\t\n\t\t\t\t/**\n\t    * Insert a token before another token in a language literal\n\t    * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t    * we cannot just provide an object, we need anobject and a key.\n\t    * @param inside The key (or language id) of the parent\n\t    * @param before The key to insert before. If not provided, the function appends instead.\n\t    * @param insert Object with the key/value pairs to insert\n\t    * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t    */\n\t\t\t\tinsertBefore: function insertBefore(inside, before, insert, root) {\n\t\t\t\t\troot = root || _.languages;\n\t\t\t\t\tvar grammar = root[inside];\n\t\n\t\t\t\t\tif (arguments.length == 2) {\n\t\t\t\t\t\tinsert = arguments[1];\n\t\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn grammar;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar ret = {};\n\t\n\t\t\t\t\tfor (var token in grammar) {\n\t\n\t\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\t\n\t\t\t\t\t\t\tif (token == before) {\n\t\n\t\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\n\t\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Update references in other language definitions\n\t\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\n\t\t\t\t\treturn root[inside] = ret;\n\t\t\t\t},\n\t\n\t\t\t\t// Traverse a language definition with Depth First Search\n\t\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\t\tvisited = visited || {};\n\t\t\t\t\tfor (var i in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\t\n\t\t\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t\t\t} else if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: {},\n\t\n\t\t\thighlightAll: function highlightAll(async, callback) {\n\t\t\t\tvar env = {\n\t\t\t\t\tcallback: callback,\n\t\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t\t};\n\t\n\t\t\t\t_.hooks.run(\"before-highlightall\", env);\n\t\n\t\t\t\tvar elements = env.elements || document.querySelectorAll(env.selector);\n\t\n\t\t\t\tfor (var i = 0, element; element = elements[i++];) {\n\t\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\thighlightElement: function highlightElement(element, async, callback) {\n\t\t\t\t// Find language\n\t\t\t\tvar language,\n\t\t\t\t    grammar,\n\t\t\t\t    parent = element;\n\t\n\t\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t}\n\t\n\t\t\t\tif (parent) {\n\t\t\t\t\tlanguage = (parent.className.match(lang) || [, ''])[1].toLowerCase();\n\t\t\t\t\tgrammar = _.languages[language];\n\t\t\t\t}\n\t\n\t\t\t\t// Set language on the element, if not present\n\t\t\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\n\t\t\t\t// Set language on the parent, for styling\n\t\t\t\tparent = element.parentNode;\n\t\n\t\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t\t}\n\t\n\t\t\t\tvar code = element.textContent;\n\t\n\t\t\t\tvar env = {\n\t\t\t\t\telement: element,\n\t\t\t\t\tlanguage: language,\n\t\t\t\t\tgrammar: grammar,\n\t\t\t\t\tcode: code\n\t\t\t\t};\n\t\n\t\t\t\t_.hooks.run('before-sanity-check', env);\n\t\n\t\t\t\tif (!env.code || !env.grammar) {\n\t\t\t\t\tif (env.code) {\n\t\t\t\t\t\tenv.element.textContent = env.code;\n\t\t\t\t\t}\n\t\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t_.hooks.run('before-highlight', env);\n\t\n\t\t\t\tif (async && _self.Worker) {\n\t\t\t\t\tvar worker = new Worker(_.filename);\n\t\n\t\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\t\tenv.highlightedCode = evt.data;\n\t\n\t\t\t\t\t\t_.hooks.run('before-insert', env);\n\t\n\t\t\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\t\n\t\t\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\t\t};\n\t\n\t\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\t\tcode: env.code,\n\t\t\t\t\t\timmediateClose: true\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\t\n\t\t\t\t\t_.hooks.run('before-insert', env);\n\t\n\t\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\t\n\t\t\t\t\tcallback && callback.call(element);\n\t\n\t\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\thighlight: function highlight(text, grammar, language) {\n\t\t\t\tvar tokens = _.tokenize(text, grammar);\n\t\t\t\treturn Token.stringify(_.util.encode(tokens), language);\n\t\t\t},\n\t\n\t\t\ttokenize: function tokenize(text, grammar, language) {\n\t\t\t\tvar Token = _.Token;\n\t\n\t\t\t\tvar strarr = [text];\n\t\n\t\t\t\tvar rest = grammar.rest;\n\t\n\t\t\t\tif (rest) {\n\t\t\t\t\tfor (var token in rest) {\n\t\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdelete grammar.rest;\n\t\t\t\t}\n\t\n\t\t\t\ttokenloop: for (var token in grammar) {\n\t\t\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar patterns = grammar[token];\n\t\t\t\t\tpatterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\t\n\t\t\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\t\t    inside = pattern.inside,\n\t\t\t\t\t\t    lookbehind = !!pattern.lookbehind,\n\t\t\t\t\t\t    greedy = !!pattern.greedy,\n\t\t\t\t\t\t    lookbehindLength = 0,\n\t\t\t\t\t\t    alias = pattern.alias;\n\t\n\t\t\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tpattern = pattern.pattern || pattern;\n\t\n\t\t\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\t\t\tfor (var i = 0, pos = 0; i < strarr.length; pos += strarr[i].length, ++i) {\n\t\n\t\t\t\t\t\t\tvar str = strarr[i];\n\t\n\t\t\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\t\t\tbreak tokenloop;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tpattern.lastIndex = 0;\n\t\n\t\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\t    delNum = 1;\n\t\n\t\t\t\t\t\t\t// Greedy patterns can override/remove up to two previously matched tokens\n\t\t\t\t\t\t\tif (!match && greedy && i != strarr.length - 1) {\n\t\t\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\t\t\tmatch = pattern.exec(text);\n\t\t\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t\t\t    p = pos;\n\t\n\t\t\t\t\t\t\t\tfor (var len = strarr.length; k < len && p < to; ++k) {\n\t\t\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t/*\n\t        * If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t        * If strarr[k - 1] is greedy we are in conflict with another greedy pattern\n\t        */\n\t\t\t\t\t\t\t\tif (strarr[i] instanceof Token || strarr[k - 1].greedy) {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif (lookbehind) {\n\t\t\t\t\t\t\t\tlookbehindLength = match[1].length;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t\t\t    after = str.slice(to);\n\t\n\t\t\t\t\t\t\tvar args = [i, delNum];\n\t\n\t\t\t\t\t\t\tif (before) {\n\t\t\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n\t\n\t\t\t\t\t\t\targs.push(wrapped);\n\t\n\t\t\t\t\t\t\tif (after) {\n\t\t\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn strarr;\n\t\t\t},\n\t\n\t\t\thooks: {\n\t\t\t\tall: {},\n\t\n\t\t\t\tadd: function add(name, callback) {\n\t\t\t\t\tvar hooks = _.hooks.all;\n\t\n\t\t\t\t\thooks[name] = hooks[name] || [];\n\t\n\t\t\t\t\thooks[name].push(callback);\n\t\t\t\t},\n\t\n\t\t\t\trun: function run(name, env) {\n\t\t\t\t\tvar callbacks = _.hooks.all[name];\n\t\n\t\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tfor (var i = 0, callback; callback = callbacks[i++];) {\n\t\t\t\t\t\tcallback(env);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\tvar Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n\t\t\tthis.type = type;\n\t\t\tthis.content = content;\n\t\t\tthis.alias = alias;\n\t\t\t// Copy of the full string this token was created from\n\t\t\tthis.length = (matchedStr || \"\").length | 0;\n\t\t\tthis.greedy = !!greedy;\n\t\t};\n\t\n\t\tToken.stringify = function (o, language, parent) {\n\t\t\tif (typeof o == 'string') {\n\t\t\t\treturn o;\n\t\t\t}\n\t\n\t\t\tif (_.util.type(o) === 'Array') {\n\t\t\t\treturn o.map(function (element) {\n\t\t\t\t\treturn Token.stringify(element, language, o);\n\t\t\t\t}).join('');\n\t\t\t}\n\t\n\t\t\tvar env = {\n\t\t\t\ttype: o.type,\n\t\t\t\tcontent: Token.stringify(o.content, language, parent),\n\t\t\t\ttag: 'span',\n\t\t\t\tclasses: ['token', o.type],\n\t\t\t\tattributes: {},\n\t\t\t\tlanguage: language,\n\t\t\t\tparent: parent\n\t\t\t};\n\t\n\t\t\tif (env.type == 'comment') {\n\t\t\t\tenv.attributes['spellcheck'] = 'true';\n\t\t\t}\n\t\n\t\t\tif (o.alias) {\n\t\t\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t}\n\t\n\t\t\t_.hooks.run('wrap', env);\n\t\n\t\t\tvar attributes = Object.keys(env.attributes).map(function (name) {\n\t\t\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t\t}).join(' ');\n\t\n\t\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\t\t};\n\t\n\t\tif (!_self.document) {\n\t\t\tif (!_self.addEventListener) {\n\t\t\t\t// in Node.js\n\t\t\t\treturn _self.Prism;\n\t\t\t}\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\t    lang = message.language,\n\t\t\t\t    code = message.code,\n\t\t\t\t    immediateClose = message.immediateClose;\n\t\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\n\t\t\treturn _self.Prism;\n\t\t}\n\t\n\t\t//Get current script and highlight\n\t\tvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\t\n\t\tif (script) {\n\t\t\t_.filename = script.src;\n\t\n\t\t\tif (document.addEventListener && !script.hasAttribute('data-manual')) {\n\t\t\t\tif (document.readyState !== \"loading\") {\n\t\t\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn _self.Prism;\n\t}();\n\t\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = Prism;\n\t}\n\t\n\t// hack for components to work correctly in node.js\n\tif (typeof global !== 'undefined') {\n\t\tglobal.Prism = Prism;\n\t}\n\t\n\t/* **********************************************\n\t     Begin prism-markup.js\n\t********************************************** */\n\t\n\tPrism.languages.markup = {\n\t\t'comment': /<!--[\\w\\W]*?-->/,\n\t\t'prolog': /<\\?[\\w\\W]+?\\?>/,\n\t\t'doctype': /<!DOCTYPE[\\w\\W]+?>/i,\n\t\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n\t\t'tag': {\n\t\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\t\tinside: {\n\t\t\t\t'tag': {\n\t\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /[=>\"']/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\/?>/,\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t}\n\t\t},\n\t\t'entity': /&#?[\\da-z]{1,8};/i\n\t};\n\t\n\t// Plugin to make entity title show the real entity, idea by Roman Komarov\n\tPrism.hooks.add('wrap', function (env) {\n\t\n\t\tif (env.type === 'entity') {\n\t\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t\t}\n\t});\n\t\n\tPrism.languages.xml = Prism.languages.markup;\n\tPrism.languages.html = Prism.languages.markup;\n\tPrism.languages.mathml = Prism.languages.markup;\n\tPrism.languages.svg = Prism.languages.markup;\n\t\n\t/* **********************************************\n\t     Begin prism-css.js\n\t********************************************** */\n\t\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\n\t\t'string': {\n\t\t\tpattern: /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n\t\t'important': /\\B!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:]/\n\t};\n\t\n\tPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\n\t\n\tif (Prism.languages.markup) {\n\t\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t\t'style': {\n\t\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.css,\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t});\n\t\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, Prism.languages.markup.tag);\n\t}\n\t\n\t/* **********************************************\n\t     Begin prism-clike.js\n\t********************************************** */\n\t\n\tPrism.languages.clike = {\n\t\t'comment': [{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\tlookbehind: true\n\t\t}, {\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}],\n\t\t'string': {\n\t\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\tpunctuation: /(\\.|\\\\)/\n\t\t\t}\n\t\t},\n\t\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t\t'boolean': /\\b(true|false)\\b/,\n\t\t'function': /[a-z0-9_]+(?=\\()/i,\n\t\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n\t\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t\t'punctuation': /[{}[\\];(),.:]/\n\t};\n\t\n\t/* **********************************************\n\t     Begin prism-javascript.js\n\t********************************************** */\n\t\n\tPrism.languages.javascript = Prism.languages.extend('clike', {\n\t\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n\t\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,\n\t\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*\\*?|\\/|~|\\^|%|\\.{3}/\n\t});\n\t\n\tPrism.languages.insertBefore('javascript', 'keyword', {\n\t\t'regex': {\n\t\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('javascript', 'string', {\n\t\t'template-string': {\n\t\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'interpolation': {\n\t\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t\t},\n\t\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'string': /[\\s\\S]+/\n\t\t\t}\n\t\t}\n\t});\n\t\n\tif (Prism.languages.markup) {\n\t\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t\t'script': {\n\t\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: Prism.languages.javascript,\n\t\t\t\talias: 'language-javascript'\n\t\t\t}\n\t\t});\n\t}\n\t\n\tPrism.languages.js = Prism.languages.javascript;\n\t\n\t/* **********************************************\n\t     Begin prism-file-highlight.js\n\t********************************************** */\n\t\n\t(function () {\n\t\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tself.Prism.fileHighlight = function () {\n\t\n\t\t\tvar Extensions = {\n\t\t\t\t'js': 'javascript',\n\t\t\t\t'py': 'python',\n\t\t\t\t'rb': 'ruby',\n\t\t\t\t'ps1': 'powershell',\n\t\t\t\t'psm1': 'powershell',\n\t\t\t\t'sh': 'bash',\n\t\t\t\t'bat': 'batch',\n\t\t\t\t'h': 'c',\n\t\t\t\t'tex': 'latex'\n\t\t\t};\n\t\n\t\t\tif (Array.prototype.forEach) {\n\t\t\t\t// Check to prevent error in IE8\n\t\t\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t\t\tvar src = pre.getAttribute('data-src');\n\t\n\t\t\t\t\tvar language,\n\t\t\t\t\t    parent = pre;\n\t\t\t\t\tvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n\t\t\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (!language) {\n\t\t\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar code = document.createElement('code');\n\t\t\t\t\tcode.className = 'language-' + language;\n\t\n\t\t\t\t\tpre.textContent = '';\n\t\n\t\t\t\t\tcode.textContent = 'Loading…';\n\t\n\t\t\t\t\tpre.appendChild(code);\n\t\n\t\t\t\t\tvar xhr = new XMLHttpRequest();\n\t\n\t\t\t\t\txhr.open('GET', src, true);\n\t\n\t\t\t\t\txhr.onreadystatechange = function () {\n\t\t\t\t\t\tif (xhr.readyState == 4) {\n\t\n\t\t\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\n\t\t\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t\t} else if (xhr.status >= 400) {\n\t\t\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\n\t\t\t\t\txhr.send(null);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\n\t\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);\n\t})();\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// Calmdown.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9442687fa6a6b257018a","import { CONFIG } from './Config';\r\nimport { ShowdownConverter } from './ShowdownConverter';\r\nimport { TextareaEditor } from './TextareaEditor';\r\nimport { Preview } from './Preview';\r\nimport { HTMLElement } from './HTMLElement';\r\n//import * as hljs from 'highlight.js';\r\nimport * as Prism from 'prismjs/';\r\n\r\nexport default class Calmdown{\r\n\r\n\t/**\r\n\t * Represents Calmdown\r\n\t *\r\n\t * @constructor\r\n\t * @param {Object} settings\r\n\t */\r\n\tconstructor(settings = {}){\r\n\t\tthis.setDefaults();\r\n\t\tthis.init();\r\n\t}\r\n\r\n\t/**\r\n\t * Set the default values for the Calmdown properties\r\n\t *\r\n\t * @param {Object} settings\r\n\t */\r\n\tsetDefaults(settings){\r\n\t\tthis.settings = Object.assign(CONFIG, settings);\r\n\t\tthis.calmdown = document.querySelector(`.${this.settings.selector}`);\r\n\t\t//this.codeHighlighter = hljs;\r\n\t\tthis.codeHighlighter = Prism;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize Calmdown\r\n\t */\r\n\tinit(){\r\n\t\tthis.initCodeHightlight();\r\n\t\tthis.initConverter();\r\n\t\tthis.initEditor();\r\n\t\tthis.initPreview();\r\n\t\tthis.initHiddenHtmlInput();\r\n\t\tthis.initHiddenMarkdownInput();\r\n\t\tthis.initEventListeners();\r\n\t\tthis.triggerEvents();\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize code higlighting\r\n\t */\r\n\tinitCodeHightlight(){\r\n\t\tthis.calmdown.className += ` ${this.settings.codeHighlightStyle}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize hidden html input\r\n\t *\r\n\t * This textarea value can be sent through some http methods\r\n\t * to the server for further processing.\r\n\t */\r\n\tinitHiddenHtmlInput(){\r\n\t\tif(this.settings.htmlInputSelector != null ) {\r\n\t\t\tthis.htmlInputElement = new HTMLElement('textarea',\r\n\t\t\t\tthis.settings.htmlInputSelector,\r\n\t\t\t\tthis.calmdown, {\r\n\t\t\t\t\tname: this.settings.htmlInputSelector\r\n\t\t\t\t}).getElement;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize hidden markdown input\r\n\t *\r\n\t * This textarea value can be sent through some http methods\r\n\t * to the server for further processing.\r\n\t */\r\n\tinitHiddenMarkdownInput(){\r\n\t\tif(this.settings.markdownInputSelector != null ) {\r\n\t\t\tthis.markdownInputElement = new HTMLElement('textarea',\r\n\t\t\t\tthis.settings.markdownInputSelector,\r\n\t\t\t\tthis.calmdown, {\r\n\t\t\t\t\tname: this.settings.markdownInputSelector\r\n\t\t\t\t}).getElement;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize markdown converter\r\n\t */\r\n\tinitConverter(){\r\n\t\tthis.converter = new ShowdownConverter(this.codeHighlighter);\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize editor area\r\n\t */\r\n\tinitEditor(){\r\n\t\tthis.editor = new TextareaEditor(this.settings.editorSelector,this.calmdown);\r\n\t\tthis.editor.getEditor.value = `\\`\\`\\`html \r\n<div class=\"hello\">Hello, World!</div> \r\n\\`\\`\\`\r\n`;\r\n\t\tthis.editor.getEditor.value += `\\`\\`\\`javascript \r\nconsole.log(\"Hello, World!\"); \r\n\\`\\`\\`\r\n`;\r\n\t\tthis.editor.getEditor.value += `\\`\\`\\`java \r\npublic void static main(){\t\t\r\n\tSystem.out.println(\"Hello, World!\");\r\n}\r\n\\`\\`\\`\r\n`;\r\n\t\tthis.editor.getEditor.value += `\\`\\`\\`php\r\n<?php\t\t\r\n\techo \"Hello, World!\";\r\n\\`\\`\\`\r\n`;\r\n\t\tthis.editor.getEditor.value += `\\`\\`\\`css \r\n.hello {\r\n\tcontent: \"world\";\r\n\tfont-size: 1rem;\r\n\tcolor: #000;\r\n} \r\n\\`\\`\\`\r\n`;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize preview area\r\n\t */\r\n\tinitPreview(){\r\n\t\tthis.preview = new Preview(this.settings.previewSelector,this.calmdown);\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize event listeners\r\n\t */\r\n\tinitEventListeners(){\r\n\t\tthis.editor.convertMarkdownToHtmlEventListener([this.preview.getPreview,this.htmlInputElement],this.converter);\r\n\t}\r\n\r\n\ttriggerEvents(){\r\n\t\tthis.editor.processContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Get the editor content\r\n\t *\r\n\t * @returns {String} -  the string value of the editor content\r\n\t */\r\n\tgetContent(){\r\n\t\treturn this.editor.getContent();\r\n\t}\r\n\r\n\t/**\r\n\t *  Set the editor content\r\n\t *\r\n\t * @param {String} content - the new value of the editor\r\n\t */\r\n\tsetContent(content){\r\n\t\tthis.editor.setContent(content);\r\n\t\tthis.editor.processContent();\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Calmdown.js","export const CONFIG = {\r\n\t/**\r\n\t * @type {String}\r\n\t */\r\n\t'selector' : 'calmdown',\r\n\r\n\t/**\r\n\t * @type {String}\r\n\t */\r\n\t'editorSelector' : 'cd-editor',\r\n\r\n\t/**\r\n\t * @type {String|null}\r\n\t */\r\n\t'previewSelector' : 'cd-preview',\r\n\r\n\t/**\r\n\t * @type {String|null}\r\n\t */\r\n\t'markdownInputSelector' : 'cd-markdown-input',\r\n\r\n\t/**\r\n\t * @type {String|null}\r\n\t */\r\n\t'htmlInputSelector' : 'cd-html-input',\r\n\r\n\t/**\r\n\t * @type {String}\r\n\t */\r\n\t'codeHighlightStyle' : 'cd-highlight-default',\r\n\r\n\t/**\r\n\t * @type {String}\r\n\t */\r\n\t'editorType': 'textarea'\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/js/Config.js","import * as showdown from 'showdown';\r\n\r\nexport class ShowdownConverter{\r\n\r\n\t/**\r\n\t * Represents ShowdownConverter\r\n\t *\r\n\t * @param {highlight|null} codeHighlighter - highlights the syntax in the code tags\r\n\t * @param {String} flavor - flavor of the converter\r\n\t * @default 'github'\r\n \t */\r\n\tconstructor(codeHighlighter = null, flavor = 'github'){\r\n\t\tthis._converter = new showdown.Converter();\r\n\t\tthis.setFlavor(flavor);\r\n\t\tthis._codeHighlighter = codeHighlighter;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the showdown converter\r\n\t *\r\n\t * @returns {showdown.Converter} - showdown markdown converter\r\n\t */\r\n\tget getConverter(){\r\n\t\treturn this._converter;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the flavor of the showdown converter\r\n\t *\r\n\t * @param {String} flavor - flavor of the converter\r\n\t */\r\n\tsetFlavor(flavor){\r\n\t\tthis._converter.setFlavor(flavor);\r\n\t}\r\n\r\n\t/**\r\n\t * Generate html from the markdown\r\n\t *\r\n\t * @param {String} markdown - markdown from the editor\r\n\t * @returns {String} - the generated html\r\n\t */\r\n\tmakeHtml(markdown){\r\n\t\tlet html = this._converter.makeHtml(markdown);\r\n\t\treturn this._codeHighlighter == null ? html : this.addCodeHighlighting(html);\r\n\t}\r\n\r\n\t/**\r\n\t * Get a syntax highlighted version of the given html code tags\r\n\t *\r\n\t * @param {String} html - the generated html\r\n\t * @returns {String} - the generated html with syntax highlight\r\n\t */\r\n\taddCodeHighlighting(html){\r\n\t\tlet div = document.createElement('div');\r\n\t\tdiv.innerHTML = html;\r\n\t\tlet codeList = div.getElementsByTagName('code');\r\n\t\tfor (let i = 0; i < codeList.length; i++) {\r\n\t\t\tthis._codeHighlighter.highlightElement(codeList[i]);\r\n\t\t}\r\n\t\treturn div.innerHTML;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/ShowdownConverter.js",";/*! showdown 09-01-2017 */\r\n(function(){\r\n/**\n * Created by Tivie on 13-07-2015.\n */\n\nfunction getDefaultOpts(simple) {\n  'use strict';\n\n  var defaultOptions = {\n    omitExtraWLInCodeBlocks: {\n      defaultValue: false,\n      describe: 'Omit the default extra whiteline added to code blocks',\n      type: 'boolean'\n    },\n    noHeaderId: {\n      defaultValue: false,\n      describe: 'Turn on/off generated header id',\n      type: 'boolean'\n    },\n    prefixHeaderId: {\n      defaultValue: false,\n      describe: 'Specify a prefix to generated header ids',\n      type: 'string'\n    },\n    ghCompatibleHeaderId: {\n      defaultValue: false,\n      describe: 'Generate header ids compatible with github style (spaces are replaced with dashes, a bunch of non alphanumeric chars are removed)',\n      type: 'boolean'\n    },\n    headerLevelStart: {\n      defaultValue: false,\n      describe: 'The header blocks level start',\n      type: 'integer'\n    },\n    parseImgDimensions: {\n      defaultValue: false,\n      describe: 'Turn on/off image dimension parsing',\n      type: 'boolean'\n    },\n    simplifiedAutoLink: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM autolink style',\n      type: 'boolean'\n    },\n    excludeTrailingPunctuationFromURLs: {\n      defaultValue: false,\n      describe: 'Excludes trailing punctuation from links generated with autoLinking',\n      type: 'boolean'\n    },\n    literalMidWordUnderscores: {\n      defaultValue: false,\n      describe: 'Parse midword underscores as literal underscores',\n      type: 'boolean'\n    },\n    strikethrough: {\n      defaultValue: false,\n      describe: 'Turn on/off strikethrough support',\n      type: 'boolean'\n    },\n    tables: {\n      defaultValue: false,\n      describe: 'Turn on/off tables support',\n      type: 'boolean'\n    },\n    tablesHeaderId: {\n      defaultValue: false,\n      describe: 'Add an id to table headers',\n      type: 'boolean'\n    },\n    ghCodeBlocks: {\n      defaultValue: true,\n      describe: 'Turn on/off GFM fenced code blocks support',\n      type: 'boolean'\n    },\n    tasklists: {\n      defaultValue: false,\n      describe: 'Turn on/off GFM tasklist support',\n      type: 'boolean'\n    },\n    smoothLivePreview: {\n      defaultValue: false,\n      describe: 'Prevents weird effects in live previews due to incomplete input',\n      type: 'boolean'\n    },\n    smartIndentationFix: {\n      defaultValue: false,\n      description: 'Tries to smartly fix indentation in es6 strings',\n      type: 'boolean'\n    },\n    disableForced4SpacesIndentedSublists: {\n      defaultValue: false,\n      description: 'Disables the requirement of indenting nested sublists by 4 spaces',\n      type: 'boolean'\n    },\n    simpleLineBreaks: {\n      defaultValue: false,\n      description: 'Parses simple line breaks as <br> (GFM Style)',\n      type: 'boolean'\n    },\n    requireSpaceBeforeHeadingText: {\n      defaultValue: false,\n      description: 'Makes adding a space between `#` and the header text mandatory (GFM Style)',\n      type: 'boolean'\n    },\n    ghMentions: {\n      defaultValue: false,\n      description: 'Enables github @mentions',\n      type: 'boolean'\n    }\n  };\n  if (simple === false) {\n    return JSON.parse(JSON.stringify(defaultOptions));\n  }\n  var ret = {};\n  for (var opt in defaultOptions) {\n    if (defaultOptions.hasOwnProperty(opt)) {\n      ret[opt] = defaultOptions[opt].defaultValue;\n    }\n  }\n  return ret;\n}\n\nfunction allOptionsOn() {\n  'use strict';\n  var options = getDefaultOpts(true),\n      ret = {};\n  for (var opt in options) {\n    if (options.hasOwnProperty(opt)) {\n      ret[opt] = true;\n    }\n  }\n  return ret;\n}\n\r\n/**\n * Created by Tivie on 06-01-2015.\n */\n\n// Private properties\nvar showdown = {},\n    parsers = {},\n    extensions = {},\n    globalOptions = getDefaultOpts(true),\n    setFlavor = 'vanilla',\n    flavor = {\n      github: {\n        omitExtraWLInCodeBlocks:              true,\n        prefixHeaderId:                       'user-content-',\n        simplifiedAutoLink:                   true,\n        excludeTrailingPunctuationFromURLs:   true,\n        literalMidWordUnderscores:            true,\n        strikethrough:                        true,\n        tables:                               true,\n        tablesHeaderId:                       true,\n        ghCodeBlocks:                         true,\n        tasklists:                            true,\n        disableForced4SpacesIndentedSublists: true,\n        simpleLineBreaks:                     true,\n        requireSpaceBeforeHeadingText:        true,\n        ghCompatibleHeaderId:                 true,\n        ghMentions:                           true\n      },\n      vanilla: getDefaultOpts(true),\n      allOn: allOptionsOn()\n    };\n\n/**\n * helper namespace\n * @type {{}}\n */\nshowdown.helper = {};\n\n/**\n * TODO LEGACY SUPPORT CODE\n * @type {{}}\n */\nshowdown.extensions = {};\n\n/**\n * Set a global option\n * @static\n * @param {string} key\n * @param {*} value\n * @returns {showdown}\n */\nshowdown.setOption = function (key, value) {\n  'use strict';\n  globalOptions[key] = value;\n  return this;\n};\n\n/**\n * Get a global option\n * @static\n * @param {string} key\n * @returns {*}\n */\nshowdown.getOption = function (key) {\n  'use strict';\n  return globalOptions[key];\n};\n\n/**\n * Get the global options\n * @static\n * @returns {{}}\n */\nshowdown.getOptions = function () {\n  'use strict';\n  return globalOptions;\n};\n\n/**\n * Reset global options to the default values\n * @static\n */\nshowdown.resetOptions = function () {\n  'use strict';\n  globalOptions = getDefaultOpts(true);\n};\n\n/**\n * Set the flavor showdown should use as default\n * @param {string} name\n */\nshowdown.setFlavor = function (name) {\n  'use strict';\n  if (!flavor.hasOwnProperty(name)) {\n    throw Error(name + ' flavor was not found');\n  }\n  var preset = flavor[name];\n  setFlavor = name;\n  for (var option in preset) {\n    if (preset.hasOwnProperty(option)) {\n      globalOptions[option] = preset[option];\n    }\n  }\n};\n\n/**\n * Get the currently set flavor\n * @returns {string}\n */\nshowdown.getFlavor = function () {\n  'use strict';\n  return setFlavor;\n};\n\n/**\n * Get the options of a specified flavor. Returns undefined if the flavor was not found\n * @param {string} name Name of the flavor\n * @returns {{}|undefined}\n */\nshowdown.getFlavorOptions = function (name) {\n  'use strict';\n  if (flavor.hasOwnProperty(name)) {\n    return flavor[name];\n  }\n};\n\n/**\n * Get the default options\n * @static\n * @param {boolean} [simple=true]\n * @returns {{}}\n */\nshowdown.getDefaultOptions = function (simple) {\n  'use strict';\n  return getDefaultOpts(simple);\n};\n\n/**\n * Get or set a subParser\n *\n * subParser(name)       - Get a registered subParser\n * subParser(name, func) - Register a subParser\n * @static\n * @param {string} name\n * @param {function} [func]\n * @returns {*}\n */\nshowdown.subParser = function (name, func) {\n  'use strict';\n  if (showdown.helper.isString(name)) {\n    if (typeof func !== 'undefined') {\n      parsers[name] = func;\n    } else {\n      if (parsers.hasOwnProperty(name)) {\n        return parsers[name];\n      } else {\n        throw Error('SubParser named ' + name + ' not registered!');\n      }\n    }\n  }\n};\n\n/**\n * Gets or registers an extension\n * @static\n * @param {string} name\n * @param {object|function=} ext\n * @returns {*}\n */\nshowdown.extension = function (name, ext) {\n  'use strict';\n\n  if (!showdown.helper.isString(name)) {\n    throw Error('Extension \\'name\\' must be a string');\n  }\n\n  name = showdown.helper.stdExtName(name);\n\n  // Getter\n  if (showdown.helper.isUndefined(ext)) {\n    if (!extensions.hasOwnProperty(name)) {\n      throw Error('Extension named ' + name + ' is not registered!');\n    }\n    return extensions[name];\n\n    // Setter\n  } else {\n    // Expand extension if it's wrapped in a function\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    // Ensure extension is an array\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExtension = validate(ext, name);\n\n    if (validExtension.valid) {\n      extensions[name] = ext;\n    } else {\n      throw Error(validExtension.error);\n    }\n  }\n};\n\n/**\n * Gets all extensions registered\n * @returns {{}}\n */\nshowdown.getAllExtensions = function () {\n  'use strict';\n  return extensions;\n};\n\n/**\n * Remove an extension\n * @param {string} name\n */\nshowdown.removeExtension = function (name) {\n  'use strict';\n  delete extensions[name];\n};\n\n/**\n * Removes all extensions\n */\nshowdown.resetExtensions = function () {\n  'use strict';\n  extensions = {};\n};\n\n/**\n * Validate extension\n * @param {array} extension\n * @param {string} name\n * @returns {{valid: boolean, error: string}}\n */\nfunction validate(extension, name) {\n  'use strict';\n\n  var errMsg = (name) ? 'Error in ' + name + ' extension->' : 'Error in unnamed extension',\n    ret = {\n      valid: true,\n      error: ''\n    };\n\n  if (!showdown.helper.isArray(extension)) {\n    extension = [extension];\n  }\n\n  for (var i = 0; i < extension.length; ++i) {\n    var baseMsg = errMsg + ' sub-extension ' + i + ': ',\n        ext = extension[i];\n    if (typeof ext !== 'object') {\n      ret.valid = false;\n      ret.error = baseMsg + 'must be an object, but ' + typeof ext + ' given';\n      return ret;\n    }\n\n    if (!showdown.helper.isString(ext.type)) {\n      ret.valid = false;\n      ret.error = baseMsg + 'property \"type\" must be a string, but ' + typeof ext.type + ' given';\n      return ret;\n    }\n\n    var type = ext.type = ext.type.toLowerCase();\n\n    // normalize extension type\n    if (type === 'language') {\n      type = ext.type = 'lang';\n    }\n\n    if (type === 'html') {\n      type = ext.type = 'output';\n    }\n\n    if (type !== 'lang' && type !== 'output' && type !== 'listener') {\n      ret.valid = false;\n      ret.error = baseMsg + 'type ' + type + ' is not recognized. Valid values: \"lang/language\", \"output/html\" or \"listener\"';\n      return ret;\n    }\n\n    if (type === 'listener') {\n      if (showdown.helper.isUndefined(ext.listeners)) {\n        ret.valid = false;\n        ret.error = baseMsg + '. Extensions of type \"listener\" must have a property called \"listeners\"';\n        return ret;\n      }\n    } else {\n      if (showdown.helper.isUndefined(ext.filter) && showdown.helper.isUndefined(ext.regex)) {\n        ret.valid = false;\n        ret.error = baseMsg + type + ' extensions must define either a \"regex\" property or a \"filter\" method';\n        return ret;\n      }\n    }\n\n    if (ext.listeners) {\n      if (typeof ext.listeners !== 'object') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"listeners\" property must be an object but ' + typeof ext.listeners + ' given';\n        return ret;\n      }\n      for (var ln in ext.listeners) {\n        if (ext.listeners.hasOwnProperty(ln)) {\n          if (typeof ext.listeners[ln] !== 'function') {\n            ret.valid = false;\n            ret.error = baseMsg + '\"listeners\" property must be an hash of [event name]: [callback]. listeners.' + ln +\n              ' must be a function but ' + typeof ext.listeners[ln] + ' given';\n            return ret;\n          }\n        }\n      }\n    }\n\n    if (ext.filter) {\n      if (typeof ext.filter !== 'function') {\n        ret.valid = false;\n        ret.error = baseMsg + '\"filter\" must be a function, but ' + typeof ext.filter + ' given';\n        return ret;\n      }\n    } else if (ext.regex) {\n      if (showdown.helper.isString(ext.regex)) {\n        ext.regex = new RegExp(ext.regex, 'g');\n      }\n      if (!ext.regex instanceof RegExp) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" property must either be a string or a RegExp object, but ' + typeof ext.regex + ' given';\n        return ret;\n      }\n      if (showdown.helper.isUndefined(ext.replace)) {\n        ret.valid = false;\n        ret.error = baseMsg + '\"regex\" extensions must implement a replace string or function';\n        return ret;\n      }\n    }\n  }\n  return ret;\n}\n\n/**\n * Validate extension\n * @param {object} ext\n * @returns {boolean}\n */\nshowdown.validateExtension = function (ext) {\n  'use strict';\n\n  var validateExtension = validate(ext, null);\n  if (!validateExtension.valid) {\n    console.warn(validateExtension.error);\n    return false;\n  }\n  return true;\n};\n\r\n/**\n * showdownjs helper functions\n */\n\nif (!showdown.hasOwnProperty('helper')) {\n  showdown.helper = {};\n}\n\n/**\n * Check if var is string\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isString = function isString(a) {\n  'use strict';\n  return (typeof a === 'string' || a instanceof String);\n};\n\n/**\n * Check if var is a function\n * @static\n * @param {string} a\n * @returns {boolean}\n */\nshowdown.helper.isFunction = function isFunction(a) {\n  'use strict';\n  var getType = {};\n  return a && getType.toString.call(a) === '[object Function]';\n};\n\n/**\n * ForEach helper function\n * @static\n * @param {*} obj\n * @param {function} callback\n */\nshowdown.helper.forEach = function forEach(obj, callback) {\n  'use strict';\n  if (typeof obj.forEach === 'function') {\n    obj.forEach(callback);\n  } else {\n    for (var i = 0; i < obj.length; i++) {\n      callback(obj[i], i, obj);\n    }\n  }\n};\n\n/**\n * isArray helper function\n * @static\n * @param {*} a\n * @returns {boolean}\n */\nshowdown.helper.isArray = function isArray(a) {\n  'use strict';\n  return a.constructor === Array;\n};\n\n/**\n * Check if value is undefined\n * @static\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n */\nshowdown.helper.isUndefined = function isUndefined(value) {\n  'use strict';\n  return typeof value === 'undefined';\n};\n\n/**\n * Standardidize extension name\n * @static\n * @param {string} s extension name\n * @returns {string}\n */\nshowdown.helper.stdExtName = function (s) {\n  'use strict';\n  return s.replace(/[_-]||\\s/g, '').toLowerCase();\n};\n\nfunction escapeCharactersCallback(wholeMatch, m1) {\n  'use strict';\n  var charCodeToEscape = m1.charCodeAt(0);\n  return '~E' + charCodeToEscape + 'E';\n}\n\n/**\n * Callback used to escape characters when passing through String.replace\n * @static\n * @param {string} wholeMatch\n * @param {string} m1\n * @returns {string}\n */\nshowdown.helper.escapeCharactersCallback = escapeCharactersCallback;\n\n/**\n * Escape characters in a string\n * @static\n * @param {string} text\n * @param {string} charsToEscape\n * @param {boolean} afterBackslash\n * @returns {XML|string|void|*}\n */\nshowdown.helper.escapeCharacters = function escapeCharacters(text, charsToEscape, afterBackslash) {\n  'use strict';\n  // First we have to escape the escape characters so that\n  // we can build a character class out of them\n  var regexString = '([' + charsToEscape.replace(/([\\[\\]\\\\])/g, '\\\\$1') + '])';\n\n  if (afterBackslash) {\n    regexString = '\\\\\\\\' + regexString;\n  }\n\n  var regex = new RegExp(regexString, 'g');\n  text = text.replace(regex, escapeCharactersCallback);\n\n  return text;\n};\n\nvar rgxFindMatchPos = function (str, left, right, flags) {\n  'use strict';\n  var f = flags || '',\n    g = f.indexOf('g') > -1,\n    x = new RegExp(left + '|' + right, 'g' + f.replace(/g/g, '')),\n    l = new RegExp(left, f.replace(/g/g, '')),\n    pos = [],\n    t, s, m, start, end;\n\n  do {\n    t = 0;\n    while ((m = x.exec(str))) {\n      if (l.test(m[0])) {\n        if (!(t++)) {\n          s = x.lastIndex;\n          start = s - m[0].length;\n        }\n      } else if (t) {\n        if (!--t) {\n          end = m.index + m[0].length;\n          var obj = {\n            left: {start: start, end: s},\n            match: {start: s, end: m.index},\n            right: {start: m.index, end: end},\n            wholeMatch: {start: start, end: end}\n          };\n          pos.push(obj);\n          if (!g) {\n            return pos;\n          }\n        }\n      }\n    }\n  } while (t && (x.lastIndex = s));\n\n  return pos;\n};\n\n/**\n * matchRecursiveRegExp\n *\n * (c) 2007 Steven Levithan <stevenlevithan.com>\n * MIT License\n *\n * Accepts a string to search, a left and right format delimiter\n * as regex patterns, and optional regex flags. Returns an array\n * of matches, allowing nested instances of left/right delimiters.\n * Use the \"g\" flag to return all matches, otherwise only the\n * first is returned. Be careful to ensure that the left and\n * right format delimiters produce mutually exclusive matches.\n * Backreferences are not supported within the right delimiter\n * due to how it is internally combined with the left delimiter.\n * When matching strings whose format delimiters are unbalanced\n * to the left or right, the output is intentionally as a\n * conventional regex library with recursion support would\n * produce, e.g. \"<<x>\" and \"<x>>\" both produce [\"x\"] when using\n * \"<\" and \">\" as the delimiters (both strings contain a single,\n * balanced instance of \"<x>\").\n *\n * examples:\n * matchRecursiveRegExp(\"test\", \"\\\\(\", \"\\\\)\")\n * returns: []\n * matchRecursiveRegExp(\"<t<<e>><s>>t<>\", \"<\", \">\", \"g\")\n * returns: [\"t<<e>><s>\", \"\"]\n * matchRecursiveRegExp(\"<div id=\\\"x\\\">test</div>\", \"<div\\\\b[^>]*>\", \"</div>\", \"gi\")\n * returns: [\"test\"]\n */\nshowdown.helper.matchRecursiveRegExp = function (str, left, right, flags) {\n  'use strict';\n\n  var matchPos = rgxFindMatchPos (str, left, right, flags),\n    results = [];\n\n  for (var i = 0; i < matchPos.length; ++i) {\n    results.push([\n      str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n      str.slice(matchPos[i].match.start, matchPos[i].match.end),\n      str.slice(matchPos[i].left.start, matchPos[i].left.end),\n      str.slice(matchPos[i].right.start, matchPos[i].right.end)\n    ]);\n  }\n  return results;\n};\n\n/**\n *\n * @param {string} str\n * @param {string|function} replacement\n * @param {string} left\n * @param {string} right\n * @param {string} flags\n * @returns {string}\n */\nshowdown.helper.replaceRecursiveRegExp = function (str, replacement, left, right, flags) {\n  'use strict';\n\n  if (!showdown.helper.isFunction(replacement)) {\n    var repStr = replacement;\n    replacement = function () {\n      return repStr;\n    };\n  }\n\n  var matchPos = rgxFindMatchPos(str, left, right, flags),\n      finalStr = str,\n      lng = matchPos.length;\n\n  if (lng > 0) {\n    var bits = [];\n    if (matchPos[0].wholeMatch.start !== 0) {\n      bits.push(str.slice(0, matchPos[0].wholeMatch.start));\n    }\n    for (var i = 0; i < lng; ++i) {\n      bits.push(\n        replacement(\n          str.slice(matchPos[i].wholeMatch.start, matchPos[i].wholeMatch.end),\n          str.slice(matchPos[i].match.start, matchPos[i].match.end),\n          str.slice(matchPos[i].left.start, matchPos[i].left.end),\n          str.slice(matchPos[i].right.start, matchPos[i].right.end)\n        )\n      );\n      if (i < lng - 1) {\n        bits.push(str.slice(matchPos[i].wholeMatch.end, matchPos[i + 1].wholeMatch.start));\n      }\n    }\n    if (matchPos[lng - 1].wholeMatch.end < str.length) {\n      bits.push(str.slice(matchPos[lng - 1].wholeMatch.end));\n    }\n    finalStr = bits.join('');\n  }\n  return finalStr;\n};\n\n/**\n * POLYFILLS\n */\n// use this instead of builtin is undefined for IE8 compatibility\nif (typeof(console) === 'undefined') {\n  console = {\n    warn: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    log: function (msg) {\n      'use strict';\n      alert(msg);\n    },\n    error: function (msg) {\n      'use strict';\n      throw msg;\n    }\n  };\n}\n\r\n/**\n * Created by Estevao on 31-05-2015.\n */\n\n/**\n * Showdown Converter class\n * @class\n * @param {object} [converterOptions]\n * @returns {Converter}\n */\nshowdown.Converter = function (converterOptions) {\n  'use strict';\n\n  var\n      /**\n       * Options used by this converter\n       * @private\n       * @type {{}}\n       */\n      options = {},\n\n      /**\n       * Language extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      langExtensions = [],\n\n      /**\n       * Output modifiers extensions used by this converter\n       * @private\n       * @type {Array}\n       */\n      outputModifiers = [],\n\n      /**\n       * Event listeners\n       * @private\n       * @type {{}}\n       */\n      listeners = {},\n\n      /**\n       * The flavor set in this converter\n       */\n      setConvFlavor = setFlavor;\n\n  _constructor();\n\n  /**\n   * Converter constructor\n   * @private\n   */\n  function _constructor() {\n    converterOptions = converterOptions || {};\n\n    for (var gOpt in globalOptions) {\n      if (globalOptions.hasOwnProperty(gOpt)) {\n        options[gOpt] = globalOptions[gOpt];\n      }\n    }\n\n    // Merge options\n    if (typeof converterOptions === 'object') {\n      for (var opt in converterOptions) {\n        if (converterOptions.hasOwnProperty(opt)) {\n          options[opt] = converterOptions[opt];\n        }\n      }\n    } else {\n      throw Error('Converter expects the passed parameter to be an object, but ' + typeof converterOptions +\n      ' was passed instead.');\n    }\n\n    if (options.extensions) {\n      showdown.helper.forEach(options.extensions, _parseExtension);\n    }\n  }\n\n  /**\n   * Parse extension\n   * @param {*} ext\n   * @param {string} [name='']\n   * @private\n   */\n  function _parseExtension(ext, name) {\n\n    name = name || null;\n    // If it's a string, the extension was previously loaded\n    if (showdown.helper.isString(ext)) {\n      ext = showdown.helper.stdExtName(ext);\n      name = ext;\n\n      // LEGACY_SUPPORT CODE\n      if (showdown.extensions[ext]) {\n        console.warn('DEPRECATION WARNING: ' + ext + ' is an old extension that uses a deprecated loading method.' +\n          'Please inform the developer that the extension should be updated!');\n        legacyExtensionLoading(showdown.extensions[ext], ext);\n        return;\n      // END LEGACY SUPPORT CODE\n\n      } else if (!showdown.helper.isUndefined(extensions[ext])) {\n        ext = extensions[ext];\n\n      } else {\n        throw Error('Extension \"' + ext + '\" could not be loaded. It was either not found or is not a valid extension.');\n      }\n    }\n\n    if (typeof ext === 'function') {\n      ext = ext();\n    }\n\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n\n    var validExt = validate(ext, name);\n    if (!validExt.valid) {\n      throw Error(validExt.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n      }\n      if (ext[i].hasOwnProperty('listeners')) {\n        for (var ln in ext[i].listeners) {\n          if (ext[i].listeners.hasOwnProperty(ln)) {\n            listen(ln, ext[i].listeners[ln]);\n          }\n        }\n      }\n    }\n\n  }\n\n  /**\n   * LEGACY_SUPPORT\n   * @param {*} ext\n   * @param {string} name\n   */\n  function legacyExtensionLoading(ext, name) {\n    if (typeof ext === 'function') {\n      ext = ext(new showdown.Converter());\n    }\n    if (!showdown.helper.isArray(ext)) {\n      ext = [ext];\n    }\n    var valid = validate(ext, name);\n\n    if (!valid.valid) {\n      throw Error(valid.error);\n    }\n\n    for (var i = 0; i < ext.length; ++i) {\n      switch (ext[i].type) {\n        case 'lang':\n          langExtensions.push(ext[i]);\n          break;\n        case 'output':\n          outputModifiers.push(ext[i]);\n          break;\n        default:// should never reach here\n          throw Error('Extension loader error: Type unrecognized!!!');\n      }\n    }\n  }\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   */\n  function listen(name, callback) {\n    if (!showdown.helper.isString(name)) {\n      throw Error('Invalid argument in converter.listen() method: name must be a string, but ' + typeof name + ' given');\n    }\n\n    if (typeof callback !== 'function') {\n      throw Error('Invalid argument in converter.listen() method: callback must be a function, but ' + typeof callback + ' given');\n    }\n\n    if (!listeners.hasOwnProperty(name)) {\n      listeners[name] = [];\n    }\n    listeners[name].push(callback);\n  }\n\n  function rTrimInputText(text) {\n    var rsp = text.match(/^\\s*/)[0].length,\n        rgx = new RegExp('^\\\\s{0,' + rsp + '}', 'gm');\n    return text.replace(rgx, '');\n  }\n\n  /**\n   * Dispatch an event\n   * @private\n   * @param {string} evtName Event name\n   * @param {string} text Text\n   * @param {{}} options Converter Options\n   * @param {{}} globals\n   * @returns {string}\n   */\n  this._dispatch = function dispatch (evtName, text, options, globals) {\n    if (listeners.hasOwnProperty(evtName)) {\n      for (var ei = 0; ei < listeners[evtName].length; ++ei) {\n        var nText = listeners[evtName][ei](evtName, text, this, options, globals);\n        if (nText && typeof nText !== 'undefined') {\n          text = nText;\n        }\n      }\n    }\n    return text;\n  };\n\n  /**\n   * Listen to an event\n   * @param {string} name\n   * @param {function} callback\n   * @returns {showdown.Converter}\n   */\n  this.listen = function (name, callback) {\n    listen(name, callback);\n    return this;\n  };\n\n  /**\n   * Converts a markdown string into HTML\n   * @param {string} text\n   * @returns {*}\n   */\n  this.makeHtml = function (text) {\n    //check if text is not falsy\n    if (!text) {\n      return text;\n    }\n\n    var globals = {\n      gHtmlBlocks:     [],\n      gHtmlMdBlocks:   [],\n      gHtmlSpans:      [],\n      gUrls:           {},\n      gTitles:         {},\n      gDimensions:     {},\n      gListLevel:      0,\n      hashLinkCounts:  {},\n      langExtensions:  langExtensions,\n      outputModifiers: outputModifiers,\n      converter:       this,\n      ghCodeBlocks:    []\n    };\n\n    // attacklab: Replace ~ with ~T\n    // This lets us use tilde as an escape char to avoid md5 hashes\n    // The choice of character is arbitrary; anything that isn't\n    // magic in Markdown will work.\n    text = text.replace(/~/g, '~T');\n\n    // attacklab: Replace $ with ~D\n    // RegExp interprets $ as a special character\n    // when it's in a replacement string\n    text = text.replace(/\\$/g, '~D');\n\n    // Standardize line endings\n    text = text.replace(/\\r\\n/g, '\\n'); // DOS to Unix\n    text = text.replace(/\\r/g, '\\n'); // Mac to Unix\n\n    // Stardardize line spaces (nbsp causes trouble in older browsers and some regex flavors)\n    text = text.replace(/\\u00A0/g, ' ');\n\n    if (options.smartIndentationFix) {\n      text = rTrimInputText(text);\n    }\n\n    // Make sure text begins and ends with a couple of newlines:\n    text = '\\n\\n' + text + '\\n\\n';\n\n    // detab\n    text = showdown.subParser('detab')(text, options, globals);\n\n    // stripBlankLines\n    text = showdown.subParser('stripBlankLines')(text, options, globals);\n\n    //run languageExtensions\n    showdown.helper.forEach(langExtensions, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    // run the sub parsers\n    text = showdown.subParser('hashPreCodeTags')(text, options, globals);\n    text = showdown.subParser('githubCodeBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n    text = showdown.subParser('hashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('stripLinkDefinitions')(text, options, globals);\n    text = showdown.subParser('blockGamut')(text, options, globals);\n    text = showdown.subParser('unhashHTMLSpans')(text, options, globals);\n    text = showdown.subParser('unescapeSpecialChars')(text, options, globals);\n\n    // attacklab: Restore dollar signs\n    text = text.replace(/~D/g, '$$');\n\n    // attacklab: Restore tildes\n    text = text.replace(/~T/g, '~');\n\n    // Run output modifiers\n    showdown.helper.forEach(outputModifiers, function (ext) {\n      text = showdown.subParser('runExtension')(ext, text, options, globals);\n    });\n\n    return text;\n  };\n\n  /**\n   * Set an option of this Converter instance\n   * @param {string} key\n   * @param {*} value\n   */\n  this.setOption = function (key, value) {\n    options[key] = value;\n  };\n\n  /**\n   * Get the option of this Converter instance\n   * @param {string} key\n   * @returns {*}\n   */\n  this.getOption = function (key) {\n    return options[key];\n  };\n\n  /**\n   * Get the options of this Converter instance\n   * @returns {{}}\n   */\n  this.getOptions = function () {\n    return options;\n  };\n\n  /**\n   * Add extension to THIS converter\n   * @param {{}} extension\n   * @param {string} [name=null]\n   */\n  this.addExtension = function (extension, name) {\n    name = name || null;\n    _parseExtension(extension, name);\n  };\n\n  /**\n   * Use a global registered extension with THIS converter\n   * @param {string} extensionName Name of the previously registered extension\n   */\n  this.useExtension = function (extensionName) {\n    _parseExtension(extensionName);\n  };\n\n  /**\n   * Set the flavor THIS converter should use\n   * @param {string} name\n   */\n  this.setFlavor = function (name) {\n    if (!flavor.hasOwnProperty(name)) {\n      throw Error(name + ' flavor was not found');\n    }\n    var preset = flavor[name];\n    setConvFlavor = name;\n    for (var option in preset) {\n      if (preset.hasOwnProperty(option)) {\n        options[option] = preset[option];\n      }\n    }\n  };\n\n  /**\n   * Get the currently set flavor of this converter\n   * @returns {string}\n   */\n  this.getFlavor = function () {\n    return setConvFlavor;\n  };\n\n  /**\n   * Remove an extension from THIS converter.\n   * Note: This is a costly operation. It's better to initialize a new converter\n   * and specify the extensions you wish to use\n   * @param {Array} extension\n   */\n  this.removeExtension = function (extension) {\n    if (!showdown.helper.isArray(extension)) {\n      extension = [extension];\n    }\n    for (var a = 0; a < extension.length; ++a) {\n      var ext = extension[a];\n      for (var i = 0; i < langExtensions.length; ++i) {\n        if (langExtensions[i] === ext) {\n          langExtensions[i].splice(i, 1);\n        }\n      }\n      for (var ii = 0; ii < outputModifiers.length; ++i) {\n        if (outputModifiers[ii] === ext) {\n          outputModifiers[ii].splice(i, 1);\n        }\n      }\n    }\n  };\n\n  /**\n   * Get all extension of THIS converter\n   * @returns {{language: Array, output: Array}}\n   */\n  this.getAllExtensions = function () {\n    return {\n      language: langExtensions,\n      output: outputModifiers\n    };\n  };\n};\n\r\n/**\n * Turn Markdown link shortcuts into XHTML <a> tags.\n */\nshowdown.subParser('anchors', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('anchors.before', text, options, globals);\n\n  var writeAnchorTag = function (wholeMatch, m1, m2, m3, m4, m5, m6, m7) {\n    if (showdown.helper.isUndefined(m7)) {\n      m7 = '';\n    }\n    wholeMatch = m1;\n    var linkText = m2,\n        linkId = m3.toLowerCase(),\n        url = m4,\n        title = m7;\n\n    if (!url) {\n      if (!linkId) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = linkText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(globals.gUrls[linkId])) {\n        url = globals.gUrls[linkId];\n        if (!showdown.helper.isUndefined(globals.gTitles[linkId])) {\n          title = globals.gTitles[linkId];\n        }\n      } else {\n        if (wholeMatch.search(/\\(\\s*\\)$/m) > -1) {\n          // Special case for explicit empty url\n          url = '';\n        } else {\n          return wholeMatch;\n        }\n      }\n    }\n\n    url = showdown.helper.escapeCharacters(url, '*_', false);\n    var result = '<a href=\"' + url + '\"';\n\n    if (title !== '' && title !== null) {\n      title = title.replace(/\"/g, '&quot;');\n      title = showdown.helper.escapeCharacters(title, '*_', false);\n      result += ' title=\"' + title + '\"';\n    }\n\n    result += '>' + linkText + '</a>';\n\n    return result;\n  };\n\n  // First, handle reference-style links: [link text] [id]\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)][ ]?(?:\\n[ ]*)?\\[(.*?)])()()()()/g, writeAnchorTag);\n\n  // Next, inline-style links: [link text](url \"optional title\")\n  text = text.replace(/(\\[((?:\\[[^\\]]*]|[^\\[\\]])*)]\\([ \\t]*()<?(.*?(?:\\(.*?\\).*?)?)>?[ \\t]*((['\"])(.*?)\\6[ \\t]*)?\\))/g,\n                      writeAnchorTag);\n\n  // handle reference-style shortcuts: [link text]\n  // These must come last in case you've also got [link test][1]\n  // or [link test](/foo)\n  text = text.replace(/(\\[([^\\[\\]]+)])()()()()()/g, writeAnchorTag);\n\n  // Lastly handle GithubMentions if option is enabled\n  if (options.ghMentions) {\n    text = text.replace(/(^|\\s)(\\\\)?(@([a-z\\d\\-]+))(?=[.!?;,[\\]()]|\\s|$)/gmi, function (wm, st, escape, mentions, username) {\n      if (escape === '\\\\') {\n        return st + mentions;\n      }\n      return st + '<a href=\"https://www.github.com/' + username + '\">' + mentions + '</a>';\n    });\n  }\n\n  text = globals.converter._dispatch('anchors.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('autoLinks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('autoLinks.before', text, options, globals);\n\n  var simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+)()(?=\\s|$)(?![\"<>])/gi,\n      simpleURLRegex2 = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+\\.[^'\">\\s]+?)([.!?()]?)(?=\\s|$)(?![\"<>])/gi,\n      delimUrlRegex   = /<(((https?|ftp|dict):\\/\\/|www\\.)[^'\">\\s]+)>/gi,\n      simpleMailRegex = /(?:^|\\s)([A-Za-z0-9!#$%&'*+-/=?^_`{|}~.]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)(?:$|\\s)/gi,\n      delimMailRegex  = /<(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)>/gi;\n\n  text = text.replace(delimUrlRegex, replaceLink);\n  text = text.replace(delimMailRegex, replaceMail);\n  // simpleURLRegex  = /\\b(((https?|ftp|dict):\\/\\/|www\\.)[-.+~:?#@!$&'()*,;=[\\]\\w]+)\\b/gi,\n  // Email addresses: <address@domain.foo>\n\n  if (options.simplifiedAutoLink) {\n    if (options.excludeTrailingPunctuationFromURLs) {\n      text = text.replace(simpleURLRegex2, replaceLink);\n    } else {\n      text = text.replace(simpleURLRegex, replaceLink);\n    }\n    text = text.replace(simpleMailRegex, replaceMail);\n  }\n\n  function replaceLink(wm, link, m2, m3, trailingPunctuation) {\n    var lnkTxt = link,\n        append = '';\n    if (/^www\\./i.test(link)) {\n      link = link.replace(/^www\\./i, 'http://www.');\n    }\n    if (options.excludeTrailingPunctuationFromURLs && trailingPunctuation) {\n      append = trailingPunctuation;\n    }\n    return '<a href=\"' + link + '\">' + lnkTxt + '</a>' + append;\n  }\n\n  function replaceMail(wholeMatch, mail) {\n    var unescapedStr = showdown.subParser('unescapeSpecialChars')(mail);\n    return showdown.subParser('encodeEmailAddress')(unescapedStr);\n  }\n\n  text = globals.converter._dispatch('autoLinks.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that form block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('blockGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockGamut.before', text, options, globals);\n\n  // we parse blockquotes first so that we can have headings and hrs\n  // inside blockquotes\n  text = showdown.subParser('blockQuotes')(text, options, globals);\n  text = showdown.subParser('headers')(text, options, globals);\n\n  // Do Horizontal Rules:\n  var key = showdown.subParser('hashBlock')('<hr />', options, globals);\n  text = text.replace(/^ {0,2}( ?-){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?\\*){3,}[ \\t]*$/gm, key);\n  text = text.replace(/^ {0,2}( ?_){3,}[ \\t]*$/gm, key);\n\n  text = showdown.subParser('lists')(text, options, globals);\n  text = showdown.subParser('codeBlocks')(text, options, globals);\n  text = showdown.subParser('tables')(text, options, globals);\n\n  // We already ran _HashHTMLBlocks() before, in Markdown(), but that\n  // was to escape raw HTML in the original Markdown source. This time,\n  // we're escaping the markup we've just created, so that we don't wrap\n  // <p> tags around block-level tags.\n  text = showdown.subParser('hashHTMLBlocks')(text, options, globals);\n  text = showdown.subParser('paragraphs')(text, options, globals);\n\n  text = globals.converter._dispatch('blockGamut.after', text, options, globals);\n\n  return text;\n});\n\r\nshowdown.subParser('blockQuotes', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('blockQuotes.before', text, options, globals);\n\n  text = text.replace(/((^ {0,3}>[ \\t]?.+\\n(.+\\n)*\\n*)+)/gm, function (wholeMatch, m1) {\n    var bq = m1;\n\n    // attacklab: hack around Konqueror 3.5.4 bug:\n    // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n    bq = bq.replace(/^[ \\t]*>[ \\t]?/gm, '~0'); // trim one level of quoting\n\n    // attacklab: clean up hack\n    bq = bq.replace(/~0/g, '');\n\n    bq = bq.replace(/^[ \\t]+$/gm, ''); // trim whitespace-only lines\n    bq = showdown.subParser('githubCodeBlocks')(bq, options, globals);\n    bq = showdown.subParser('blockGamut')(bq, options, globals); // recurse\n\n    bq = bq.replace(/(^|\\n)/g, '$1  ');\n    // These leading spaces screw with <pre> content, so we need to fix that:\n    bq = bq.replace(/(\\s*<pre>[^\\r]+?<\\/pre>)/gm, function (wholeMatch, m1) {\n      var pre = m1;\n      // attacklab: hack around Konqueror 3.5.4 bug:\n      pre = pre.replace(/^  /mg, '~0');\n      pre = pre.replace(/~0/g, '');\n      return pre;\n    });\n\n    return showdown.subParser('hashBlock')('<blockquote>\\n' + bq + '\\n</blockquote>', options, globals);\n  });\n\n  text = globals.converter._dispatch('blockQuotes.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Process Markdown `<pre><code>` blocks.\n */\nshowdown.subParser('codeBlocks', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeBlocks.before', text, options, globals);\n\n  // sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '~0';\n\n  var pattern = /(?:\\n\\n|^)((?:(?:[ ]{4}|\\t).*\\n+)+)(\\n*[ ]{0,3}[^ \\t\\n]|(?=~0))/g;\n  text = text.replace(pattern, function (wholeMatch, m1, m2) {\n    var codeblock = m1,\n        nextChar = m2,\n        end = '\\n';\n\n    codeblock = showdown.subParser('outdent')(codeblock);\n    codeblock = showdown.subParser('encodeCode')(codeblock);\n    codeblock = showdown.subParser('detab')(codeblock);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing newlines\n\n    if (options.omitExtraWLInCodeBlocks) {\n      end = '';\n    }\n\n    codeblock = '<pre><code>' + codeblock + end + '</code></pre>';\n\n    return showdown.subParser('hashBlock')(codeblock, options, globals) + nextChar;\n  });\n\n  // strip sentinel\n  text = text.replace(/~0/, '');\n\n  text = globals.converter._dispatch('codeBlocks.after', text, options, globals);\n  return text;\n});\n\r\n/**\n *\n *   *  Backtick quotes are used for <code></code> spans.\n *\n *   *  You can use multiple backticks as the delimiters if you want to\n *     include literal backticks in the code span. So, this input:\n *\n *         Just type ``foo `bar` baz`` at the prompt.\n *\n *       Will translate to:\n *\n *         <p>Just type <code>foo `bar` baz</code> at the prompt.</p>\n *\n *    There's no arbitrary limit to the number of backticks you\n *    can use as delimters. If you need three consecutive backticks\n *    in your code, use four for delimiters, etc.\n *\n *  *  You can use spaces to get literal backticks at the edges:\n *\n *         ... type `` `bar` `` ...\n *\n *       Turns to:\n *\n *         ... type <code>`bar`</code> ...\n */\nshowdown.subParser('codeSpans', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('codeSpans.before', text, options, globals);\n\n  /*\n   text = text.replace(/\n   (^|[^\\\\])\t\t\t\t\t// Character before opening ` can't be a backslash\n   (`+)\t\t\t\t\t\t// $2 = Opening run of `\n   (\t\t\t\t\t\t\t// $3 = The code block\n   [^\\r]*?\n   [^`]\t\t\t\t\t// attacklab: work around lack of lookbehind\n   )\n   \\2\t\t\t\t\t\t\t// Matching closer\n   (?!`)\n   /gm, function(){...});\n   */\n\n  if (typeof(text) === 'undefined') {\n    text = '';\n  }\n  text = text.replace(/(^|[^\\\\])(`+)([^\\r]*?[^`])\\2(?!`)/gm,\n    function (wholeMatch, m1, m2, m3) {\n      var c = m3;\n      c = c.replace(/^([ \\t]*)/g, '');\t// leading whitespace\n      c = c.replace(/[ \\t]*$/g, '');\t// trailing whitespace\n      c = showdown.subParser('encodeCode')(c);\n      return m1 + '<code>' + c + '</code>';\n    }\n  );\n\n  text = globals.converter._dispatch('codeSpans.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Convert all tabs to spaces\n */\nshowdown.subParser('detab', function (text) {\n  'use strict';\n\n  // expand first n-1 tabs\n  text = text.replace(/\\t(?=\\t)/g, '    '); // g_tab_width\n\n  // replace the nth with two sentinels\n  text = text.replace(/\\t/g, '~A~B');\n\n  // use the sentinel to anchor our regex so it doesn't explode\n  text = text.replace(/~B(.+?)~A/g, function (wholeMatch, m1) {\n    var leadingText = m1,\n        numSpaces = 4 - leadingText.length % 4;  // g_tab_width\n\n    // there *must* be a better way to do this:\n    for (var i = 0; i < numSpaces; i++) {\n      leadingText += ' ';\n    }\n\n    return leadingText;\n  });\n\n  // clean up sentinels\n  text = text.replace(/~A/g, '    ');  // g_tab_width\n  text = text.replace(/~B/g, '');\n\n  return text;\n\n});\n\r\n/**\n * Smart processing for ampersands and angle brackets that need to be encoded.\n */\nshowdown.subParser('encodeAmpsAndAngles', function (text) {\n  'use strict';\n  // Ampersand-encoding based entirely on Nat Irons's Amputator MT plugin:\n  // http://bumppo.net/projects/amputator/\n  text = text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\\w+);)/g, '&amp;');\n\n  // Encode naked <'s\n  text = text.replace(/<(?![a-z\\/?\\$!])/gi, '&lt;');\n\n  return text;\n});\n\r\n/**\n * Returns the string, with after processing the following backslash escape sequences.\n *\n * attacklab: The polite way to do this is with the new escapeCharacters() function:\n *\n *    text = escapeCharacters(text,\"\\\\\",true);\n *    text = escapeCharacters(text,\"`*_{}[]()>#+-.!\",true);\n *\n * ...but we're sidestepping its use of the (slow) RegExp constructor\n * as an optimization for Firefox.  This function gets called a LOT.\n */\nshowdown.subParser('encodeBackslashEscapes', function (text) {\n  'use strict';\n  text = text.replace(/\\\\(\\\\)/g, showdown.helper.escapeCharactersCallback);\n  text = text.replace(/\\\\([`*_{}\\[\\]()>#+-.!])/g, showdown.helper.escapeCharactersCallback);\n  return text;\n});\n\r\n/**\n * Encode/escape certain characters inside Markdown code runs.\n * The point is that in code, these characters are literals,\n * and lose their special Markdown meanings.\n */\nshowdown.subParser('encodeCode', function (text) {\n  'use strict';\n\n  // Encode all ampersands; HTML entities are not\n  // entities within a Markdown code span.\n  text = text.replace(/&/g, '&amp;');\n\n  // Do the angle bracket song and dance:\n  text = text.replace(/</g, '&lt;');\n  text = text.replace(/>/g, '&gt;');\n\n  // Now, escape characters that are magic in Markdown:\n  text = showdown.helper.escapeCharacters(text, '*_{}[]\\\\', false);\n\n  // jj the line above breaks this:\n  //---\n  //* Item\n  //   1. Subitem\n  //            special char: *\n  // ---\n\n  return text;\n});\n\r\n/**\n *  Input: an email address, e.g. \"foo@example.com\"\n *\n *  Output: the email address as a mailto link, with each character\n *    of the address encoded as either a decimal or hex entity, in\n *    the hopes of foiling most address harvesting spam bots. E.g.:\n *\n *    <a href=\"&#x6D;&#97;&#105;&#108;&#x74;&#111;:&#102;&#111;&#111;&#64;&#101;\n *       x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;\">&#102;&#111;&#111;\n *       &#64;&#101;x&#x61;&#109;&#x70;&#108;&#x65;&#x2E;&#99;&#111;&#109;</a>\n *\n *  Based on a filter by Matthew Wickline, posted to the BBEdit-Talk\n *  mailing list: <http://tinyurl.com/yu7ue>\n *\n */\nshowdown.subParser('encodeEmailAddress', function (addr) {\n  'use strict';\n\n  var encode = [\n    function (ch) {\n      return '&#' + ch.charCodeAt(0) + ';';\n    },\n    function (ch) {\n      return '&#x' + ch.charCodeAt(0).toString(16) + ';';\n    },\n    function (ch) {\n      return ch;\n    }\n  ];\n\n  addr = 'mailto:' + addr;\n\n  addr = addr.replace(/./g, function (ch) {\n    if (ch === '@') {\n      // this *must* be encoded. I insist.\n      ch = encode[Math.floor(Math.random() * 2)](ch);\n    } else if (ch !== ':') {\n      // leave ':' alone (to spot mailto: later)\n      var r = Math.random();\n      // roughly 10% raw, 45% hex, 45% dec\n      ch = (\n        r > 0.9 ? encode[2](ch) : r > 0.45 ? encode[1](ch) : encode[0](ch)\n      );\n    }\n    return ch;\n  });\n\n  addr = '<a href=\"' + addr + '\">' + addr + '</a>';\n  addr = addr.replace(/\">.+:/g, '\">'); // strip the mailto: from the visible part\n\n  return addr;\n});\n\r\n/**\n * Within tags -- meaning between < and > -- encode [\\ ` * _] so they\n * don't conflict with their use in Markdown for code, italics and strong.\n */\nshowdown.subParser('escapeSpecialCharsWithinTagAttributes', function (text) {\n  'use strict';\n\n  // Build a regex to find HTML tags and comments.  See Friedl's\n  // \"Mastering Regular Expressions\", 2nd Ed., pp. 200-201.\n  var regex = /(<[a-z\\/!$](\"[^\"]*\"|'[^']*'|[^'\">])*>|<!(--.*?--\\s*)+>)/gi;\n\n  text = text.replace(regex, function (wholeMatch) {\n    var tag = wholeMatch.replace(/(.)<\\/?code>(?=.)/g, '$1`');\n    tag = showdown.helper.escapeCharacters(tag, '\\\\`*_', false);\n    return tag;\n  });\n\n  return text;\n});\n\r\n/**\n * Handle github codeblocks prior to running HashHTML so that\n * HTML contained within the codeblock gets escaped properly\n * Example:\n * ```ruby\n *     def hello_world(x)\n *       puts \"Hello, #{x}\"\n *     end\n * ```\n */\nshowdown.subParser('githubCodeBlocks', function (text, options, globals) {\n  'use strict';\n\n  // early exit if option is not enabled\n  if (!options.ghCodeBlocks) {\n    return text;\n  }\n\n  text = globals.converter._dispatch('githubCodeBlocks.before', text, options, globals);\n\n  text += '~0';\n\n  text = text.replace(/(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g, function (wholeMatch, language, codeblock) {\n    var end = (options.omitExtraWLInCodeBlocks) ? '' : '\\n';\n\n    // First parse the github code block\n    codeblock = showdown.subParser('encodeCode')(codeblock);\n    codeblock = showdown.subParser('detab')(codeblock);\n    codeblock = codeblock.replace(/^\\n+/g, ''); // trim leading newlines\n    codeblock = codeblock.replace(/\\n+$/g, ''); // trim trailing whitespace\n\n    codeblock = '<pre><code' + (language ? ' class=\"' + language + ' language-' + language + '\"' : '') + '>' + codeblock + end + '</code></pre>';\n\n    codeblock = showdown.subParser('hashBlock')(codeblock, options, globals);\n\n    // Since GHCodeblocks can be false positives, we need to\n    // store the primitive text and the parsed text in a global var,\n    // and then return a token\n    return '\\n\\n~G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '');\n\n  return globals.converter._dispatch('githubCodeBlocks.after', text, options, globals);\n});\n\r\nshowdown.subParser('hashBlock', function (text, options, globals) {\n  'use strict';\n  text = text.replace(/(^\\n+|\\n+$)/g, '');\n  return '\\n\\n~K' + (globals.gHtmlBlocks.push(text) - 1) + 'K\\n\\n';\n});\n\r\nshowdown.subParser('hashElement', function (text, options, globals) {\n  'use strict';\n\n  return function (wholeMatch, m1) {\n    var blockText = m1;\n\n    // Undo double lines\n    blockText = blockText.replace(/\\n\\n/g, '\\n');\n    blockText = blockText.replace(/^\\n/, '');\n\n    // strip trailing blank lines\n    blockText = blockText.replace(/\\n+$/g, '');\n\n    // Replace the element text with a marker (\"~KxK\" where x is its key)\n    blockText = '\\n\\n~K' + (globals.gHtmlBlocks.push(blockText) - 1) + 'K\\n\\n';\n\n    return blockText;\n  };\n});\n\r\nshowdown.subParser('hashHTMLBlocks', function (text, options, globals) {\n  'use strict';\n\n  var blockTags = [\n      'pre',\n      'div',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'table',\n      'dl',\n      'ol',\n      'ul',\n      'script',\n      'noscript',\n      'form',\n      'fieldset',\n      'iframe',\n      'math',\n      'style',\n      'section',\n      'header',\n      'footer',\n      'nav',\n      'article',\n      'aside',\n      'address',\n      'audio',\n      'canvas',\n      'figure',\n      'hgroup',\n      'output',\n      'video',\n      'p'\n    ],\n    repFunc = function (wholeMatch, match, left, right) {\n      var txt = wholeMatch;\n      // check if this html element is marked as markdown\n      // if so, it's contents should be parsed as markdown\n      if (left.search(/\\bmarkdown\\b/) !== -1) {\n        txt = left + globals.converter.makeHtml(match) + right;\n      }\n      return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n    };\n\n  for (var i = 0; i < blockTags.length; ++i) {\n    text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<' + blockTags[i] + '\\\\b[^>]*>', '</' + blockTags[i] + '>', 'gim');\n  }\n\n  // HR SPECIAL CASE\n  text = text.replace(/(\\n {0,3}(<(hr)\\b([^<>])*?\\/?>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  // Special case for standalone HTML comments\n  text = showdown.helper.replaceRecursiveRegExp(text, function (txt) {\n    return '\\n\\n~K' + (globals.gHtmlBlocks.push(txt) - 1) + 'K\\n\\n';\n  }, '^ {0,3}<!--', '-->', 'gm');\n\n  // PHP and ASP-style processor instructions (<?...?> and <%...%>)\n  text = text.replace(/(?:\\n\\n)( {0,3}(?:<([?%])[^\\r]*?\\2>)[ \\t]*(?=\\n{2,}))/g,\n    showdown.subParser('hashElement')(text, options, globals));\n\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashHTMLSpans', function (text, config, globals) {\n  'use strict';\n\n  var matches = showdown.helper.matchRecursiveRegExp(text, '<code\\\\b[^>]*>', '</code>', 'gi');\n\n  for (var i = 0; i < matches.length; ++i) {\n    text = text.replace(matches[i][0], '~C' + (globals.gHtmlSpans.push(matches[i][0]) - 1) + 'C');\n  }\n  return text;\n});\n\n/**\n * Unhash HTML spans\n */\nshowdown.subParser('unhashHTMLSpans', function (text, config, globals) {\n  'use strict';\n\n  for (var i = 0; i < globals.gHtmlSpans.length; ++i) {\n    text = text.replace('~C' + i + 'C', globals.gHtmlSpans[i]);\n  }\n\n  return text;\n});\n\r\n/**\n * Hash span elements that should not be parsed as markdown\n */\nshowdown.subParser('hashPreCodeTags', function (text, config, globals) {\n  'use strict';\n\n  var repFunc = function (wholeMatch, match, left, right) {\n    // encode html entities\n    var codeblock = left + showdown.subParser('encodeCode')(match) + right;\n    return '\\n\\n~G' + (globals.ghCodeBlocks.push({text: wholeMatch, codeblock: codeblock}) - 1) + 'G\\n\\n';\n  };\n\n  text = showdown.helper.replaceRecursiveRegExp(text, repFunc, '^ {0,3}<pre\\\\b[^>]*>\\\\s*<code\\\\b[^>]*>', '^ {0,3}</code>\\\\s*</pre>', 'gim');\n  return text;\n});\n\r\nshowdown.subParser('headers', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('headers.before', text, options, globals);\n\n  var prefixHeader = options.prefixHeaderId,\n      headerLevelStart = (isNaN(parseInt(options.headerLevelStart))) ? 1 : parseInt(options.headerLevelStart),\n      ghHeaderId = options.ghCompatibleHeaderId,\n\n  // Set text-style headers:\n  //\tHeader 1\n  //\t========\n  //\n  //\tHeader 2\n  //\t--------\n  //\n      setextRegexH1 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n={2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n=+[ \\t]*\\n+/gm,\n      setextRegexH2 = (options.smoothLivePreview) ? /^(.+)[ \\t]*\\n-{2,}[ \\t]*\\n+/gm : /^(.+)[ \\t]*\\n-+[ \\t]*\\n+/gm;\n\n  text = text.replace(setextRegexH1, function (wholeMatch, m1) {\n\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart,\n        hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  text = text.replace(setextRegexH2, function (matchFound, m1) {\n    var spanGamut = showdown.subParser('spanGamut')(m1, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m1) + '\"',\n        hLevel = headerLevelStart + 1,\n      hashBlock = '<h' + hLevel + hID + '>' + spanGamut + '</h' + hLevel + '>';\n    return showdown.subParser('hashBlock')(hashBlock, options, globals);\n  });\n\n  // atx-style headers:\n  //  # Header 1\n  //  ## Header 2\n  //  ## Header 2 with closing hashes ##\n  //  ...\n  //  ###### Header 6\n  //\n  var atxStyle = (options.requireSpaceBeforeHeadingText) ? /^(#{1,6})[ \\t]+(.+?)[ \\t]*#*\\n+/gm : /^(#{1,6})[ \\t]*(.+?)[ \\t]*#*\\n+/gm;\n\n  text = text.replace(atxStyle, function (wholeMatch, m1, m2) {\n    var span = showdown.subParser('spanGamut')(m2, options, globals),\n        hID = (options.noHeaderId) ? '' : ' id=\"' + headerId(m2) + '\"',\n        hLevel = headerLevelStart - 1 + m1.length,\n        header = '<h' + hLevel + hID + '>' + span + '</h' + hLevel + '>';\n\n    return showdown.subParser('hashBlock')(header, options, globals);\n  });\n\n  function headerId(m) {\n    var title, escapedId;\n\n    if (ghHeaderId) {\n      escapedId = m\n        .replace(/ /g, '-')\n        //replace previously escaped chars (&, ~ and $)\n        .replace(/&amp;/g, '')\n        .replace(/~T/g, '')\n        .replace(/~D/g, '')\n        //replace rest of the chars (&~$ are repeated as they might have been escaped)\n        // borrowed from github's redcarpet (some they should produce similar results)\n        .replace(/[&+$,\\/:;=?@\"#{}|^~\\[\\]`\\\\*)(%.!'<>]/g, '')\n        .toLowerCase();\n    } else {\n      escapedId = m.replace(/[^\\w]/g, '').toLowerCase();\n    }\n\n    if (globals.hashLinkCounts[escapedId]) {\n      title = escapedId + '-' + (globals.hashLinkCounts[escapedId]++);\n    } else {\n      title = escapedId;\n      globals.hashLinkCounts[escapedId] = 1;\n    }\n\n    // Prefix id to prevent causing inadvertent pre-existing style matches.\n    if (prefixHeader === true) {\n      prefixHeader = 'section';\n    }\n\n    if (showdown.helper.isString(prefixHeader)) {\n      return prefixHeader + title;\n    }\n    return title;\n  }\n\n  text = globals.converter._dispatch('headers.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Turn Markdown image shortcuts into <img> tags.\n */\nshowdown.subParser('images', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('images.before', text, options, globals);\n\n  var inlineRegExp    = /!\\[(.*?)]\\s?\\([ \\t]*()<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*(?:(['\"])(.*?)\\6[ \\t]*)?\\)/g,\n      referenceRegExp = /!\\[([^\\]]*?)] ?(?:\\n *)?\\[(.*?)]()()()()()/g;\n\n  function writeImageTag (wholeMatch, altText, linkId, url, width, height, m5, title) {\n\n    var gUrls   = globals.gUrls,\n        gTitles = globals.gTitles,\n        gDims   = globals.gDimensions;\n\n    linkId = linkId.toLowerCase();\n\n    if (!title) {\n      title = '';\n    }\n\n    if (url === '' || url === null) {\n      if (linkId === '' || linkId === null) {\n        // lower-case and turn embedded newlines into spaces\n        linkId = altText.toLowerCase().replace(/ ?\\n/g, ' ');\n      }\n      url = '#' + linkId;\n\n      if (!showdown.helper.isUndefined(gUrls[linkId])) {\n        url = gUrls[linkId];\n        if (!showdown.helper.isUndefined(gTitles[linkId])) {\n          title = gTitles[linkId];\n        }\n        if (!showdown.helper.isUndefined(gDims[linkId])) {\n          width = gDims[linkId].width;\n          height = gDims[linkId].height;\n        }\n      } else {\n        return wholeMatch;\n      }\n    }\n\n    altText = altText.replace(/\"/g, '&quot;');\n    altText = showdown.helper.escapeCharacters(altText, '*_', false);\n    url = showdown.helper.escapeCharacters(url, '*_', false);\n    var result = '<img src=\"' + url + '\" alt=\"' + altText + '\"';\n\n    if (title) {\n      title = title.replace(/\"/g, '&quot;');\n      title = showdown.helper.escapeCharacters(title, '*_', false);\n      result += ' title=\"' + title + '\"';\n    }\n\n    if (width && height) {\n      width  = (width === '*') ? 'auto' : width;\n      height = (height === '*') ? 'auto' : height;\n\n      result += ' width=\"' + width + '\"';\n      result += ' height=\"' + height + '\"';\n    }\n\n    result += ' />';\n\n    return result;\n  }\n\n  // First, handle reference-style labeled images: ![alt text][id]\n  text = text.replace(referenceRegExp, writeImageTag);\n\n  // Next, handle inline images:  ![alt text](url =<width>x<height> \"optional title\")\n  text = text.replace(inlineRegExp, writeImageTag);\n\n  text = globals.converter._dispatch('images.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('italicsAndBold', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('italicsAndBold.before', text, options, globals);\n\n  if (options.literalMidWordUnderscores) {\n    //underscores\n    // Since we are consuming a \\s character, we need to add it\n    text = text.replace(/(^|\\s|>|\\b)__(?=\\S)([\\s\\S]+?)__(?=\\b|<|\\s|$)/gm, '$1<strong>$2</strong>');\n    text = text.replace(/(^|\\s|>|\\b)_(?=\\S)([\\s\\S]+?)_(?=\\b|<|\\s|$)/gm, '$1<em>$2</em>');\n    //asterisks\n    text = text.replace(/(\\*\\*)(?=\\S)([^\\r]*?\\S[*]*)\\1/g, '<strong>$2</strong>');\n    text = text.replace(/(\\*)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n\n  } else {\n    // <strong> must go first:\n    text = text.replace(/(\\*\\*|__)(?=\\S)([^\\r]*?\\S[*_]*)\\1/g, '<strong>$2</strong>');\n    text = text.replace(/(\\*|_)(?=\\S)([^\\r]*?\\S)\\1/g, '<em>$2</em>');\n  }\n\n  text = globals.converter._dispatch('italicsAndBold.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Form HTML ordered (numbered) and unordered (bulleted) lists.\n */\nshowdown.subParser('lists', function (text, options, globals) {\n  'use strict';\n  text = globals.converter._dispatch('lists.before', text, options, globals);\n\n  /**\n   * Process the contents of a single ordered or unordered list, splitting it\n   * into individual list items.\n   * @param {string} listStr\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function processListItems (listStr, trimTrailing) {\n    // The $g_list_level global keeps track of when we're inside a list.\n    // Each time we enter a list, we increment it; when we leave a list,\n    // we decrement. If it's zero, we're not in a list anymore.\n    //\n    // We do this because when we're not inside a list, we want to treat\n    // something like this:\n    //\n    //    I recommend upgrading to version\n    //    8. Oops, now this line is treated\n    //    as a sub-list.\n    //\n    // As a single paragraph, despite the fact that the second line starts\n    // with a digit-period-space sequence.\n    //\n    // Whereas when we're inside a list (or sub-list), that line will be\n    // treated as the start of a sub-list. What a kludge, huh? This is\n    // an aspect of Markdown's syntax that's hard to parse perfectly\n    // without resorting to mind-reading. Perhaps the solution is to\n    // change the syntax rules such that sub-lists must start with a\n    // starting cardinal number; e.g. \"1.\" or \"a.\".\n    globals.gListLevel++;\n\n    // trim trailing blank lines:\n    listStr = listStr.replace(/\\n{2,}$/, '\\n');\n\n    // attacklab: add sentinel to emulate \\z\n    listStr += '~0';\n\n    var rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0| {0,3}([*+-]|\\d+[.])[ \\t]+))/gm,\n        isParagraphed = (/\\n[ \\t]*\\n(?!~0)/.test(listStr));\n\n    // Since version 1.5, nesting sublists requires 4 spaces (or 1 tab) indentation,\n    // which is a syntax breaking change\n    // activating this option reverts to old behavior\n    if (options.disableForced4SpacesIndentedSublists) {\n      rgx = /(\\n)?(^ {0,3})([*+-]|\\d+[.])[ \\t]+((\\[(x|X| )?])?[ \\t]*[^\\r]+?(\\n{1,2}))(?=\\n*(~0|\\2([*+-]|\\d+[.])[ \\t]+))/gm;\n    }\n\n    listStr = listStr.replace(rgx, function (wholeMatch, m1, m2, m3, m4, taskbtn, checked) {\n      checked = (checked && checked.trim() !== '');\n\n      var item = showdown.subParser('outdent')(m4, options, globals),\n          bulletStyle = '';\n\n      // Support for github tasklists\n      if (taskbtn && options.tasklists) {\n        bulletStyle = ' class=\"task-list-item\" style=\"list-style-type: none;\"';\n        item = item.replace(/^[ \\t]*\\[(x|X| )?]/m, function () {\n          var otp = '<input type=\"checkbox\" disabled style=\"margin: 0px 0.35em 0.25em -1.6em; vertical-align: middle;\"';\n          if (checked) {\n            otp += ' checked';\n          }\n          otp += '>';\n          return otp;\n        });\n      }\n\n      // ISSUE #312\n      // This input: - - - a\n      // causes trouble to the parser, since it interprets it as:\n      // <ul><li><li><li>a</li></li></li></ul>\n      // instead of:\n      // <ul><li>- - a</li></ul>\n      // So, to prevent it, we will put a marker (~A)in the beginning of the line\n      // Kind of hackish/monkey patching, but seems more effective than overcomplicating the list parser\n      item = item.replace(/^([-*+]|\\d\\.)[ \\t]+[\\S\\n ]*/g, function (wm2) {\n        return '~A' + wm2;\n      });\n\n      // m1 - Leading line or\n      // Has a double return (multi paragraph) or\n      // Has sublist\n      if (m1 || (item.search(/\\n{2,}/) > -1)) {\n        item = showdown.subParser('githubCodeBlocks')(item, options, globals);\n        item = showdown.subParser('blockGamut')(item, options, globals);\n      } else {\n        // Recursion for sub-lists:\n        item = showdown.subParser('lists')(item, options, globals);\n        item = item.replace(/\\n$/, ''); // chomp(item)\n        item = showdown.subParser('hashHTMLBlocks')(item, options, globals);\n        // Colapse double linebreaks\n        item = item.replace(/\\n\\n+/g, '\\n\\n');\n        // replace double linebreaks with a placeholder\n        item = item.replace(/\\n\\n/g, '~B');\n        if (isParagraphed) {\n          item = showdown.subParser('paragraphs')(item, options, globals);\n        } else {\n          item = showdown.subParser('spanGamut')(item, options, globals);\n        }\n        item = item.replace(/~B/g, '\\n\\n');\n      }\n\n      // now we need to remove the marker (~A)\n      item = item.replace('~A', '');\n      // we can finally wrap the line in list item tags\n      item =  '<li' + bulletStyle + '>' + item + '</li>\\n';\n\n      return item;\n    });\n\n    // attacklab: strip sentinel\n    listStr = listStr.replace(/~0/g, '');\n\n    globals.gListLevel--;\n\n    if (trimTrailing) {\n      listStr = listStr.replace(/\\s+$/, '');\n    }\n\n    return listStr;\n  }\n\n  /**\n   * Check and parse consecutive lists (better fix for issue #142)\n   * @param {string} list\n   * @param {string} listType\n   * @param {boolean} trimTrailing\n   * @returns {string}\n   */\n  function parseConsecutiveLists(list, listType, trimTrailing) {\n    // check if we caught 2 or more consecutive lists by mistake\n    // we use the counterRgx, meaning if listType is UL we look for OL and vice versa\n    var olRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?\\d+\\.[ \\t]/gm : /^ {0,3}\\d+\\.[ \\t]/gm,\n        ulRgx = (options.disableForced4SpacesIndentedSublists) ? /^ ?[*+-][ \\t]/gm : /^ {0,3}[*+-][ \\t]/gm,\n        counterRxg = (listType === 'ul') ? olRgx : ulRgx,\n        result = '';\n\n    if (list.search(counterRxg) !== -1) {\n      (function parseCL(txt) {\n        var pos = txt.search(counterRxg);\n        if (pos !== -1) {\n          // slice\n          result += '\\n<' + listType + '>\\n' + processListItems(txt.slice(0, pos), !!trimTrailing) + '</' + listType + '>\\n';\n\n          // invert counterType and listType\n          listType = (listType === 'ul') ? 'ol' : 'ul';\n          counterRxg = (listType === 'ul') ? olRgx : ulRgx;\n\n          //recurse\n          parseCL(txt.slice(pos));\n        } else {\n          result += '\\n<' + listType + '>\\n' + processListItems(txt, !!trimTrailing) + '</' + listType + '>\\n';\n        }\n      })(list);\n    } else {\n      result = '\\n<' + listType + '>\\n' + processListItems(list, !!trimTrailing) + '</' + listType + '>\\n';\n    }\n\n    return result;\n  }\n\n  // add sentinel to hack around khtml/safari bug:\n  // http://bugs.webkit.org/show_bug.cgi?id=11231\n  text += '~0';\n\n  if (globals.gListLevel) {\n    text = text.replace(/^(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, list, m2) {\n        var listType = (m2.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, true);\n      }\n    );\n  } else {\n    text = text.replace(/(\\n\\n|^\\n?)(( {0,3}([*+-]|\\d+[.])[ \\t]+)[^\\r]+?(~0|\\n{2,}(?=\\S)(?![ \\t]*(?:[*+-]|\\d+[.])[ \\t]+)))/gm,\n      function (wholeMatch, m1, list, m3) {\n        var listType = (m3.search(/[*+-]/g) > -1) ? 'ul' : 'ol';\n        return parseConsecutiveLists(list, listType, false);\n      }\n    );\n  }\n\n  // strip sentinel\n  text = text.replace(/~0/, '');\n  text = globals.converter._dispatch('lists.after', text, options, globals);\n  return text;\n});\n\r\n/**\n * Remove one level of line-leading tabs or spaces\n */\nshowdown.subParser('outdent', function (text) {\n  'use strict';\n\n  // attacklab: hack around Konqueror 3.5.4 bug:\n  // \"----------bug\".replace(/^-/g,\"\") == \"bug\"\n  text = text.replace(/^(\\t|[ ]{1,4})/gm, '~0'); // attacklab: g_tab_width\n\n  // attacklab: clean up hack\n  text = text.replace(/~0/g, '');\n\n  return text;\n});\n\r\n/**\n *\n */\nshowdown.subParser('paragraphs', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('paragraphs.before', text, options, globals);\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n\n  var grafs = text.split(/\\n{2,}/g),\n      grafsOut = [],\n      end = grafs.length; // Wrap <p> tags\n\n  for (var i = 0; i < end; i++) {\n    var str = grafs[i];\n    // if this is an HTML marker, copy it\n    if (str.search(/~(K|G)(\\d+)\\1/g) >= 0) {\n      grafsOut.push(str);\n    } else {\n      str = showdown.subParser('spanGamut')(str, options, globals);\n      str = str.replace(/^([ \\t]*)/g, '<p>');\n      str += '</p>';\n      grafsOut.push(str);\n    }\n  }\n\n  /** Unhashify HTML blocks */\n  end = grafsOut.length;\n  for (i = 0; i < end; i++) {\n    var blockText = '',\n        grafsOutIt = grafsOut[i],\n        codeFlag = false;\n    // if this is a marker for an html block...\n    while (grafsOutIt.search(/~(K|G)(\\d+)\\1/) >= 0) {\n      var delim = RegExp.$1,\n          num   = RegExp.$2;\n\n      if (delim === 'K') {\n        blockText = globals.gHtmlBlocks[num];\n      } else {\n        // we need to check if ghBlock is a false positive\n        if (codeFlag) {\n          // use encoded version of all text\n          blockText = showdown.subParser('encodeCode')(globals.ghCodeBlocks[num].text);\n        } else {\n          blockText = globals.ghCodeBlocks[num].codeblock;\n        }\n      }\n      blockText = blockText.replace(/\\$/g, '$$$$'); // Escape any dollar signs\n\n      grafsOutIt = grafsOutIt.replace(/(\\n\\n)?~(K|G)\\d+\\2(\\n\\n)?/, blockText);\n      // Check if grafsOutIt is a pre->code\n      if (/^<pre\\b[^>]*>\\s*<code\\b[^>]*>/.test(grafsOutIt)) {\n        codeFlag = true;\n      }\n    }\n    grafsOut[i] = grafsOutIt;\n  }\n  text = grafsOut.join('\\n');\n  // Strip leading and trailing lines:\n  text = text.replace(/^\\n+/g, '');\n  text = text.replace(/\\n+$/g, '');\n  return globals.converter._dispatch('paragraphs.after', text, options, globals);\n});\n\r\n/**\n * Run extension\n */\nshowdown.subParser('runExtension', function (ext, text, options, globals) {\n  'use strict';\n\n  if (ext.filter) {\n    text = ext.filter(text, globals.converter, options);\n\n  } else if (ext.regex) {\n    // TODO remove this when old extension loading mechanism is deprecated\n    var re = ext.regex;\n    if (!re instanceof RegExp) {\n      re = new RegExp(re, 'g');\n    }\n    text = text.replace(re, ext.replace);\n  }\n\n  return text;\n});\n\r\n/**\n * These are all the transformations that occur *within* block-level\n * tags like paragraphs, headers, and list items.\n */\nshowdown.subParser('spanGamut', function (text, options, globals) {\n  'use strict';\n\n  text = globals.converter._dispatch('spanGamut.before', text, options, globals);\n  text = showdown.subParser('codeSpans')(text, options, globals);\n  text = showdown.subParser('escapeSpecialCharsWithinTagAttributes')(text, options, globals);\n  text = showdown.subParser('encodeBackslashEscapes')(text, options, globals);\n\n  // Process anchor and image tags. Images must come first,\n  // because ![foo][f] looks like an anchor.\n  text = showdown.subParser('images')(text, options, globals);\n  text = showdown.subParser('anchors')(text, options, globals);\n\n  // Make links out of things like `<http://example.com/>`\n  // Must come after _DoAnchors(), because you can use < and >\n  // delimiters in inline links like [this](<url>).\n  text = showdown.subParser('autoLinks')(text, options, globals);\n  text = showdown.subParser('encodeAmpsAndAngles')(text, options, globals);\n  text = showdown.subParser('italicsAndBold')(text, options, globals);\n  text = showdown.subParser('strikethrough')(text, options, globals);\n\n  // Do hard breaks\n  if (options.simpleLineBreaks) {\n    // GFM style hard breaks\n    text = text.replace(/\\n/g, '<br />\\n');\n  } else {\n    // Vanilla hard breaks\n    text = text.replace(/  +\\n/g, '<br />\\n');\n  }\n\n  text = globals.converter._dispatch('spanGamut.after', text, options, globals);\n  return text;\n});\n\r\nshowdown.subParser('strikethrough', function (text, options, globals) {\n  'use strict';\n\n  if (options.strikethrough) {\n    text = globals.converter._dispatch('strikethrough.before', text, options, globals);\n    text = text.replace(/(?:~T){2}([\\s\\S]+?)(?:~T){2}/g, '<del>$1</del>');\n    text = globals.converter._dispatch('strikethrough.after', text, options, globals);\n  }\n\n  return text;\n});\n\r\n/**\n * Strip any lines consisting only of spaces and tabs.\n * This makes subsequent regexs easier to write, because we can\n * match consecutive blank lines with /\\n+/ instead of something\n * contorted like /[ \\t]*\\n+/\n */\nshowdown.subParser('stripBlankLines', function (text) {\n  'use strict';\n  return text.replace(/^[ \\t]+$/mg, '');\n});\n\r\n/**\n * Strips link definitions from text, stores the URLs and titles in\n * hash references.\n * Link defs are in the form: ^[id]: url \"optional title\"\n */\nshowdown.subParser('stripLinkDefinitions', function (text, options, globals) {\n  'use strict';\n\n  var regex = /^ {0,3}\\[(.+)]:[ \\t]*\\n?[ \\t]*<?(\\S+?)>?(?: =([*\\d]+[A-Za-z%]{0,4})x([*\\d]+[A-Za-z%]{0,4}))?[ \\t]*\\n?[ \\t]*(?:(\\n*)[\"|'(](.+?)[\"|')][ \\t]*)?(?:\\n+|(?=~0))/gm;\n\n  // attacklab: sentinel workarounds for lack of \\A and \\Z, safari\\khtml bug\n  text += '~0';\n\n  text = text.replace(regex, function (wholeMatch, linkId, url, width, height, blankLines, title) {\n    linkId = linkId.toLowerCase();\n    globals.gUrls[linkId] = showdown.subParser('encodeAmpsAndAngles')(url);  // Link IDs are case-insensitive\n\n    if (blankLines) {\n      // Oops, found blank lines, so it's not a title.\n      // Put back the parenthetical statement we stole.\n      return blankLines + title;\n\n    } else {\n      if (title) {\n        globals.gTitles[linkId] = title.replace(/\"|'/g, '&quot;');\n      }\n      if (options.parseImgDimensions && width && height) {\n        globals.gDimensions[linkId] = {\n          width:  width,\n          height: height\n        };\n      }\n    }\n    // Completely remove the definition from the text\n    return '';\n  });\n\n  // attacklab: strip sentinel\n  text = text.replace(/~0/, '');\n\n  return text;\n});\n\r\nshowdown.subParser('tables', function (text, options, globals) {\n  'use strict';\n\n  if (!options.tables) {\n    return text;\n  }\n\n  var tableRgx = /^ {0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[\\s\\S]+?(?:\\n\\n|~0)/gm;\n\n  function parseStyles(sLine) {\n    if (/^:[ \\t]*--*$/.test(sLine)) {\n      return ' style=\"text-align:left;\"';\n    } else if (/^--*[ \\t]*:[ \\t]*$/.test(sLine)) {\n      return ' style=\"text-align:right;\"';\n    } else if (/^:[ \\t]*--*[ \\t]*:$/.test(sLine)) {\n      return ' style=\"text-align:center;\"';\n    } else {\n      return '';\n    }\n  }\n\n  function parseHeaders(header, style) {\n    var id = '';\n    header = header.trim();\n    if (options.tableHeaderId) {\n      id = ' id=\"' + header.replace(/ /g, '_').toLowerCase() + '\"';\n    }\n    header = showdown.subParser('spanGamut')(header, options, globals);\n\n    return '<th' + id + style + '>' + header + '</th>\\n';\n  }\n\n  function parseCells(cell, style) {\n    var subText = showdown.subParser('spanGamut')(cell, options, globals);\n    return '<td' + style + '>' + subText + '</td>\\n';\n  }\n\n  function buildTable(headers, cells) {\n    var tb = '<table>\\n<thead>\\n<tr>\\n',\n        tblLgn = headers.length;\n\n    for (var i = 0; i < tblLgn; ++i) {\n      tb += headers[i];\n    }\n    tb += '</tr>\\n</thead>\\n<tbody>\\n';\n\n    for (i = 0; i < cells.length; ++i) {\n      tb += '<tr>\\n';\n      for (var ii = 0; ii < tblLgn; ++ii) {\n        tb += cells[i][ii];\n      }\n      tb += '</tr>\\n';\n    }\n    tb += '</tbody>\\n</table>\\n';\n    return tb;\n  }\n\n  text = globals.converter._dispatch('tables.before', text, options, globals);\n\n  text = text.replace(tableRgx, function (rawTable) {\n\n    var i, tableLines = rawTable.split('\\n');\n\n    // strip wrong first and last column if wrapped tables are used\n    for (i = 0; i < tableLines.length; ++i) {\n      if (/^ {0,3}\\|/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/^ {0,3}\\|/, '');\n      }\n      if (/\\|[ \\t]*$/.test(tableLines[i])) {\n        tableLines[i] = tableLines[i].replace(/\\|[ \\t]*$/, '');\n      }\n    }\n\n    var rawHeaders = tableLines[0].split('|').map(function (s) { return s.trim();}),\n        rawStyles = tableLines[1].split('|').map(function (s) { return s.trim();}),\n        rawCells = [],\n        headers = [],\n        styles = [],\n        cells = [];\n\n    tableLines.shift();\n    tableLines.shift();\n\n    for (i = 0; i < tableLines.length; ++i) {\n      if (tableLines[i].trim() === '') {\n        continue;\n      }\n      rawCells.push(\n        tableLines[i]\n          .split('|')\n          .map(function (s) {\n            return s.trim();\n          })\n      );\n    }\n\n    if (rawHeaders.length < rawStyles.length) {\n      return rawTable;\n    }\n\n    for (i = 0; i < rawStyles.length; ++i) {\n      styles.push(parseStyles(rawStyles[i]));\n    }\n\n    for (i = 0; i < rawHeaders.length; ++i) {\n      if (showdown.helper.isUndefined(styles[i])) {\n        styles[i] = '';\n      }\n      headers.push(parseHeaders(rawHeaders[i], styles[i]));\n    }\n\n    for (i = 0; i < rawCells.length; ++i) {\n      var row = [];\n      for (var ii = 0; ii < headers.length; ++ii) {\n        if (showdown.helper.isUndefined(rawCells[i][ii])) {\n\n        }\n        row.push(parseCells(rawCells[i][ii], styles[ii]));\n      }\n      cells.push(row);\n    }\n\n    return buildTable(headers, cells);\n  });\n\n  text = globals.converter._dispatch('tables.after', text, options, globals);\n\n  return text;\n});\n\r\n/**\n * Swap back in all the special characters we've hidden.\n */\nshowdown.subParser('unescapeSpecialChars', function (text) {\n  'use strict';\n\n  text = text.replace(/~E(\\d+)E/g, function (wholeMatch, m1) {\n    var charCodeToReplace = parseInt(m1);\n    return String.fromCharCode(charCodeToReplace);\n  });\n  return text;\n});\n\r\nvar root = this;\n\n// CommonJS/nodeJS Loader\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = showdown;\n\n// AMD Loader\n} else if (typeof define === 'function' && define.amd) {\n  define(function () {\n    'use strict';\n    return showdown;\n  });\n\n// Regular Browser loader\n} else {\n  root.showdown = showdown;\n}\n}).call(this);\r\n\n//# sourceMappingURL=showdown.js.map\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/showdown/dist/showdown.js","import { HTMLElement } from './HTMLElement';\r\n\r\nexport class TextareaEditor extends HTMLElement{\r\n\r\n\t/**\r\n\t * Represents TextareaEditor\r\n\t *\r\n\t * @constructor\r\n\t * @param {String} className\r\n\t * @param {Element} parent\r\n\t */\r\n\tconstructor(className,parent){\r\n\t\tsuper('textarea',className,parent);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the initialized editor element\r\n\t *\r\n\t * @returns {Element} - element of the editor\r\n\t */\r\n\tget getEditor(){\r\n\t\treturn this._element;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the content of the editor\r\n\t *\r\n\t * @returns {String} - the content of editor\r\n\t */\r\n\tgetContent(){\r\n\t\treturn this._element.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the content of the editor\r\n\t *\r\n\t * @param {String} content - content for the editor\r\n\t */\r\n\tsetContent(content){\r\n\t\tthis._element.value = content;\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative for getContent()\r\n\t * @see getContent\r\n\t *\r\n\t * @returns {String} - the content of editor\r\n\t */\r\n\tgetMarkdown(){\r\n\t\treturn this.getContent();\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative for setContent()\r\n\t * @see setContent\r\n\t *\r\n\t * @param {String} markdown - content for the editor\r\n\t */\r\n\tsetMarkdown(markdown){\r\n\t\tthis.setContent(markdown);\r\n\t}\r\n\r\n\t/**\r\n\t * Append the given value to the content of the editor\r\n\t *\r\n\t * @param {String} content - additional content for the editor\r\n\t */\r\n\tappendContent(content){\r\n\t\tthis._element.value = this._editor.value + content;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepend the given value to the content of the editor\r\n\t *\r\n\t * @param {String} content - additional content for the editor\r\n\t */\r\n\tprependContent(content){\r\n\t\tthis._element.value = content + this._editor.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Refresh preview automatically if the editor content is changed\r\n\t *\r\n\t * @param {Element|Array} element - the element or array of elements that will contain the compiled html content\r\n\t * @param {Converter} converter - the converter that converts the markdown to html\r\n\t */\r\n\tconvertMarkdownToHtmlEventListener(element, converter){\r\n\t\tthis.addEventListener('input',()=>{\r\n\t\t\tlet html = converter.makeHtml(this.getContent());\r\n\t\t\tif(element instanceof Array) {\r\n\t\t\t\tfor(let e of element) {\r\n\t\t\t\t\te.innerHTML = html;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\telement.innerHTML = html;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Copy content of editor to hidden input automatically\r\n\t *\r\n\t * @param {Element} element - this element gets the content of the editor\r\n\t */\r\n\tcopyMarkdownContentToHiddenInputEventListener(element){\r\n\t\tthis.addEventListener('input',() => element.innerHTML = this.getContent());\r\n\t}\r\n\r\n\t/**\r\n\t * Process the content by triggering the input event\r\n\t */\r\n\tprocessContent(){\r\n\t\tlet e = new Event('input');\r\n\t\tthis._element.dispatchEvent(e);\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/TextareaEditor.js","export class HTMLElement{\r\n\r\n\t/**\r\n\t * Represents a HTMLElement\r\n\t *\r\n\t * @constructor\r\n\t * @param {String} type - the string value of the html tag\r\n\t * @param {String} className - the name of the html element\r\n\t * @param {Element} parent - the parent element of the created element\r\n\t * @param {Object} params - additional parameters for the created element\r\n\t */\r\n\tconstructor(type, className, parent, params = {}){\r\n\t\tthis.init(type, className, parent, params);\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize HTML element\r\n\t * Get a type, a className and additional params to create a html element\r\n\t * and append the created element to the parent\r\n\t *\r\n\t * @param {String} type - the string value of the html tag\r\n\t * @param {String} className - the name of the html element\r\n\t * @param {Element} parent - the parent element of the created element\r\n\t * @param {Object} params - additional parameters for the created element\r\n\t */\r\n\tinit(type, className, parent, params){\r\n\t\t// Create element\r\n\t\tlet element = HTMLElement.createElement(type,className,params);\r\n\r\n\t\t// Append element to parent\r\n\t\tHTMLElement.appendElementToParent(element,parent);\r\n\r\n\t\t// Get the element from the dom\r\n\t\tthis.setElementByClassName(className);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the element\r\n\t *\r\n\t * @returns {Element} - the element\r\n\t */\r\n\tget getElement(){\r\n\t\treturn this._element;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the element\r\n\t *\r\n\t * @param {Element} element - the new value of the element\r\n\t */\r\n\tset setElement(element){\r\n\t\tthis._element = element;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the element by the class name with querySelector\r\n\t *\r\n\t * @param {String} className - the string value of the class name without dot\r\n\t */\r\n\tsetElementByClassName(className){\r\n\t\tthis._element = document.querySelector(`.${className}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Create an eventListener for the html element\r\n\t *\r\n\t * @param {String} event - the string value of the event name\r\n\t * @param {Function} closure - the function that should be run when the event is fired\r\n\t */\r\n\taddEventListener(event,closure){\r\n\t\tthis._element.addEventListener(event,closure);\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new element of given type with class name and parameters\r\n\t *\r\n\t * @param {String} type - the string value of type of the new element\r\n\t * @param {String} className - the string value of the class attribute of the element without dot\r\n\t * @param {Object} params - parameter object to set attribute of the element\r\n\t * @returns {Element} - return a new element\r\n\t */\r\n\tstatic createElement(type,className,params){\r\n\t\tlet element = document.createElement(type);\r\n\t\telement.className = className;\r\n\r\n\t\tfor(let key of Object.keys(params)) {\r\n\t\t\telement[key] = params[key];\r\n\t\t}\r\n\r\n\t\treturn element;\r\n\t}\r\n\r\n\t/**\r\n\t * Append the element to the parent element as a child\r\n\t *\r\n\t * @param {Element} element - the element that will be appended to the parent\r\n\t * @param {Element} parent - the parent element that will contain the given element\r\n\t */\r\n\tstatic appendElementToParent(element,parent){\r\n\t\tparent.appendChild(element);\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/HTMLElement.js","import { HTMLElement } from './HTMLElement';\r\n\r\nexport class Preview extends HTMLElement{\r\n\r\n\t/**\r\n\t * Represents Preview\r\n\t *\r\n\t * @constructor\r\n\t * @param className\r\n\t * @param parent\r\n\t */\r\n\tconstructor(className,parent){\r\n\t\tsuper('div',className,parent);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the preview element\r\n\t *\r\n\t * @returns {Element} - the preview element\r\n\t */\r\n\tget getPreview(){\r\n\t\treturn this._element;\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Preview.js","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-(\\w+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = _self.Prism = {\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function (o) {\n\t\t\tvar type = _.util.type(o);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tvar clone = {};\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\t// Check for existence for IE8\n\t\t\t\t\treturn o.map && o.map(function(v) { return _.util.clone(v); });\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn grammar;\n\t\t\t}\n\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || document.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tparent = element.parentNode;\n\n\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code || !env.grammar) {\n\t\t\tif (env.code) {\n\t\t\t\tenv.element.textContent = env.code;\n\t\t\t}\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tenv.highlightedCode = evt.data;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tcallback && callback.call(element);\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar tokens = _.tokenize(text, grammar);\n\t\treturn Token.stringify(_.util.encode(tokens), language);\n\t},\n\n\ttokenize: function(text, grammar, language) {\n\t\tvar Token = _.Token;\n\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\ttokenloop: for (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i=0, pos = 0; i<strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\tbreak tokenloop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t    delNum = 1;\n\n\t\t\t\t\t// Greedy patterns can override/remove up to two previously matched tokens\n\t\t\t\t\tif (!match && greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tmatch = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && p < to; ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\t * If strarr[k - 1] is greedy we are in conflict with another greedy pattern\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (strarr[i] instanceof Token || strarr[k - 1].greedy) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1].length;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n};\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (_.util.type(o) === 'Array') {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (env.type == 'comment') {\n\t\tenv.attributes['spellcheck'] = 'true';\n\t}\n\n\tif (o.alias) {\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _self.Prism;\n\t}\n \t// In worker\n\t_self.addEventListener('message', function(evt) {\n\t\tvar message = JSON.parse(evt.data),\n\t\t    lang = message.language,\n\t\t    code = message.code,\n\t\t    immediateClose = message.immediateClose;\n\n\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\tif (immediateClose) {\n\t\t\t_self.close();\n\t\t}\n\t}, false);\n\n\treturn _self.Prism;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (document.addEventListener && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\w\\W]*?-->/,\n\t'prolog': /<\\?[\\w\\W]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\w\\W]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /[=>\"']/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nPrism.languages.xml = Prism.languages.markup;\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\nPrism.languages.css = {\n\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\n\t'atrule': {\n\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\n\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\n\t'string': {\n\t\tpattern: /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\n\t'important': /\\B!important\\b/i,\n\t'function': /[-a-z0-9]+(?=\\()/i,\n\t'punctuation': /[(){};:]/\n};\n\nPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'style': {\n\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.css,\n\t\t\talias: 'language-css'\n\t\t}\n\t});\n\t\n\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t'style-attr': {\n\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\n\t\t\tinside: {\n\t\t\t\t'attr-name': {\n\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\n\t\t\t\t},\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t}\n\t\t\t},\n\t\t\talias: 'language-css'\n\t\t}\n\t}, Prism.languages.markup.tag);\n}\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /(\\.|\\\\)/\n\t\t}\n\t},\n\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(true|false)\\b/,\n\t'function': /[a-z0-9_]+(?=\\()/i,\n\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*\\*?|\\/|~|\\^|%|\\.{3}/\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t\talias: 'language-javascript'\n\t\t}\n\t});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\tself.Prism.fileHighlight = function() {\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tif(Array.prototype.forEach) { // Check to prevent error in IE8\n\t\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\t\tvar language, parent = pre;\n\t\t\t\tvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;\n\t\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\t\tparent = parent.parentNode;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t\t}\n\n\t\t\t\tif (!language) {\n\t\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t\t}\n\n\t\t\t\tvar code = document.createElement('code');\n\t\t\t\tcode.className = 'language-' + language;\n\n\t\t\t\tpre.textContent = '';\n\n\t\t\t\tcode.textContent = 'Loading…';\n\n\t\t\t\tpre.appendChild(code);\n\n\t\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\t\txhr.open('GET', src, true);\n\n\t\t\t\txhr.onreadystatechange = function () {\n\t\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\txhr.send(null);\n\t\t\t});\n\t\t}\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./~/prismjs/prism.js"],"sourceRoot":""}